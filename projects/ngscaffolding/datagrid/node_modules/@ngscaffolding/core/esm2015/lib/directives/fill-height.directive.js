import { HostListener, Directive, Input, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/logging/logging.service";
export class FillHeightDirective {
    constructor(el, logger) {
        this.el = el;
        this.logger = logger;
        this.footerElement = null;
        this.fixedHeight = 0;
        this.relativeToParentPercent = 0;
    }
    ngAfterViewInit() {
        this.calculateAndSetElementHeight();
    }
    onResize(event) {
        this.calculateAndSetElementHeight();
    }
    calculateAndSetElementHeight() {
        if (this.relativeToParentPercent > 0) {
            const parentHeight = this.el.nativeElement.parentNode.parentNode
                .parentNode.parentNode.parentNode.parentNode.offsetHeight;
            if (parentHeight > 0) {
                this.el.nativeElement.style.height = `${parentHeight * (this.relativeToParentPercent / 100)}px`;
            }
        }
        else if (this.fixedHeight > 0) {
            this.el.nativeElement.style.height = `${this.fixedHeight}px`;
        }
        else {
            this.el.nativeElement.style.overflow = 'auto';
            let windowHeight = window.innerHeight;
            if (windowHeight === 0) {
                this.logger.error('FillHeight: Window reported zero height');
                windowHeight = 800;
            }
            const elementOffsetTop = this.getElementOffsetTop();
            const elementMarginBottom = this.el.nativeElement.style.marginBottom;
            const footerElementMargin = this.getfooterElementMargin();
            this.el.nativeElement.style.height = `${windowHeight - footerElementMargin - elementOffsetTop - 16}px`;
        }
    }
    getElementOffsetTop() {
        return this.el.nativeElement.getBoundingClientRect().top;
    }
    getfooterElementMargin() {
        if (!this.footerElement) {
            return 0;
        }
        const footerStyle = window.getComputedStyle(this.footerElement);
        return parseInt(footerStyle.height, 10);
    }
}
FillHeightDirective.ɵfac = function FillHeightDirective_Factory(t) { return new (t || FillHeightDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LoggingService)); };
FillHeightDirective.ɵdir = i0.ɵɵdefineDirective({ type: FillHeightDirective, selectors: [["", "ngsFillHeight", ""]], hostBindings: function FillHeightDirective_HostBindings(rf, ctx) { if (rf & 1) {
        i0.ɵɵlistener("resize", function FillHeightDirective_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, i0.ɵɵresolveWindow);
    } }, inputs: { footerElement: "footerElement", fixedHeight: "fixedHeight", relativeToParentPercent: "relativeToParentPercent" } });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(FillHeightDirective, [{
        type: Directive,
        args: [{ selector: '[ngsFillHeight]' }]
    }], function () { return [{ type: i0.ElementRef }, { type: i1.LoggingService }]; }, { footerElement: [{
            type: Input
        }], fixedHeight: [{
            type: Input
        }], relativeToParentPercent: [{
            type: Input
        }], onResize: [{
            type: HostListener,
            args: ['window:resize', ['$event']]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbC1oZWlnaHQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uL3Byb2plY3RzL25nc2NhZmZvbGRpbmcvY29yZS9zcmMvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9maWxsLWhlaWdodC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFlBQVksRUFDWixTQUFTLEVBRVQsS0FBSyxHQUVOLE1BQU0sZUFBZSxDQUFDOzs7QUFJdkIsTUFBTSxPQUFPLG1CQUFtQjtJQUs5QixZQUFvQixFQUFjLEVBQVUsTUFBc0I7UUFBOUMsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUFVLFdBQU0sR0FBTixNQUFNLENBQWdCO1FBSnpELGtCQUFhLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLGdCQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCLDRCQUF1QixHQUFHLENBQUMsQ0FBQztJQUVnQyxDQUFDO0lBRXRFLGVBQWU7UUFDYixJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBR0QsUUFBUSxDQUFDLEtBQUs7UUFDWixJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRU8sNEJBQTRCO1FBQ2xDLElBQUksSUFBSSxDQUFDLHVCQUF1QixHQUFHLENBQUMsRUFBRTtZQUNwQyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsVUFBVTtpQkFDN0QsVUFBVSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQztZQUM1RCxJQUFJLFlBQVksR0FBRyxDQUFDLEVBQUU7Z0JBQ3BCLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FDbkMsWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLHVCQUF1QixHQUFHLEdBQUcsQ0FDcEQsSUFBSSxDQUFDO2FBQ047U0FDRjthQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQztTQUM5RDthQUFNO1lBQ0wsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUM7WUFDOUMsSUFBSSxZQUFZLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQztZQUN0QyxJQUFJLFlBQVksS0FBSyxDQUFDLEVBQUU7Z0JBQ3RCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUM7Z0JBQzdELFlBQVksR0FBRyxHQUFHLENBQUM7YUFDcEI7WUFDRCxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1lBQ3BELE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztZQUNyRSxNQUFNLG1CQUFtQixHQUFHLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO1lBRTFELElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FDbkMsWUFBWSxHQUFHLG1CQUFtQixHQUFHLGdCQUFnQixHQUFHLEVBQzFELElBQUksQ0FBQztTQUNOO0lBQ0gsQ0FBQztJQUVPLG1CQUFtQjtRQUN6QixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUMsR0FBRyxDQUFDO0lBQzNELENBQUM7SUFFTyxzQkFBc0I7UUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdkIsT0FBTyxDQUFDLENBQUM7U0FDVjtRQUNELE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDaEUsT0FBTyxRQUFRLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMxQyxDQUFDOztzRkF0RFUsbUJBQW1CO3dEQUFuQixtQkFBbUI7d0dBQW5CLG9CQUFnQjs7a0RBQWhCLG1CQUFtQjtjQUQvQixTQUFTO2VBQUMsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUU7MEZBRS9CLGFBQWE7a0JBQXJCLEtBQUs7WUFDRyxXQUFXO2tCQUFuQixLQUFLO1lBQ0csdUJBQXVCO2tCQUEvQixLQUFLO1lBU04sUUFBUTtrQkFEUCxZQUFZO21CQUFDLGVBQWUsRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgSG9zdExpc3RlbmVyLFxyXG4gIERpcmVjdGl2ZSxcclxuICBFbGVtZW50UmVmLFxyXG4gIElucHV0LFxyXG4gIEFmdGVyVmlld0luaXQsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExvZ2dpbmdTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvbG9nZ2luZy9sb2dnaW5nLnNlcnZpY2UnO1xyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW25nc0ZpbGxIZWlnaHRdJyB9KVxyXG5leHBvcnQgY2xhc3MgRmlsbEhlaWdodERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIEBJbnB1dCgpIGZvb3RlckVsZW1lbnQgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGZpeGVkSGVpZ2h0ID0gMDtcclxuICBASW5wdXQoKSByZWxhdGl2ZVRvUGFyZW50UGVyY2VudCA9IDA7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgbG9nZ2VyOiBMb2dnaW5nU2VydmljZSkge31cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5jYWxjdWxhdGVBbmRTZXRFbGVtZW50SGVpZ2h0KCk7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6cmVzaXplJywgWyckZXZlbnQnXSlcclxuICBvblJlc2l6ZShldmVudCkge1xyXG4gICAgdGhpcy5jYWxjdWxhdGVBbmRTZXRFbGVtZW50SGVpZ2h0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNhbGN1bGF0ZUFuZFNldEVsZW1lbnRIZWlnaHQoKSB7XHJcbiAgICBpZiAodGhpcy5yZWxhdGl2ZVRvUGFyZW50UGVyY2VudCA+IDApIHtcclxuICAgICAgY29uc3QgcGFyZW50SGVpZ2h0ID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZVxyXG4gICAgICAgIC5wYXJlbnROb2RlLnBhcmVudE5vZGUucGFyZW50Tm9kZS5wYXJlbnROb2RlLm9mZnNldEhlaWdodDtcclxuICAgICAgaWYgKHBhcmVudEhlaWdodCA+IDApIHtcclxuICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gYCR7XHJcbiAgICAgICAgICBwYXJlbnRIZWlnaHQgKiAodGhpcy5yZWxhdGl2ZVRvUGFyZW50UGVyY2VudCAvIDEwMClcclxuICAgICAgICB9cHhgO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuZml4ZWRIZWlnaHQgPiAwKSB7XHJcbiAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5oZWlnaHQgPSBgJHt0aGlzLmZpeGVkSGVpZ2h0fXB4YDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5vdmVyZmxvdyA9ICdhdXRvJztcclxuICAgICAgbGV0IHdpbmRvd0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcclxuICAgICAgaWYgKHdpbmRvd0hlaWdodCA9PT0gMCkge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdGaWxsSGVpZ2h0OiBXaW5kb3cgcmVwb3J0ZWQgemVybyBoZWlnaHQnKTtcclxuICAgICAgICB3aW5kb3dIZWlnaHQgPSA4MDA7XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgZWxlbWVudE9mZnNldFRvcCA9IHRoaXMuZ2V0RWxlbWVudE9mZnNldFRvcCgpO1xyXG4gICAgICBjb25zdCBlbGVtZW50TWFyZ2luQm90dG9tID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLm1hcmdpbkJvdHRvbTtcclxuICAgICAgY29uc3QgZm9vdGVyRWxlbWVudE1hcmdpbiA9IHRoaXMuZ2V0Zm9vdGVyRWxlbWVudE1hcmdpbigpO1xyXG5cclxuICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLmhlaWdodCA9IGAke1xyXG4gICAgICAgIHdpbmRvd0hlaWdodCAtIGZvb3RlckVsZW1lbnRNYXJnaW4gLSBlbGVtZW50T2Zmc2V0VG9wIC0gMTZcclxuICAgICAgfXB4YDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0RWxlbWVudE9mZnNldFRvcCgpIHtcclxuICAgIHJldHVybiB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRmb290ZXJFbGVtZW50TWFyZ2luKCkge1xyXG4gICAgaWYgKCF0aGlzLmZvb3RlckVsZW1lbnQpIHtcclxuICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcbiAgICBjb25zdCBmb290ZXJTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZm9vdGVyRWxlbWVudCk7XHJcbiAgICByZXR1cm4gcGFyc2VJbnQoZm9vdGVyU3R5bGUuaGVpZ2h0LCAxMCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==