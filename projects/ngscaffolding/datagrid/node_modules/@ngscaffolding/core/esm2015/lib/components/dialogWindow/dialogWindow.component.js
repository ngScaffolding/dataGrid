import { Component, EventEmitter, Output } from '@angular/core';
import * as i0 from "@angular/core";
export class DialogWindowComponent {
    constructor() {
        this.closed = new EventEmitter();
    }
    ngOnChanges(changes) { }
    ngOnDestroy() { }
    ngOnInit() { }
    cancel(event) {
        this.closed.emit(null);
    }
    save(event) {
    }
}
DialogWindowComponent.ɵfac = function DialogWindowComponent_Factory(t) { return new (t || DialogWindowComponent)(); };
DialogWindowComponent.ɵcmp = i0.ɵɵdefineComponent({ type: DialogWindowComponent, selectors: [["ngs-dialog-window"]], outputs: { closed: "closed" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, template: function DialogWindowComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "h1");
        i0.ɵɵtext(1, "Dialog Window Base Class");
        i0.ɵɵelementEnd();
    } }, styles: [""] });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DialogWindowComponent, [{
        type: Component,
        args: [{
                selector: 'ngs-dialog-window',
                templateUrl: 'dialogWindow.component.html',
                styleUrls: ['dialogWindow.component.scss']
            }]
    }], null, { closed: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nV2luZG93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3NjYWZmb2xkaW5nL2NvcmUvc3JjLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZGlhbG9nV2luZG93L2RpYWxvZ1dpbmRvdy5jb21wb25lbnQudHMiLCJsaWIvY29tcG9uZW50cy9kaWFsb2dXaW5kb3cvZGlhbG9nV2luZG93LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQStDLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTzdHLE1BQU0sT0FBTyxxQkFBcUI7SUFMbEM7UUFNYyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztLQWE5QztJQVhHLFdBQVcsQ0FBQyxPQUFzQixJQUFTLENBQUM7SUFDNUMsV0FBVyxLQUFVLENBQUM7SUFDdEIsUUFBUSxLQUFVLENBQUM7SUFFbkIsTUFBTSxDQUFDLEtBQVU7UUFDYixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsSUFBSSxDQUFDLEtBQVU7SUFFZixDQUFDOzswRkFiUSxxQkFBcUI7MERBQXJCLHFCQUFxQjtRQ1BsQywwQkFBSTtRQUFBLHdDQUF3QjtRQUFBLGlCQUFLOztrRERPcEIscUJBQXFCO2NBTGpDLFNBQVM7ZUFBQztnQkFDUCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixXQUFXLEVBQUUsNkJBQTZCO2dCQUMxQyxTQUFTLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQzthQUM3QztnQkFFYSxNQUFNO2tCQUFmLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnbmdzLWRpYWxvZy13aW5kb3cnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdkaWFsb2dXaW5kb3cuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJ2RpYWxvZ1dpbmRvdy5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaWFsb2dXaW5kb3dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICAgIEBPdXRwdXQoKSBjbG9zZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7fVxyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7fVxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7fVxyXG5cclxuICAgIGNhbmNlbChldmVudDogYW55KSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZWQuZW1pdChudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBzYXZlKGV2ZW50OiBhbnkpIHtcclxuXHJcbiAgICB9XHJcbn1cclxuIiwiPGgxPkRpYWxvZyBXaW5kb3cgQmFzZSBDbGFzczwvaDE+XHJcbiJdfQ==