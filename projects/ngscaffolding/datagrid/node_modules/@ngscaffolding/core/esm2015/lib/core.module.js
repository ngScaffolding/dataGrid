import { NgModule } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
// Pipes
import { ButtonColourPipe } from './pipes/buttonColour.pipe';
import { NgsDateTimePipe } from './pipes/ngsDateTime.pipe';
import { NgsDatePipe } from './pipes/ngsDate.pipe';
import { TruncateTextPipe } from './pipes/truncateText.pipe';
// Directives
import { FillHeightDirective } from './directives/fill-height.directive';
// Components
import { DialogWindowComponent } from './components/dialogWindow/dialogWindow.component';
import { VERSION } from './version';
import * as i0 from "@angular/core";
import * as i1 from "./services/versions/versions.service";
export class CoreModule {
    constructor(versions) {
        versions.addVersion('@ngscaffolding/core', VERSION.version);
    }
    static forRoot() {
        return {
            ngModule: CoreModule
        };
    }
}
CoreModule.ɵmod = i0.ɵɵdefineNgModule({ type: CoreModule });
CoreModule.ɵinj = i0.ɵɵdefineInjector({ factory: function CoreModule_Factory(t) { return new (t || CoreModule)(i0.ɵɵinject(i1.VersionsService)); }, imports: [[CommonModule, FormsModule, HttpClientModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreModule, { declarations: [FillHeightDirective,
        ButtonColourPipe,
        NgsDatePipe,
        NgsDateTimePipe,
        TruncateTextPipe,
        DialogWindowComponent], imports: [CommonModule, FormsModule, HttpClientModule], exports: [ButtonColourPipe,
        NgsDatePipe,
        NgsDateTimePipe,
        TruncateTextPipe,
        FillHeightDirective,
        DialogWindowComponent] }); })();
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(CoreModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule, HttpClientModule],
                declarations: [
                    FillHeightDirective,
                    ButtonColourPipe,
                    NgsDatePipe,
                    NgsDateTimePipe,
                    TruncateTextPipe,
                    DialogWindowComponent
                ],
                exports: [
                    ButtonColourPipe,
                    NgsDatePipe,
                    NgsDateTimePipe,
                    TruncateTextPipe,
                    FillHeightDirective,
                    DialogWindowComponent
                ]
            }]
    }], function () { return [{ type: i1.VersionsService }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmdzY2FmZm9sZGluZy9jb3JlL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9jb3JlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLFFBQVE7QUFDUixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTdELGFBQWE7QUFDYixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUt6RSxhQUFhO0FBQ2IsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFFekYsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQzs7O0FBcUJwQyxNQUFNLE9BQU8sVUFBVTtJQU1uQixZQUFZLFFBQXlCO1FBQ2pDLFFBQVEsQ0FBQyxVQUFVLENBQUMscUJBQXFCLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFQRCxNQUFNLENBQUMsT0FBTztRQUNWLE9BQU87WUFDSCxRQUFRLEVBQUUsVUFBVTtTQUN2QixDQUFDO0lBQ04sQ0FBQzs7OENBTFEsVUFBVTttR0FBVixVQUFVLGlEQWxCVixDQUFDLFlBQVksRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLENBQUM7d0ZBa0I3QyxVQUFVLG1CQWhCZixtQkFBbUI7UUFDbkIsZ0JBQWdCO1FBQ2hCLFdBQVc7UUFDWCxlQUFlO1FBQ2YsZ0JBQWdCO1FBQ2hCLHFCQUFxQixhQVBmLFlBQVksRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLGFBVWpELGdCQUFnQjtRQUNoQixXQUFXO1FBQ1gsZUFBZTtRQUNmLGdCQUFnQjtRQUNoQixtQkFBbUI7UUFDbkIscUJBQXFCO2tEQUdoQixVQUFVO2NBbkJ0QixRQUFRO2VBQUM7Z0JBQ04sT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsQ0FBQztnQkFDdEQsWUFBWSxFQUFFO29CQUNWLG1CQUFtQjtvQkFDbkIsZ0JBQWdCO29CQUNoQixXQUFXO29CQUNYLGVBQWU7b0JBQ2YsZ0JBQWdCO29CQUNoQixxQkFBcUI7aUJBQ3hCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxnQkFBZ0I7b0JBQ2hCLFdBQVc7b0JBQ1gsZUFBZTtvQkFDZixnQkFBZ0I7b0JBQ2hCLG1CQUFtQjtvQkFDbkIscUJBQXFCO2lCQUN4QjthQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbi8vIFBpcGVzXG5pbXBvcnQgeyBCdXR0b25Db2xvdXJQaXBlIH0gZnJvbSAnLi9waXBlcy9idXR0b25Db2xvdXIucGlwZSc7XG5pbXBvcnQgeyBOZ3NEYXRlVGltZVBpcGUgfSBmcm9tICcuL3BpcGVzL25nc0RhdGVUaW1lLnBpcGUnO1xuaW1wb3J0IHsgTmdzRGF0ZVBpcGUgfSBmcm9tICcuL3BpcGVzL25nc0RhdGUucGlwZSc7XG5pbXBvcnQgeyBUcnVuY2F0ZVRleHRQaXBlIH0gZnJvbSAnLi9waXBlcy90cnVuY2F0ZVRleHQucGlwZSc7XG5cbi8vIERpcmVjdGl2ZXNcbmltcG9ydCB7IEZpbGxIZWlnaHREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZmlsbC1oZWlnaHQuZGlyZWN0aXZlJztcblxuLy8gU2VydmljZXNcbmltcG9ydCB7IFZlcnNpb25zU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvdmVyc2lvbnMvdmVyc2lvbnMuc2VydmljZSc7XG5cbi8vIENvbXBvbmVudHNcbmltcG9ydCB7IERpYWxvZ1dpbmRvd0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9kaWFsb2dXaW5kb3cvZGlhbG9nV2luZG93LmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IFZFUlNJT04gfSBmcm9tICcuL3ZlcnNpb24nO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlLCBIdHRwQ2xpZW50TW9kdWxlXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgRmlsbEhlaWdodERpcmVjdGl2ZSxcbiAgICAgICAgQnV0dG9uQ29sb3VyUGlwZSxcbiAgICAgICAgTmdzRGF0ZVBpcGUsXG4gICAgICAgIE5nc0RhdGVUaW1lUGlwZSxcbiAgICAgICAgVHJ1bmNhdGVUZXh0UGlwZSxcbiAgICAgICAgRGlhbG9nV2luZG93Q29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEJ1dHRvbkNvbG91clBpcGUsXG4gICAgICAgIE5nc0RhdGVQaXBlLFxuICAgICAgICBOZ3NEYXRlVGltZVBpcGUsXG4gICAgICAgIFRydW5jYXRlVGV4dFBpcGUsXG4gICAgICAgIEZpbGxIZWlnaHREaXJlY3RpdmUsXG4gICAgICAgIERpYWxvZ1dpbmRvd0NvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgQ29yZU1vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxDb3JlTW9kdWxlPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogQ29yZU1vZHVsZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih2ZXJzaW9uczogVmVyc2lvbnNTZXJ2aWNlKSB7XG4gICAgICAgIHZlcnNpb25zLmFkZFZlcnNpb24oJ0BuZ3NjYWZmb2xkaW5nL2NvcmUnLCBWRVJTSU9OLnZlcnNpb24pO1xuICAgIH1cbn1cbiJdfQ==