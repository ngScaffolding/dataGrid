import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class ButtonColourPipe {
    transform(inputColor) {
        let returnColor;
        switch (inputColor) {
            case "primary" /* primary */: {
                returnColor = 'p-button-primary';
                break;
            }
            case "secondary" /* secondary */: {
                returnColor = 'p-button-secondary';
                break;
            }
            case "success" /* success */: {
                returnColor = 'p-button-success';
                break;
            }
            case "info" /* info */: {
                returnColor = 'p-button-info';
                break;
            }
            case "warning" /* warning */: {
                returnColor = 'p-button-warning';
                break;
            }
            case "danger" /* danger */: {
                returnColor = 'p-button-danger';
                break;
            }
            case "blue" /* blue */: {
                returnColor = 'blue-grey-btn';
                break;
            }
            case "cyan" /* cyan */: {
                returnColor = 'cyan-btn';
                break;
            }
            case "teal" /* teal */: {
                returnColor = 'teal-btn';
                break;
            }
            case "orange" /* orange */: {
                returnColor = 'orange-btn';
                break;
            }
            case "deeporange" /* deeporange */: {
                returnColor = 'deep-orange-btn';
                break;
            }
            case "purple" /* purple */: {
                returnColor = 'purple-btn';
                break;
            }
            case "indigo" /* indigo */: {
                returnColor = 'indigo-btn';
                break;
            }
            case "pink" /* pink */: {
                returnColor = 'pink-btn';
                break;
            }
            default: {
                returnColor = 'p-button-info';
            }
        }
        return returnColor;
    }
}
ButtonColourPipe.ɵfac = function ButtonColourPipe_Factory(t) { return new (t || ButtonColourPipe)(); };
ButtonColourPipe.ɵpipe = i0.ɵɵdefinePipe({ name: "buttonColour", type: ButtonColourPipe, pure: true });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(ButtonColourPipe, [{
        type: Pipe,
        args: [{ name: 'buttonColour' }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uQ29sb3VyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmdzY2FmZm9sZGluZy9jb3JlL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9idXR0b25Db2xvdXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFJcEQsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQixTQUFTLENBQUMsVUFBa0I7UUFDMUIsSUFBSSxXQUFtQixDQUFDO1FBRXhCLFFBQVEsVUFBVSxFQUFFO1lBQ2xCLDRCQUEwQixDQUFDLENBQUM7Z0JBQzFCLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztnQkFDakMsTUFBTTthQUNQO1lBQ0QsZ0NBQTRCLENBQUMsQ0FBQztnQkFDNUIsV0FBVyxHQUFHLG9CQUFvQixDQUFDO2dCQUNuQyxNQUFNO2FBQ1A7WUFDRCw0QkFBMEIsQ0FBQyxDQUFDO2dCQUMxQixXQUFXLEdBQUcsa0JBQWtCLENBQUM7Z0JBQ2pDLE1BQU07YUFDUDtZQUNELHNCQUF1QixDQUFDLENBQUM7Z0JBQ3ZCLFdBQVcsR0FBRyxlQUFlLENBQUM7Z0JBQzlCLE1BQU07YUFDUDtZQUNELDRCQUEwQixDQUFDLENBQUM7Z0JBQzFCLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztnQkFDakMsTUFBTTthQUNQO1lBQ0QsMEJBQXlCLENBQUMsQ0FBQztnQkFDekIsV0FBVyxHQUFHLGlCQUFpQixDQUFDO2dCQUNoQyxNQUFNO2FBQ1A7WUFDRCxzQkFBdUIsQ0FBQyxDQUFDO2dCQUN2QixXQUFXLEdBQUcsZUFBZSxDQUFDO2dCQUM5QixNQUFNO2FBQ1A7WUFDRCxzQkFBdUIsQ0FBQyxDQUFDO2dCQUN2QixXQUFXLEdBQUcsVUFBVSxDQUFDO2dCQUN6QixNQUFNO2FBQ1A7WUFDRCxzQkFBdUIsQ0FBQyxDQUFDO2dCQUN2QixXQUFXLEdBQUcsVUFBVSxDQUFDO2dCQUN6QixNQUFNO2FBQ1A7WUFDRCwwQkFBeUIsQ0FBQyxDQUFDO2dCQUN6QixXQUFXLEdBQUcsWUFBWSxDQUFDO2dCQUMzQixNQUFNO2FBQ1A7WUFDRCxrQ0FBNkIsQ0FBQyxDQUFDO2dCQUM3QixXQUFXLEdBQUcsaUJBQWlCLENBQUM7Z0JBQ2hDLE1BQU07YUFDUDtZQUNELDBCQUF5QixDQUFDLENBQUM7Z0JBQ3pCLFdBQVcsR0FBRyxZQUFZLENBQUM7Z0JBQzNCLE1BQU07YUFDUDtZQUNELDBCQUF5QixDQUFDLENBQUM7Z0JBQ3pCLFdBQVcsR0FBRyxZQUFZLENBQUM7Z0JBQzNCLE1BQU07YUFDUDtZQUNELHNCQUF1QixDQUFDLENBQUM7Z0JBQ3ZCLFdBQVcsR0FBRyxVQUFVLENBQUM7Z0JBQ3pCLE1BQU07YUFDUDtZQUNELE9BQU8sQ0FBQyxDQUFDO2dCQUNQLFdBQVcsR0FBRyxlQUFlLENBQUM7YUFDL0I7U0FDRjtRQUNELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7O2dGQWxFVSxnQkFBZ0I7dUVBQWhCLGdCQUFnQjtrREFBaEIsZ0JBQWdCO2NBRDVCLElBQUk7ZUFBQyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJ1dHRvbkNvbG91cnMgfSBmcm9tICdAbmdzY2FmZm9sZGluZy9tb2RlbHMnO1xyXG5cclxuQFBpcGUoeyBuYW1lOiAnYnV0dG9uQ29sb3VyJyB9KVxyXG5leHBvcnQgY2xhc3MgQnV0dG9uQ29sb3VyUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dENvbG9yOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgbGV0IHJldHVybkNvbG9yOiBzdHJpbmc7XHJcblxyXG4gICAgc3dpdGNoIChpbnB1dENvbG9yKSB7XHJcbiAgICAgIGNhc2UgQnV0dG9uQ29sb3Vycy5wcmltYXJ5OiB7XHJcbiAgICAgICAgcmV0dXJuQ29sb3IgPSAncC1idXR0b24tcHJpbWFyeSc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBCdXR0b25Db2xvdXJzLnNlY29uZGFyeToge1xyXG4gICAgICAgIHJldHVybkNvbG9yID0gJ3AtYnV0dG9uLXNlY29uZGFyeSc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBCdXR0b25Db2xvdXJzLnN1Y2Nlc3M6IHtcclxuICAgICAgICByZXR1cm5Db2xvciA9ICdwLWJ1dHRvbi1zdWNjZXNzJztcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBjYXNlIEJ1dHRvbkNvbG91cnMuaW5mbzoge1xyXG4gICAgICAgIHJldHVybkNvbG9yID0gJ3AtYnV0dG9uLWluZm8nO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICAgIGNhc2UgQnV0dG9uQ29sb3Vycy53YXJuaW5nOiB7XHJcbiAgICAgICAgcmV0dXJuQ29sb3IgPSAncC1idXR0b24td2FybmluZyc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBCdXR0b25Db2xvdXJzLmRhbmdlcjoge1xyXG4gICAgICAgIHJldHVybkNvbG9yID0gJ3AtYnV0dG9uLWRhbmdlcic7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBCdXR0b25Db2xvdXJzLmJsdWU6IHtcclxuICAgICAgICByZXR1cm5Db2xvciA9ICdibHVlLWdyZXktYnRuJztcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBjYXNlIEJ1dHRvbkNvbG91cnMuY3lhbjoge1xyXG4gICAgICAgIHJldHVybkNvbG9yID0gJ2N5YW4tYnRuJztcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBjYXNlIEJ1dHRvbkNvbG91cnMudGVhbDoge1xyXG4gICAgICAgIHJldHVybkNvbG9yID0gJ3RlYWwtYnRuJztcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBjYXNlIEJ1dHRvbkNvbG91cnMub3JhbmdlOiB7XHJcbiAgICAgICAgcmV0dXJuQ29sb3IgPSAnb3JhbmdlLWJ0bic7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBCdXR0b25Db2xvdXJzLmRlZXBvcmFuZ2U6IHtcclxuICAgICAgICByZXR1cm5Db2xvciA9ICdkZWVwLW9yYW5nZS1idG4nO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICAgIGNhc2UgQnV0dG9uQ29sb3Vycy5wdXJwbGU6IHtcclxuICAgICAgICByZXR1cm5Db2xvciA9ICdwdXJwbGUtYnRuJztcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBjYXNlIEJ1dHRvbkNvbG91cnMuaW5kaWdvOiB7XHJcbiAgICAgICAgcmV0dXJuQ29sb3IgPSAnaW5kaWdvLWJ0bic7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBCdXR0b25Db2xvdXJzLnBpbms6IHtcclxuICAgICAgICByZXR1cm5Db2xvciA9ICdwaW5rLWJ0bic7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgIHJldHVybkNvbG9yID0gJ3AtYnV0dG9uLWluZm8nO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmV0dXJuQ29sb3I7XHJcbiAgfVxyXG59XHJcbiJdfQ==