import { UserAuthenticationBase } from './UserAuthenticationBase';
import { BaseEntity } from '@ngscaffolding/models';
import { AuthenticationStore } from './userAuthentication.store';
import { UserAuthenticationQuery } from './userAuthentication.query';
import { AppSettingsQuery } from '../appSettings/appSettings.query';
import * as i0 from "@angular/core";
export declare class OAuthService implements UserAuthenticationBase {
    private authStore;
    private authQuery;
    private appSettingsQuery;
    private manager;
    private user;
    private jwtHelper;
    constructor(authStore: AuthenticationStore, authQuery: UserAuthenticationQuery, appSettingsQuery: AppSettingsQuery);
    filterItemsByRole(authItems: BaseEntity[]): Array<BaseEntity>;
    checkByRoles(authItem: BaseEntity): boolean;
    getToken(): string;
    forceLogon(): void;
    logon(userName?: string, password?: string): Promise<void>;
    logoff(): Promise<void>;
    completeAuthentication(): Promise<void>;
    isAuthenticated(): boolean;
    authorizationHeaderValue(): string;
    name(): string;
    private setToken;
    static ɵfac: i0.ɵɵFactoryDef<OAuthService, never>;
    static ɵprov: i0.ɵɵInjectableDef<OAuthService>;
}
//# sourceMappingURL=userAuthentication.oauth.service.d.ts.map