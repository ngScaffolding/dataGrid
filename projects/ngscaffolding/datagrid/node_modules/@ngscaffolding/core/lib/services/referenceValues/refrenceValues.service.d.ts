import { Observable } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { AppSettingsService } from '../appSettings/appSettings.service';
import { ReferenceValue } from '@ngscaffolding/models';
import { LoggingService } from '../logging/logging.service';
import { ReferenceValuesQuery } from './referenceValues.query';
import { ReferenceValuesStore } from './referenceValues.store';
import * as i0 from "@angular/core";
export declare class ReferenceValuesService {
    private http;
    private appSettingsService;
    private refValuesQuery;
    private refValuesStore;
    private logger;
    private className;
    private requestsInFlight;
    constructor(http: HttpClient, appSettingsService: AppSettingsService, refValuesQuery: ReferenceValuesQuery, refValuesStore: ReferenceValuesStore, logger: LoggingService);
    getValue(name: string, group: string): Observable<string>;
    clearReferenceValue(clearNames: string | Array<string>): void;
    setReferenceValue(referenceValue: ReferenceValue): void;
    private isExpired;
    getReferenceValue(name: string, seed?: string, childDepth?: number): Observable<ReferenceValue>;
    private downloadRefValue;
    private getKey;
    static ɵfac: i0.ɵɵFactoryDef<ReferenceValuesService, never>;
    static ɵprov: i0.ɵɵInjectableDef<ReferenceValuesService>;
}
//# sourceMappingURL=refrenceValues.service.d.ts.map