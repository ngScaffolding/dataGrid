import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';
import { AppSettingsService } from '../appSettings/appSettings.service';
import { UserPreferencesStore } from './userPreferences.store';
import { UserPreferencesQuery } from './userPreferences.query';
import { LoggingService } from '../logging/logging.service';
import { AppSettingsQuery } from '../appSettings/appSettings.query';
import * as i0 from "@angular/core";
export declare class UserPreferencesService {
    private http;
    private authQuery;
    private appSettingsQuery;
    private logger;
    private userPrefsStore;
    private userPrefsQuery;
    private appSettings;
    private readonly className;
    private readonly prefix;
    private readonly storageKey;
    private apiHome;
    private valuesDownloaded;
    private definitionsDownloaded;
    private httpInFlight;
    constructor(http: HttpClient, authQuery: UserAuthenticationQuery, appSettingsQuery: AppSettingsQuery, logger: LoggingService, userPrefsStore: UserPreferencesStore, userPrefsQuery: UserPreferencesQuery, appSettings: AppSettingsService);
    private clearValues;
    deleteValue(name: string): Observable<any>;
    getValues(): void;
    setValue(key: string, value: any): Observable<any>;
    private getDefinitions;
    private loadFromLocal;
    private saveToLocal;
    static ɵfac: i0.ɵɵFactoryDef<UserPreferencesService, never>;
    static ɵprov: i0.ɵɵInjectableDef<UserPreferencesService>;
}
//# sourceMappingURL=userPreferences.service.d.ts.map