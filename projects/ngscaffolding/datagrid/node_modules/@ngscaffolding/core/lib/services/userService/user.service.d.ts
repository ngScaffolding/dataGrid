import { HttpClient } from '@angular/common/http';
import { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';
import { LoggingService } from '../logging/logging.service';
import { RolesService } from '../rolesService/roles.service';
import { IUserModel, ChangePasswordModel } from '@ngscaffolding/models';
import { Observable } from 'rxjs';
import { UserServiceBase } from './user.service.base';
import { AppSettingsService } from '../appSettings/appSettings.service';
import * as i0 from "@angular/core";
export declare class UserService implements UserServiceBase {
    private http;
    private appSettingsService;
    private authQuery;
    private log;
    rolesService: RolesService;
    private className;
    private apiHome;
    constructor(http: HttpClient, appSettingsService: AppSettingsService, authQuery: UserAuthenticationQuery, log: LoggingService, rolesService: RolesService);
    getUsers(): Observable<IUserModel[]>;
    createUser(user: any): Observable<IUserModel>;
    deleteUser(userId: any): Observable<null>;
    changePassword(changePasswordModel: ChangePasswordModel): Observable<null>;
    setPassword(changePasswordModel: ChangePasswordModel): Observable<null>;
    resetPassword(userId: any): Observable<null>;
    getUser(userId: string): Observable<IUserModel>;
    saveUser(user: IUserModel): Observable<any>;
    static ɵfac: i0.ɵɵFactoryDef<UserService, never>;
    static ɵprov: i0.ɵɵInjectableDef<UserService>;
}
//# sourceMappingURL=user.service.d.ts.map