{"version":3,"file":"ngscaffolding-core.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../projects/ngscaffolding/core/src/lib/services/appSettings/appSettings.store.ts","../projects/ngscaffolding/core/src/lib/services/appSettings/appSettings.query.ts","../projects/ngscaffolding/core/src/lib/services/broadcast/broadcast.service.ts","../projects/ngscaffolding/core/src/lib/services/notification/notification.service.ts","../projects/ngscaffolding/core/src/lib/services/userAuthentication/userAuthentication.store.ts","../projects/ngscaffolding/core/src/lib/services/userAuthentication/userAuthentication.query.ts","../projects/ngscaffolding/core/src/lib/services/logging/logging.service.ts","../projects/ngscaffolding/core/src/lib/services/appSettings/appSettings.service.ts","../projects/ngscaffolding/core/src/lib/services/appAudit/appAudit.service.ts","../projects/ngscaffolding/core/src/lib/services/auditLog/auditLog.store.ts","../projects/ngscaffolding/core/src/lib/services/auditLog/auditLog.query.ts","../projects/ngscaffolding/core/src/lib/services/auditLog/auditLog.service.ts","../../projects/ngscaffolding/core/src/lib/services/componentLoader.service.ts","../projects/ngscaffolding/core/src/lib/services/coreErrorHandler/coreErrorHandler.service.ts","../projects/ngscaffolding/core/src/lib/services/dataSource/dataSource.store.ts","../projects/ngscaffolding/core/src/lib/services/dataSource/dataSource.query.ts","../projects/ngscaffolding/core/src/lib/services/dataSource/dataSource.service.ts","../projects/ngscaffolding/core/src/lib/services/menu/menu.store.ts","../projects/ngscaffolding/core/src/lib/services/menu/menu.query.ts","../projects/ngscaffolding/core/src/lib/services/rolesService/roles.store.ts","../projects/ngscaffolding/core/src/lib/services/rolesService/roles.query.ts","../projects/ngscaffolding/core/src/lib/services/rolesService/roles.service.ts","../projects/ngscaffolding/core/src/lib/services/menu/menu.service.ts","../projects/ngscaffolding/core/src/lib/services/referenceValues/referenceValues.store.ts","../projects/ngscaffolding/core/src/lib/services/referenceValues/referenceValues.query.ts","../projects/ngscaffolding/core/src/lib/services/referenceValues/refrenceValues.service.ts","../projects/ngscaffolding/core/src/lib/services/spinnerService/spinner.service.ts","../projects/ngscaffolding/core/src/lib/services/userAuthentication/UserAuthenticationBase.ts","../projects/ngscaffolding/core/src/lib/services/userAuthentication/userAuthentication.service.ts","../projects/ngscaffolding/core/src/lib/services/userAuthentication/userAuthentication.oauth.service.ts","../projects/ngscaffolding/core/src/lib/services/userPreferences/userPreferences.store.ts","../projects/ngscaffolding/core/src/lib/services/userPreferences/userPreferences.query.ts","../projects/ngscaffolding/core/src/lib/services/userPreferences/userPreferences.service.ts","../projects/ngscaffolding/core/src/lib/services/widgetsService/widget.store.ts","../projects/ngscaffolding/core/src/lib/services/widgetsService/widget.query.ts","../projects/ngscaffolding/core/src/lib/services/widgetsService/widget.service.ts","../projects/ngscaffolding/core/src/lib/services/userService/user.service.ts","../projects/ngscaffolding/core/src/lib/services/userService/user.service.base.ts","../projects/ngscaffolding/core/src/lib/services/versions/versions.service.ts","../../projects/ngscaffolding/core/src/lib/directives/fill-height.directive.ts","../../projects/ngscaffolding/core/src/lib/pipes/buttonColour.pipe.ts","../../projects/ngscaffolding/core/src/lib/pipes/ngsDate.pipe.ts","../../projects/ngscaffolding/core/src/lib/pipes/ngsDateTime.pipe.ts","../../projects/ngscaffolding/core/src/lib/pipes/truncateText.pipe.ts","../../projects/ngscaffolding/core/src/lib/routeGuards/authoriseRoleGuard.ts","../projects/ngscaffolding/core/src/lib/components/dialogWindow/dialogWindow.component.ts","../projects/ngscaffolding/core/src/lib/components/dialogWindow/dialogWindow.component.html","../../../projects/ngscaffolding/core/src/lib/version.ts","../../../projects/ngscaffolding/core/src/lib/core.module.ts","../../../../projects/ngscaffolding/core/src/public-api.ts","../../../../projects/ngscaffolding/core/src/ngscaffolding-core.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { AppSettingsValue, AppSettings } from '@ngscaffolding/models';\r\n\r\n\r\nexport interface AppSettingsState extends EntityState<AppSettingsValue> {\r\n  isInitialised: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'appSettings', idKey: 'name' })\r\nexport class AppSettingsStore extends EntityStore<AppSettingsState, AppSettingsValue> {\r\n\r\n  constructor() {\r\n    super({ isInitialised: false });\r\n    console.log('AppSettingsStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { AppSettingsStore, AppSettingsState } from './appSettings.store';\r\nimport { AppSettingsValue } from '@ngscaffolding/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppSettingsQuery extends QueryEntity<AppSettingsState, AppSettingsValue> {\r\n\r\n  isInitialised$ = this.select(state => state.isInitialised);\r\n\r\n  constructor(protected store: AppSettingsStore) {\r\n    super(store);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\ninterface BroadcastEvent {\r\n  key: any;\r\n  data?: any;\r\n}\r\n\r\nexport const enum BroadcastTypes {\r\n  SHOW_MESSAGE = 'SHOW_MESSAGE',\r\n\r\n  SHOW_SPINNER = 'SHOW_SPINNER',\r\n  HIDE_SPINNER = 'HIDE_SPINNER',\r\n  CLOSE_POPUP = 'CLOSE_POPUP'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BroadcastService {\r\n  private _eventBus: Subject<BroadcastEvent>;\r\n\r\n  constructor() {\r\n    this._eventBus = new Subject<BroadcastEvent>();\r\n  }\r\n\r\n  broadcast(key: any, data?: any) {\r\n    this._eventBus.next({ key, data });\r\n  }\r\n\r\n  on<T>(key: any): Observable<T> {\r\n    return this._eventBus.pipe(\r\n        filter(event => event.key === key),\r\n        map(event => <T>event.data)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BroadcastService, BroadcastTypes } from '../broadcast/broadcast.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  constructor(private broadcast: BroadcastService) {}\r\n\r\n  showMessage(message: any) {\r\n    this.broadcast.broadcast(BroadcastTypes.SHOW_MESSAGE, message);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store, StoreConfig } from '@datorama/akita';\r\nimport { createBasicUser, BasicUser } from '@ngscaffolding/models';\r\n\r\nexport interface AuthenticationState {\r\n  authenticated: boolean;\r\n  token: string;\r\n  refreshToken: string;\r\n  userDetails: BasicUser;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'authorisation' })\r\nexport class AuthenticationStore extends Store<AuthenticationState> {\r\n  constructor() {\r\n    super({ userDetails: createBasicUser() });\r\n    console.log('AuthenticationStore Constructor');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Query, toBoolean } from '@datorama/akita';\r\nimport { BasicUser } from '@ngscaffolding/models';\r\nimport { AuthenticationStore, AuthenticationState } from './userAuthentication.store';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserAuthenticationQuery extends Query<AuthenticationState> {\r\n    authenticated$ = this.select(state => state.authenticated);\r\n    currentUser$ = this.select(state => state.userDetails);\r\n\r\n    constructor(protected store: AuthenticationStore) {\r\n        super(store);\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return toBoolean(this.getValue().authenticated);\r\n    }\r\n\r\n    getUserId() {\r\n        if (this.isAuthenticated() && this.getValue().userDetails) {\r\n            return this.getValue().userDetails.userId;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getUser(): BasicUser {\r\n        return this.getValue().userDetails;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NotificationService } from '../notification/notification.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggingService {\r\n    constructor(private notification: NotificationService, private appSettingsQuery: AppSettingsQuery,\r\n      private userQuery: UserAuthenticationQuery,\r\n      private http: HttpClient) {}\r\n\r\n  public error(err: any, methodName = '', showToast = false): void {\r\n    if (!methodName) {\r\n      console.error(`Method ${methodName}: Error ${err}`);\r\n    } else {\r\n      console.error(`Error ${err}`);\r\n    }\r\n\r\n    // TODO: Resume showing toast\r\n    if (showToast) {\r\n      this.notification.showMessage({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        detail: err.message\r\n      });\r\n    }\r\n  }\r\n\r\n  public warning(message: string, methodName = ''): void {\r\n    if (!methodName) {\r\n      console.warn(`Method ${methodName}: Warning ${message}`);\r\n    } else {\r\n      console.warn(`Warning ${message}`);\r\n    }\r\n  }\r\n\r\n  public info(message: string, methodName = '', objectInfo: any = null): void {\r\n    if (!methodName) {\r\n      // tslint:disable-next-line:no-console\r\n      console.info(`Info : ${message}`, objectInfo);\r\n    } else {\r\n      // tslint:disable-next-line:no-console\r\n      console.info(`[${methodName}] : ${message}`, objectInfo);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { AppSettings, AppSettingsValue } from '@ngscaffolding/models';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettingsStore } from './appSettings.store';\r\nimport { AppSettingsQuery } from './appSettings.query';\r\nimport { Observable } from 'rxjs';\r\nimport { timeout, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppSettingsService {\r\n  private className = 'AppSettingsService';\r\n\r\n  public loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private appSettingsStore: AppSettingsStore,\r\n    private appSettingsQuery: AppSettingsQuery,\r\n    private logger: LoggingService,\r\n    private http: HttpClient\r\n  ) {\r\n    console.log('AppSettingsService Constructor');\r\n  }\r\n\r\n  public setValue(name: string, value: any) {\r\n    if (this.appSettingsQuery.hasEntity(name)) {\r\n      this.appSettingsStore.update(name, { name: name, value: value });\r\n    } else {\r\n      this.appSettingsStore.add({ name: name, value: value });\r\n    }\r\n\r\n    if (name === AppSettings.apiHome) {\r\n        this.loadFromServer(value.toString());\r\n    }\r\n  }\r\n\r\n  public getValue(name: string): any {\r\n    if (this.appSettingsQuery.hasEntity(name)) {\r\n      return this.appSettingsQuery.getEntity(name).value;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private loadFromServer(apiHome: string) {\r\n    // Mark store as loading\r\n    this.appSettingsStore.setLoading(true);\r\n\r\n    // Load values from Server\r\n    this.http\r\n        .get<Array<AppSettingsValue>>(`${apiHome}/api/v1/appSettings`)\r\n        .pipe(timeout(20000), retry(3))\r\n        .subscribe(\r\n      appValues => {\r\n        if (appValues) {\r\n          appValues.forEach(appValue => {\r\n            this.setValue(appValue.name, appValue.value);\r\n          });\r\n        }\r\n        this.appSettingsStore.setLoading(false);\r\n        this.appSettingsStore.update({ isInitialised: true });\r\n      },\r\n      err => {\r\n        this.appSettingsStore.setLoading(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  public setValues(settings: object) {\r\n    // Mark store as loading\r\n    this.appSettingsStore.setLoading(true);\r\n    this.appSettingsStore.update({ isInitialised: false });\r\n\r\n    // Load values\r\n    if (settings) {\r\n      Object.keys(settings).forEach(key => {\r\n        // Setting Value Here\r\n        this.logger.info(`[${this.className}.loadSettings] Setting Value ${key} = ${settings[key]}`);\r\n        this.setValue(key, settings[key]);\r\n      });\r\n    }\r\n\r\n    this.appSettingsStore.setLoading(false);\r\n    this.appSettingsStore.update({ isInitialised: true });\r\n  }\r\n\r\n  public getBoolean(name: string): Observable<boolean> {\r\n    return this.appSettingsQuery.selectEntity(name, entity => entity.value);\r\n  }\r\n\r\n  public getString(name: string): Observable<string> {\r\n    return this.appSettingsQuery.selectEntity(name, entity => entity.value);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\nimport { timeout, retry } from 'rxjs/operators';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport {\r\n  ApplicationLog,\r\n  AppSettings,\r\n  ZuluDateHelper,\r\n} from '@ngscaffolding/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppAuditService {\r\n  constructor(\r\n    private appSettingsQuery: AppSettingsQuery,\r\n    private userQuery: UserAuthenticationQuery,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  public RecordLog(appLog: ApplicationLog): void {\r\n    let apiHome = this.appSettingsQuery.getEntity(AppSettings.apiHome).value;\r\n\r\n    if (!appLog.logDate) {\r\n      appLog.logDate = ZuluDateHelper.setGMTDate(new Date());\r\n    }\r\n\r\n    if (!appLog.userID) {\r\n      appLog.userID = this.userQuery.getUserId();\r\n    }\r\n    try {\r\n      // This post is a fire and forget. Don't have to authorise either\r\n      this.http\r\n        .post(`${apiHome}/api/v1/applicationLog`, appLog)\r\n        .pipe(timeout(30000), retry(3))\r\n        .subscribe(\r\n          (data) => {},\r\n          (err) => {\r\n            console.log('Unable to send AppLog, offline?');\r\n          }\r\n        );\r\n    } catch (err) {\r\n      console.log('Unable to send AppLog, offline?');\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { AuditLog } from '@ngscaffolding/models';\r\n\r\nexport interface AuditLogState extends EntityState<AuditLog> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'auditLog', idKey: 'id' })\r\nexport class AuditLogStore extends EntityStore<AuditLogState, AuditLog> {\r\n    constructor() {\r\n        super({});\r\n        console.log('AuditLogStore Constructor');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { AuditLogState, AuditLogStore } from './auditLog.store';\r\nimport { AuditLog } from '@ngscaffolding/models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuditLogQuery extends QueryEntity<AuditLogState, AuditLog> {\r\n    allAuditLog = this.getAll();\r\n\r\n    constructor(protected store: AuditLogStore) {\r\n        super(store);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuditLog, AppSettings, ZuluDateHelper } from '@ngscaffolding/models';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\nimport { timeout, retry, finalize } from 'rxjs/operators';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport { AuditLogStore } from './auditLog.store';\r\nimport { AuditLogQuery } from './auditLog.query';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuditLogService {\r\n    private polling = 30000;\r\n    private retryVal = 3;\r\n\r\n    private isSending = false;\r\n    private defaultLog: AuditLog = {};\r\n\r\n    constructor(\r\n        private auditLogStore: AuditLogStore,\r\n        private auditLogQuery: AuditLogQuery,\r\n        private appSettingsQuery: AppSettingsQuery,\r\n        private userQuery: UserAuthenticationQuery,\r\n        private http: HttpClient\r\n    ) {\r\n        appSettingsQuery\r\n            .selectEntity(AppSettings.mobileDefaultPolling)\r\n            .subscribe(val => (this.polling = val.value > 0 ? val.value : 30000));\r\n        appSettingsQuery\r\n            .selectEntity(AppSettings.mobileDefaultRetries)\r\n            .subscribe(val => (this.retryVal = val.value > 0 ? val.value : 3));\r\n        this.StartPolling();\r\n    }\r\n\r\n    public SetDefault(defaultLog: AuditLog) {\r\n        this.defaultLog = defaultLog;\r\n    }\r\n\r\n    public RecordLog(auditLog: AuditLog): void {\r\n        const workingLog = {...this.defaultLog, ...auditLog};\r\n        workingLog.id = uuid();\r\n        if (!workingLog.logDate) {\r\n            workingLog.logDate = ZuluDateHelper.setGMTDate(new Date());\r\n        }\r\n\r\n        if (!workingLog.userID) {\r\n            workingLog.userID = this.userQuery.getUserId();\r\n        }\r\n\r\n        this.auditLogStore.add(workingLog);\r\n        try {\r\n        } catch (err) {\r\n            console.log('Unable to send AppLog, offline?');\r\n        }\r\n    }\r\n\r\n    private StartPolling() {\r\n        setInterval(_ => {\r\n            if (!this.isSending) {\r\n                this.isSending = true;\r\n                this.SendLogEntries();\r\n            }\r\n        }, this.polling);\r\n    }\r\n\r\n    public SendLogEntries() {\r\n        const apiHome = this.appSettingsQuery.getEntity(AppSettings.apiHome).value;\r\n        const logEntries = this.auditLogQuery.getAll();\r\n\r\n        if (logEntries && logEntries.length > 0) {\r\n            const keys = logEntries.map(log => log.id);\r\n            // This post is a fire and forget. Don't have to authorise either\r\n            this.http\r\n                .post(`${apiHome}/api/v1/auditlog`, logEntries)\r\n                .pipe(\r\n                    timeout(30000),\r\n                    retry(3),\r\n                    finalize(() => {\r\n                        this.isSending = false;\r\n                    })\r\n                )\r\n                .subscribe(\r\n                    data => {\r\n                        this.auditLogStore.remove(keys);\r\n                        // keys.forEach(key => this.auditLogStore.remove(({ id }) => id === key));\r\n                    },\r\n                    err => {\r\n                        console.log('Unable to send AppLog, offline?');\r\n                    }\r\n                );\r\n        } else {\r\n            this.isSending = false;\r\n        }\r\n    }\r\n}\r\n","import { Injectable, NgModuleFactoryLoader, Injector } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComponentLoaderService {\r\n  private componentRegistry = {\r\n    'lazy-component': {\r\n      modulePath:\r\n        './lazy-components/lazy-components.module#LazyComponentsModule',\r\n      moduleRef: null\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private loader: NgModuleFactoryLoader,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  registerComponent(name: string, modulePath: string = null) {\r\n    if (!this.componentRegistry[name]) {\r\n      this.componentRegistry[name] = {\r\n        modulePath: modulePath,\r\n        moduleRef: null\r\n      };\r\n    }\r\n  }\r\n\r\n  loadComponent(componentTag: string): Promise<HTMLElement> {\r\n    const cmpRegistryEntry = this.componentRegistry[componentTag];\r\n    if (!cmpRegistryEntry) {\r\n      throw new Error(\r\n        `Unrecognized component \"${componentTag}\". Make sure it is registered in the component registry`\r\n      );\r\n    }\r\n\r\n    if (cmpRegistryEntry.modulePath) {\r\n      // Provided a path so this is a lazy loaded component\r\n      if (cmpRegistryEntry.moduleRef) {\r\n        return new Promise(resolve => {\r\n          const componentInstance = document.createElement(componentTag);\r\n          resolve(componentInstance);\r\n        });\r\n      } else {\r\n        const path = cmpRegistryEntry.modulePath;\r\n\r\n        return new Promise((resolve, reject) => {\r\n          this.loader\r\n            .load(path)\r\n            .then(moduleFactory => {\r\n              const moduleRef = moduleFactory.create(this.injector).instance;\r\n              cmpRegistryEntry.moduleRef = moduleRef;\r\n\r\n              // instantiate the component\r\n              const componentInstance = document.createElement(componentTag);\r\n              resolve(componentInstance);\r\n            })\r\n            .catch(err => {\r\n              console.error('error loading module', err);\r\n              reject(err);\r\n            });\r\n        });\r\n      }\r\n    } else {\r\n      // No path so simple Angular Element already webpacked\r\n      return new Promise((resolve, reject) => {\r\n        const componentInstance = document.createElement(componentTag);\r\n        resolve(componentInstance);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { ErrorModel, AppSettings } from '@ngscaffolding/models';\r\nimport { AppSettingsService } from '../appSettings/appSettings.service';\r\nimport { NotificationService } from '../notification/notification.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreErrorHandlerService extends ErrorHandler {\r\n  constructor(\r\n    private appSettingsService: AppSettingsService,\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public logError(error, source: string = null) {}\r\n\r\n  private processError(error, source: string = null) {}\r\n\r\n  handleError(error, source: string = null) {\r\n    super.handleError(error);\r\n\r\n    if (this.appSettingsService.getValue(AppSettings.errorLogConsole)) {\r\n      console.error(error.message);\r\n    }\r\n    if (this.appSettingsService.getValue(AppSettings.errorLogServer)) {\r\n      const errorModel = new ErrorModel(error);\r\n\r\n      if (source) {\r\n        errorModel.source = source;\r\n      }\r\n\r\n      if (error.stack) {\r\n        errorModel.stackTrace = error.stack;\r\n      }\r\n\r\n      // Consume any errors here. Otherwise we will just get stuck\r\n      try {\r\n        // This post is a fire and forget. Don't have to authorise either\r\n        this.http.post(this.appSettingsService.getValue(AppSettings.apiHome) + '/api/v1/error', errorModel).subscribe(\r\n          data => {\r\n            // alert('ID: ' + data.id);\r\n          },\r\n          err => {\r\n            console.log('Unable to send Error to Server, offline?');\r\n          }\r\n        );\r\n      } catch (err) {\r\n        console.log('Unable to send Error to Server, offline?');\r\n      }\r\n    }\r\n    if (this.appSettingsService.getValue(AppSettings.errorShowUser)) {\r\n      // TODO: Show User Error\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { AppSettingsValue, AppSettings, DataResults } from '@ngscaffolding/models';\r\n\r\n\r\nexport interface DataSourceState extends EntityState<DataResults> {\r\n  isInitialised: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'dataSource', idKey: 'key' })\r\nexport class DataSourceStore extends EntityStore<DataSourceState, DataResults> {\r\n\r\n  constructor() {\r\n    super({ isInitialised: false});\r\n    console.log('DataSourceStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { DataSourceState, DataSourceStore } from './dataSource.store';\r\nimport { DataResults } from '@ngscaffolding/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSourceQuery extends QueryEntity<DataSourceState, DataResults> {\r\n\r\n  isInitialised$ = this.select(state => state.isInitialised);\r\n\r\n  constructor(protected store: DataSourceStore) {\r\n    super(store);\r\n  }\r\n\r\n\r\n}\r\n","import { Observable, forkJoin, throwError, of } from 'rxjs';\r\nimport { retry, timeout } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AppSettingsService } from '../appSettings/appSettings.service';\r\nimport {\r\n  DataSourceRequest,\r\n  DataResults,\r\n  AppSettings,\r\n  ApplicationLog,\r\n} from '@ngscaffolding/models';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { DataSourceStore } from './dataSource.store';\r\nimport { DataSourceQuery } from './dataSource.query';\r\nimport { AppAuditService } from '../appAudit/appAudit.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataSourceService {\r\n  private className = 'DataSourceService';\r\n  private inflightRequests = new Map<string, Observable<DataResults>>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dataSourceStore: DataSourceStore,\r\n    private dataSourceQuery: DataSourceQuery,\r\n    private appSettingsService: AppSettingsService,\r\n    private appAuditService: AppAuditService,\r\n    private logger: LoggingService\r\n  ) {}\r\n\r\n  decorateInput(inputDetails: object): object {\r\n    return null;\r\n  }\r\n\r\n  getDataSource(dataRequest: DataSourceRequest): Observable<DataResults> {\r\n    const key = this.getKey(dataRequest);\r\n\r\n    if (dataRequest.forceRefresh) {\r\n      this.dataSourceStore.remove(key);\r\n    }\r\n\r\n    const currentCacheValue = this.dataSourceQuery.getEntity(key);\r\n    if (currentCacheValue) {\r\n      if (currentCacheValue.expiresWhen > new Date()) {\r\n        // Return good cached value\r\n        return of(currentCacheValue);\r\n      } else {\r\n        // Expired - Bad cache\r\n        this.dataSourceStore.remove(key);\r\n      }\r\n    }\r\n\r\n    if (this.inflightRequests.has(key)) {\r\n      return this.inflightRequests.get(key);\r\n    }\r\n\r\n    // Make HTTP Request\r\n    const formData: FormData = new FormData();\r\n    formData.append('dataSourceRequest', JSON.stringify(dataRequest));\r\n\r\n    // Add Files if passed\r\n    if (dataRequest.fileNames) {\r\n      let fileCount = 0;\r\n      dataRequest.fileNames.forEach((file) => {\r\n        formData.append(`file-${fileCount++}`, file, file.name);\r\n      });\r\n    }\r\n\r\n    const logEntry: ApplicationLog = {\r\n      entity: 'DataSource Call',\r\n      action: key,\r\n      values: {\r\n        filterValues: dataRequest.filterValues,\r\n        inputData: dataRequest.inputData,\r\n      },\r\n    };\r\n\r\n    this.logger.info(\r\n      `Calling Datasource ${dataRequest.name}`,\r\n      null,\r\n      logEntry.values\r\n    );\r\n\r\n    this.inflightRequests.set(\r\n      key,\r\n      new Observable<DataResults>((observer) => {\r\n        this.http\r\n          .post<DataResults>(\r\n            `${this.appSettingsService.getValue(\r\n              AppSettings.apiHome\r\n            )}/api/v1/datasource`,\r\n            formData\r\n          )\r\n          .pipe(timeout(20000), retry(3))\r\n          .subscribe(\r\n            (values) => {\r\n              const expiryNow = new Date();\r\n\r\n              // If expires Seconds not provided set long expiry\r\n              const expiresSeconds =\r\n                values.expiresSeconds > 0 ? values.expiresSeconds : 99999999;\r\n              const expiresWhen = new Date(\r\n                expiryNow.getTime() + expiresSeconds * 10000\r\n              );\r\n              const newResults: DataResults = {\r\n                expiresWhen: expiresWhen,\r\n                rowCount: values.rowCount,\r\n                jsonData: values.jsonData,\r\n                results: values.results,\r\n              };\r\n\r\n              // Log Datasource Success\r\n              this.appAuditService.RecordLog({\r\n                ...logEntry,\r\n                result: 'Success',\r\n              });\r\n\r\n              // Update the Store to tell the world we have data\r\n              this.dataSourceStore.update(key, newResults);\r\n              this.inflightRequests.delete(key);\r\n              observer.next(newResults);\r\n              observer.complete();\r\n            },\r\n            (err) => {\r\n              // Update the Store to tell the world we failed in every way. Shame.\r\n              const errorResults: DataResults = {\r\n                expiresWhen: new Date(),\r\n                error: err.message,\r\n              };\r\n\r\n              // Log Datasource Success\r\n              this.appAuditService.RecordLog({\r\n                ...logEntry,\r\n                result: err.message,\r\n              });\r\n\r\n              this.dataSourceStore.update(key, errorResults);\r\n              this.inflightRequests.delete(key);\r\n\r\n              this.logger.error(err, 'DataSource.Service.getDataSource', false);\r\n              observer.error(err);\r\n            }\r\n          );\r\n      })\r\n    );\r\n\r\n    return this.inflightRequests.get(key);\r\n  }\r\n\r\n  private getKey(dataRequest: DataSourceRequest) {\r\n    return `name:${dataRequest.name} seed:${\r\n      dataRequest.seed\r\n    } inputData:${JSON.stringify(dataRequest.inputData)} `;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { CoreMenuItem } from '@ngscaffolding/models';\r\n\r\nexport interface MenuState extends EntityState<CoreMenuItem> {\r\n  menuItems: CoreMenuItem[];\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'menu', idKey: 'name' })\r\nexport class MenuStore extends EntityStore<MenuState, CoreMenuItem> {\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('MenuStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity, QueryConfig, Order } from '@datorama/akita';\r\nimport { CoreMenuItem, MenuTypes } from '@ngscaffolding/models';\r\nimport { MenuStore, MenuState } from './menu.store';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n@QueryConfig({\r\n    sortBy: 'order',\r\n    sortByOrder: Order.ASC // Order.DESC\r\n})\r\nexport class MenuQuery extends QueryEntity<MenuState, CoreMenuItem> {\r\n    public folders$: Observable<CoreMenuItem[]>;\r\n\r\n    constructor(protected store: MenuStore) {\r\n        super(store);\r\n        this.folders$ = this.selectAll({\r\n            filterBy: [entity => entity.type === MenuTypes.Folder]\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { Role } from '@ngscaffolding/models';\r\n\r\nexport interface RoleState extends EntityState<Role> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'role', idKey: 'name' })\r\nexport class RolesStore extends EntityStore<RoleState, Role> {\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('RoleStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { Role } from '@ngscaffolding/models';\r\nimport { RoleState, RolesStore } from './roles.store';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesQuery extends QueryEntity<RoleState, Role> {\r\n  constructor(protected store: RolesStore) {\r\n    super(store);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport { RolesQuery } from './roles.query';\r\nimport { RolesStore } from './roles.store';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\nimport { combineLatest } from 'rxjs';\r\nimport { AppSettings, SystemDataSourceNames } from '@ngscaffolding/models';\r\nimport { take, finalize } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataSourceService } from '../dataSource/dataSource.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesService {\r\n  private routeRoles = new Map<string, string[]>();\r\n  private apiHome: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private rolesQuery: RolesQuery,\r\n    private appSettingsQuery: AppSettingsQuery,\r\n    private dataSourceService: DataSourceService,\r\n    private rolesStore: RolesStore,\r\n    public authQuery: UserAuthenticationQuery\r\n  ) {\r\n    // First Time load away\r\n    this.rolesStore.setLoading(false);\r\n\r\n    // Wait for settings, then load from server\r\n    combineLatest(this.authQuery.authenticated$, this.appSettingsQuery.selectEntity(AppSettings.apiHome)).subscribe(([authenticated, apiHome]) => {\r\n      if (authenticated && apiHome) {\r\n        this.apiHome = apiHome.value;\r\n        this.rolesQuery\r\n          .selectLoading()\r\n          .pipe(take(1))\r\n          .subscribe(loading => {\r\n            if (!loading) {\r\n              this.downloadRoles();\r\n            }\r\n          });\r\n      } else if (!authenticated) {\r\n        this.rolesStore.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  public downloadRoles() {\r\n    // Mark loading status\r\n    this.rolesStore.setLoading(true);\r\n\r\n    this.dataSourceService\r\n      .getDataSource({ name: SystemDataSourceNames.ROLES_SELECT })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.rolesStore.setLoading(false);\r\n        })\r\n      )\r\n      .subscribe(results => {\r\n        if (results && !results.error) {\r\n          this.rolesStore.add(results.jsonData);\r\n          this.rolesStore.setLoading(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Checks if the current user is in this role.\r\n  public isInRole(role: string): boolean {\r\n    const currentUser = this.authQuery.getValue().userDetails;\r\n    if (currentUser && currentUser.role) {\r\n      return currentUser.role.indexOf(role) > -1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Checks if the current user is in one of these roles.\r\n  public isInRoles(roles: string[]): boolean {\r\n    let result = false;\r\n    const currentUser = this.authQuery.getValue().userDetails;\r\n    if (currentUser && currentUser.role) {\r\n      roles.forEach(role => {\r\n        if (currentUser.role.indexOf(role) > -1) {\r\n          result = true;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // Repository of Roles: Routes\r\n  public addRouteRoles(route: string, roles: string[]) {\r\n    this.routeRoles.set(route, roles);\r\n  }\r\n\r\n  public getRouteRoles(route: string): string[] {\r\n    return this.routeRoles.get(route);\r\n  }\r\n}\r\n","import { RolesService } from '../rolesService/roles.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { timeout, finalize } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { CoreMenuItem, AppSettings, MenuTypes } from '@ngscaffolding/models';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport { MenuStore } from './menu.store';\r\nimport { MenuQuery } from './menu.query';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n    private readonly methodName = 'MenuService';\r\n    private masterListMenu: Array<CoreMenuItem> = [];\r\n    private routes: Array<Route> = [];\r\n\r\n    private menuItems: CoreMenuItem[] = [];\r\n\r\n    private apiHome: string;\r\n\r\n    public routeSubject = new BehaviorSubject<Array<Route>>(this.routes);\r\n\r\n    private httpInFlight = false;\r\n    private lockCount = 0;\r\n    private menuDownloaded = false;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private menuStore: MenuStore,\r\n        private menuQuery: MenuQuery,\r\n        private appSettingsQuery: AppSettingsQuery,\r\n        private authQuery: UserAuthenticationQuery,\r\n        private log: LoggingService,\r\n        public rolesService: RolesService\r\n    ) {\r\n        // Wait for settings, then load from server\r\n        combineLatest([\r\n            this.authQuery.authenticated$,\r\n            this.appSettingsQuery.selectEntity(AppSettings.apiHome),\r\n            this.appSettingsQuery.selectEntity(AppSettings.isMobile)\r\n        ]).subscribe(([authenticated, apiHome, isMobile]) => {\r\n            if (authenticated && apiHome && isMobile && !this.menuDownloaded) {\r\n                this.apiHome = apiHome.value;\r\n                if (!this.httpInFlight) {\r\n                    this.downloadMenuItems(isMobile.value || false);\r\n                }\r\n            } else if (!authenticated) {\r\n                this.menuDownloaded = false;\r\n                this.lockCount = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    private addLock() {\r\n        this.lockCount++;\r\n        this.log.info(`MENU Service: Locks on Loading`, this.methodName, this.lockCount);\r\n        this.menuStore.setLoading(true);\r\n    }\r\n\r\n    public setCurrent(name: string) {\r\n        this.menuStore.setActive(name);\r\n    }\r\n\r\n    private removeLock() {\r\n        this.lockCount--;\r\n        this.log.info(`MENU Service: Locks on Loading`, this.methodName, this.lockCount);\r\n\r\n        if (this.lockCount === 0) {\r\n            this.menuStore.setLoading(false);\r\n        }\r\n    }\r\n\r\n    public addMenuItemsFromCode(menuItems: CoreMenuItem[], roles: string[] = null) {\r\n        this.addLock();\r\n        this.log.info('Adding MenuItems menuItems', this.methodName, menuItems);\r\n\r\n        // Wait till user authorised\r\n        this.authQuery.authenticated$.subscribe(authorised => {\r\n            if (authorised) {\r\n                // Save for later use\r\n                this.addMenuItems(menuItems);\r\n                this.removeLock();\r\n            }\r\n        });\r\n    }\r\n\r\n    public getFolders(): CoreMenuItem[] {\r\n        return this.menuQuery.getAll({\r\n            filterBy: [entity => entity.type === MenuTypes.Folder]\r\n        });\r\n    }\r\n\r\n    public delete(menuItem: CoreMenuItem): Observable<any> {\r\n        return new Observable<any>(observer => {\r\n            const obs = this.http.delete(`${this.apiHome}/api/v1/menuitems/${menuItem.name}`);\r\n            obs.subscribe(\r\n                () => {\r\n                    // Remove from our store\r\n                    this.menuStore.remove(menuItem.name);\r\n\r\n                    // Remove from Tree\r\n                    const existingMenus = JSON.parse(JSON.stringify(this.menuQuery.getValue())).menuItems;\r\n                    let parentMenu: CoreMenuItem;\r\n                    if (menuItem.parent) {\r\n                        parentMenu = existingMenus.find(menu => menu.name && menu.name.toLowerCase() === menuItem.parent.toLowerCase());\r\n                    }\r\n\r\n                    const foundIndex = (parentMenu.items as CoreMenuItem[]).findIndex(\r\n                        childMenu => childMenu.name && childMenu.name === menuItem.name\r\n                    );\r\n                    parentMenu.items.splice(foundIndex, 1);\r\n\r\n                    // Update tree and tell the world\r\n                    this.menuStore.update({ menuItems: existingMenus });\r\n                    observer.next();\r\n                    observer.complete();\r\n                },\r\n                err => {\r\n                    observer.error(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    public saveMenuItem(menuItem: CoreMenuItem): Observable<any> {\r\n        return this.http.post<CoreMenuItem>(this.apiHome + '/api/v1/menuitems', menuItem);\r\n    }\r\n\r\n    public updateExistingMenuItem(menuItem: CoreMenuItem) {\r\n        // Is this existing?\r\n        const existing = this.menuQuery.hasEntity(menuItem.name);\r\n        if (existing) {\r\n            this.menuStore.upsert(menuItem.name, menuItem);\r\n        } else {\r\n            // Add to reference list of menus\r\n            this.menuStore.add(menuItem);\r\n        }\r\n\r\n        const existingMenus = JSON.parse(JSON.stringify(this.menuQuery.getAll()));\r\n        let parentMenu: CoreMenuItem;\r\n        if (menuItem.parent) {\r\n            parentMenu = existingMenus.find(menu => menu.name.toLowerCase() === menuItem.parent.toLowerCase());\r\n        }\r\n        // Add to treeview for menu rendering\r\n        if (!parentMenu.items || !Array.isArray(parentMenu.items)) {\r\n            parentMenu.items = [];\r\n        }\r\n        if (existing) {\r\n            const foundIndex = (parentMenu.items as CoreMenuItem[]).findIndex(childMenu => childMenu.name === menuItem.name);\r\n            parentMenu.items[foundIndex] = menuItem;\r\n        } else {\r\n            (parentMenu.items as CoreMenuItem[]).push(menuItem);\r\n        }\r\n\r\n        // Update tree and tell the world\r\n        this.menuStore.update({ menuItems: existingMenus });\r\n    }\r\n\r\n    // Iterative Call\r\n    private addMenuItemsToReferenceList(menuItems: CoreMenuItem[]): void {\r\n        menuItems.forEach(menuItem => {\r\n            // Add to Entity Store\r\n            this.menuStore.upsert(menuItem.name, menuItem);\r\n            if (menuItem.items && Array.isArray(menuItem.items)) {\r\n                this.addMenuItemsToReferenceList(menuItem.items as Array<CoreMenuItem>);\r\n            }\r\n        });\r\n    }\r\n\r\n    private removeUnauthorisedMenuItems(menuItems: CoreMenuItem[]): CoreMenuItem[] {\r\n        const user = this.authQuery.getValue();\r\n        let userRoles: string[] = [];\r\n        if (user && user.userDetails) {\r\n            userRoles = user.userDetails.role;\r\n        }\r\n\r\n        const removingMenus: string[] = [];\r\n        let returnMenus: CoreMenuItem[] = JSON.parse(JSON.stringify(menuItems));\r\n\r\n        for (let menuIndex = 0; menuIndex < returnMenus.length; menuIndex++) {\r\n            const menuItem = returnMenus[menuIndex];\r\n\r\n            let removingThis = false;\r\n\r\n            // makes sure roles is array\r\n            let checkingRoles = [];\r\n\r\n            if (!menuItem.roles) {\r\n                checkingRoles = [];\r\n            } else if (Array.isArray(menuItem.roles)) {\r\n                checkingRoles = [...menuItem.roles];\r\n            } else {\r\n                checkingRoles = [menuItem.roles];\r\n            }\r\n\r\n            // Is this role protected\r\n            if (checkingRoles && checkingRoles.length > 0) {\r\n                if (userRoles && checkingRoles.filter(allowedRole => userRoles.indexOf(allowedRole) !== -1).length === 0) {\r\n                    // No Authority. Remove\r\n                    removingThis = true;\r\n                    removingMenus.push(menuItem.name);\r\n                }\r\n            }\r\n\r\n            if (!removingThis && menuItem.items) {\r\n                menuItem.items = this.removeUnauthorisedMenuItems(menuItem.items as CoreMenuItem[]);\r\n            }\r\n        }\r\n\r\n        if (removingMenus.length > 0) {\r\n            returnMenus = menuItems.filter(menu => removingMenus.findIndex(remove => remove === menu.name) === -1);\r\n        }\r\n\r\n        return returnMenus;\r\n    }\r\n\r\n    public downloadMenuItems(isMobile: boolean) {\r\n        // Mark loading status\r\n        this.addLock();\r\n        this.httpInFlight = true;\r\n\r\n        const newMenuItems: CoreMenuItem[] = [];\r\n\r\n        this.http\r\n            .get<Array<CoreMenuItem>>(`${this.apiHome}/api/v1/menuitems?mobile=${isMobile}`)\r\n            .pipe(\r\n                timeout(60000),\r\n                finalize(() => {\r\n                    this.httpInFlight = false;\r\n                    this.removeLock();\r\n                })\r\n            )\r\n            .subscribe(\r\n                downloadedMenuItems => {\r\n                    this.log.info(`Downloaded MenuItems`);\r\n                    this.menuDownloaded = true;\r\n\r\n                    this.addMenuItems(downloadedMenuItems);\r\n                },\r\n                err => {\r\n                    this.log.error('Failed to download Menu');\r\n                }\r\n            );\r\n    }\r\n\r\n    public addMenuItems(newMenuItems: CoreMenuItem[], findInTree = false) {\r\n        // Clone so we can amend\r\n        const fetchedMenuItems = this.menuQuery.getValue().menuItems || [];\r\n        this.menuItems = JSON.parse(JSON.stringify(fetchedMenuItems));\r\n\r\n        this.calculateRouterLinks(newMenuItems);\r\n\r\n        // Add to flat reference List\r\n        this.addMenuItemsToReferenceList(newMenuItems);\r\n        if (findInTree) {\r\n            newMenuItems.forEach(loopMenuItem => {\r\n                this.upsertMenuItemToExistingTree(loopMenuItem);\r\n            });\r\n        } else {\r\n        newMenuItems.forEach(loopMenuItem => {\r\n            this.addNewMenuItemToEntities(this.menuItems, loopMenuItem);\r\n        });\r\n        }\r\n\r\n        // Remove the unatuhorised\r\n        this.menuItems = this.removeUnauthorisedMenuItems(this.menuItems);\r\n\r\n        this.menuStore.update({ menuItems: this.menuItems });\r\n    }\r\n\r\n    private calculateRouterLinks(menuItems: CoreMenuItem[]) {\r\n        if (menuItems) {\r\n            menuItems.forEach(menuItem => {\r\n                if (!menuItem.routerLink) {\r\n                    // Need to create our routerLink\r\n                    switch (menuItem.type) {\r\n                        case MenuTypes.Dashboard: {\r\n                            menuItem.routerLink = `dashboard/${menuItem.name}`;\r\n                            break;\r\n                        }\r\n                        case MenuTypes.Datagrid: {\r\n                            menuItem.routerLink = `datagrid/${menuItem.name}`;\r\n                            break;\r\n                        }\r\n                        case MenuTypes.Folder: {\r\n                            // No router link here\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            menuItem.routerLink = menuItem.name;\r\n                        }\r\n                    }\r\n                }\r\n                if (menuItem.items) {\r\n                    this.calculateRouterLinks(menuItem.items as CoreMenuItem[]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public addRoute(route: Route, roles: string[] = null) {\r\n        this.log.info(`Adding Route ${JSON.stringify(route)}`);\r\n        this.routes.push(route);\r\n\r\n        if (roles !== null) {\r\n            this.rolesService.addRouteRoles(route.path, roles);\r\n        }\r\n    }\r\n\r\n    private upsertMenuItemToExistingTree(newMenuItem: CoreMenuItem) {\r\n        const menuItems = [...this.menuItems];\r\n        if (!newMenuItem.parent || newMenuItem.parent === '') {\r\n            // Root menu item\r\n            let existing = menuItems.find(menu => menu.name === newMenuItem.name);\r\n            if (existing) {\r\n                existing = { ...newMenuItem };\r\n            } else {\r\n                menuItems.push({ ...newMenuItem });\r\n            }\r\n        } else {\r\n            // Submenu item\r\n            const parent = menuItems.find(menu => menu.name === newMenuItem.parent);\r\n            if (parent) {\r\n                let existing = (parent.items as CoreMenuItem[]).find(menu => menu.name === newMenuItem.name);\r\n                if (existing) {\r\n                    existing = { ...newMenuItem };\r\n                } else {\r\n                    (parent.items as CoreMenuItem[]).push({ ...newMenuItem });\r\n                }\r\n            }\r\n        }\r\n        this.menuItems = menuItems;\r\n    }\r\n\r\n    private addNewMenuItemToEntities(targetMenu: CoreMenuItem[], newMenuItem: CoreMenuItem) {\r\n        let calcRouterLink: string | string[];\r\n\r\n        // Don't add if we already know about this\r\n        if (targetMenu && !targetMenu.find(menu => menu.name === newMenuItem.name)) {\r\n            // Router bits\r\n            if (newMenuItem.routerLink && (<string>newMenuItem.routerLink).indexOf(',') > -1) {\r\n                calcRouterLink = (<string>newMenuItem.routerLink).split(',');\r\n            } else {\r\n                calcRouterLink = newMenuItem.routerLink;\r\n            }\r\n\r\n            const createdMenuItem: CoreMenuItem = { ...newMenuItem, routerLink: calcRouterLink };\r\n\r\n            targetMenu.push(createdMenuItem);\r\n\r\n            if (newMenuItem.items && newMenuItem.items.length > 0) {\r\n                createdMenuItem.items = [];\r\n                const castItems = newMenuItem.items as CoreMenuItem[];\r\n                castItems.forEach(menuItem => {\r\n                    this.addNewMenuItemToEntities(createdMenuItem.items as CoreMenuItem[], menuItem);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { ReferenceValue } from '@ngscaffolding/models';\r\n\r\n\r\nexport interface ReferenceValuesState extends EntityState<ReferenceValue> {\r\n  isInitialised: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'referenceValues', idKey: 'compositeKey' })\r\nexport class ReferenceValuesStore extends EntityStore<ReferenceValuesState, ReferenceValue> {\r\n\r\n  constructor() {\r\n    super({ isInitialised: false });\r\n    console.log('ReferenceValuesStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { ReferenceValuesStore, ReferenceValuesState } from './referenceValues.store';\r\nimport { ReferenceValue } from '@ngscaffolding/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReferenceValuesQuery extends QueryEntity<ReferenceValuesState, ReferenceValue> {\r\n\r\n  isInitialised$ = this.select(state => state.isInitialised);\r\n\r\n  constructor(protected store: ReferenceValuesStore) {\r\n    super(store);\r\n  }\r\n\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AppSettingsService } from '../appSettings/appSettings.service';\r\nimport { ReferenceValue, AppSettings } from '@ngscaffolding/models';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { ReferenceValuesQuery } from './referenceValues.query';\r\nimport { ReferenceValuesStore } from './referenceValues.store';\r\nimport { isArray } from 'util';\r\nimport { timeout, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ReferenceValuesService {\r\n    private className = 'ReferenceValuesService';\r\n\r\n    private requestsInFlight = new Map<string, Observable<ReferenceValue>>();\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private appSettingsService: AppSettingsService,\r\n        private refValuesQuery: ReferenceValuesQuery,\r\n        private refValuesStore: ReferenceValuesStore,\r\n        private logger: LoggingService\r\n    ) {}\r\n\r\n    //\r\n    // Get a single string value from References\r\n    //\r\n    getValue(name: string, group: string): Observable<string> {\r\n        return new Observable<string>(observer => {\r\n            this.getReferenceValue(name, group).subscribe(reference => {\r\n                if (reference) {\r\n                    observer.next(reference.value);\r\n                } else {\r\n                    observer.next(null);\r\n                }\r\n                observer.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    // Clear all Reference values with this name as root of key\r\n    clearReferenceValue(clearNames: string | Array<string>) {\r\n        let namesArray: Array<string>;\r\n        if (Array.isArray(clearNames)) {\r\n            namesArray = clearNames;\r\n        } else {\r\n            namesArray = [clearNames];\r\n        }\r\n\r\n        for (const loopName of namesArray) {\r\n            const list = this.refValuesQuery.getAll({ filterBy: entity => entity.name.startsWith(loopName) });\r\n\r\n        for (const refValue of list) {\r\n                this.refValuesStore.remove(refValue.compositeKey);\r\n            }\r\n        }\r\n    }\r\n\r\n    setReferenceValue(referenceValue: ReferenceValue) {\r\n        referenceValue.compositeKey = this.getKey(referenceValue.name, '');\r\n        this.refValuesStore.upsert(this.getKey(referenceValue.name, ''), referenceValue);\r\n    }\r\n\r\n    private isExpired(refVal: ReferenceValue): boolean {\r\n        const cacheSeconds = refVal.cacheSeconds || 31556952; // Default to a year\r\n        const nowDate = new Date();\r\n        const expires = new Date(refVal.whenStored);\r\n\r\n        expires.setSeconds(expires.getSeconds() + cacheSeconds);\r\n        return nowDate > expires;\r\n    }\r\n\r\n    //\r\n    // Get a complex ReferenceValue (May include multiple values)\r\n    //\r\n    getReferenceValue(name: string, seed = '', childDepth = 0): Observable<ReferenceValue> {\r\n        if (this.refValuesQuery.hasEntity(this.getKey(name, seed))) {\r\n            const cacheValue = this.refValuesQuery.getEntity(this.getKey(name, seed));\r\n            if (this.isExpired(cacheValue)) {\r\n                // Expired cache value. Go get a new one\r\n                return this.downloadRefValue(name, seed);\r\n            }\r\n\r\n            // If we get one from Cache, thats handy to use\r\n            this.logger.info(`Reference Values From Cache ${name}::${seed}`);\r\n            return new Observable<ReferenceValue>(observer => {\r\n                observer.next(this.refValuesQuery.getEntity(this.getKey(name, seed)));\r\n                observer.complete();\r\n            });\r\n        } else if (childDepth > 0) {\r\n            const refValue = this.refValuesQuery.getEntity(this.getKey(name, ''));\r\n            if (refValue) {\r\n                const parentRef = refValue.referenceValueItems.find(parent => parent.value === seed);\r\n                if (parentRef) {\r\n                    const clone = { ...refValue };\r\n                    clone.referenceValueItems = parentRef.referenceValueItems;\r\n\r\n                    return new Observable<ReferenceValue>(observer => {\r\n                        observer.next(clone);\r\n                        observer.complete();\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            return this.downloadRefValue(name, seed);\r\n        }\r\n    }\r\n\r\n    private downloadRefValue(name: string, seed: string): Observable<ReferenceValue> {\r\n        // Nothing in the Cache\r\n        if (this.requestsInFlight.has(this.getKey(name, seed))) {\r\n            // We have already asked for this, return our existing Observable\r\n            return this.requestsInFlight.get(this.getKey(name, seed));\r\n        } else {\r\n            const wrapper = new Observable<ReferenceValue>(observer => {\r\n                // Call HTTP Here\r\n                this.logger.info(`Reference Values From HTTP ${name}::${seed}`);\r\n                const httpRequest = this.http\r\n                    .get<ReferenceValue>(\r\n                        `${this.appSettingsService.getValue(AppSettings.apiHome)}/api/v1/referencevalues?name=${name}&seed=${seed}`\r\n                    )\r\n                    .pipe(timeout(20000), retry(3));\r\n                httpRequest.subscribe(\r\n                        value => {\r\n                            value.compositeKey = this.getKey(name, seed);\r\n                            value.whenStored = new Date();\r\n\r\n                            this.refValuesStore.upsert(this.getKey(name, seed), value);\r\n                            this.requestsInFlight.delete(this.getKey(name, seed));\r\n\r\n                            observer.next(value);\r\n                            observer.complete();\r\n                        },\r\n                        err => {\r\n                            // Error here. If we have a valid value, respond with that\r\n                            if (this.refValuesQuery.hasEntity(this.getKey(name, seed))) {\r\n                                this.logger.info(`Reference Values From HTTP Failed using last Cache ${name}::${seed}`);\r\n                                observer.next(this.refValuesQuery.getEntity(this.getKey(name, seed)));\r\n                                observer.complete();\r\n                            } else {\r\n                                observer.error(err);\r\n                            }\r\n                        }\r\n                    );\r\n            });\r\n\r\n            this.requestsInFlight.set(this.getKey(name, seed), wrapper);\r\n            return wrapper;\r\n        }\r\n    }\r\n\r\n    private getKey(name: string, seed: string): string {\r\n        return `${name}::${seed}`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  BroadcastService,\r\n  BroadcastTypes\r\n} from '../broadcast/broadcast.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpinnerService {\r\n  constructor(private broadcastService: BroadcastService) {}\r\n\r\n  public showSpinner(message: string = null) {\r\n    this.broadcastService.broadcast(BroadcastTypes.SHOW_SPINNER, message);\r\n  }\r\n\r\n  public hideSpinner() {\r\n    this.broadcastService.broadcast(BroadcastTypes.HIDE_SPINNER);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseEntity } from '@ngscaffolding/models';\r\n\r\n@Injectable()\r\nexport abstract class UserAuthenticationBase {\r\n    abstract getToken(): string;\r\n    abstract forceLogon(returnUrl: string);\r\n    abstract logon(userName: string, password: string);\r\n    abstract logoff();\r\n\r\n    abstract async completeAuthentication();\r\n    abstract isAuthenticated(): boolean;\r\n    abstract authorizationHeaderValue();\r\n    abstract name(): string;\r\n\r\n    abstract filterItemsByRole(authItems: BaseEntity[]): BaseEntity[];\r\n\r\n    abstract checkByRoles(authItem: BaseEntity): boolean;\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { timeout } from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { AppSettingsService } from '../appSettings/appSettings.service';\r\nimport { LoggingService } from '../logging/logging.service';\r\n\r\nimport { BasicUser, AppSettings, BaseEntity } from '@ngscaffolding/models';\r\n\r\nimport { AuthenticationStore } from './userAuthentication.store';\r\n\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UserAuthenticationBase } from './UserAuthenticationBase';\r\nimport { resetStores } from '@datorama/akita';\r\nimport { UserAuthenticationQuery } from './userAuthentication.query';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserAuthenticationService implements UserAuthenticationBase {\r\n    private readonly tokenStorageKey = 'USER_TOKEN';\r\n\r\n    private jwtHelper: JwtHelperService;\r\n\r\n    constructor(\r\n        private logger: LoggingService,\r\n        private http: HttpClient,\r\n        private authStore: AuthenticationStore,\r\n        private authQuery: UserAuthenticationQuery,\r\n        private appSettingsService: AppSettingsService,\r\n        private router: Router\r\n    ) {\r\n        logger.info('UserAuthorisationService - Constructor');\r\n        this.jwtHelper = new JwtHelperService({});\r\n        this.loadUserTokenFromStorage();\r\n    }\r\n\r\n    filterItemsByRole(authItems: BaseEntity[]): Array<BaseEntity> {\r\n        const returnItems: BaseEntity[] = [];\r\n\r\n        if (authItems) {\r\n            authItems.forEach(authItem => {\r\n                if (this.checkByRoles(authItem)) {\r\n                    returnItems.push(authItem);\r\n                }\r\n            });\r\n        }\r\n\r\n        return returnItems;\r\n    }\r\n\r\n    // Check if user passes muster\r\n    checkByRoles(authItem: BaseEntity): boolean {\r\n        // No roles = always okay\r\n        if (!authItem.roles) {\r\n            return true;\r\n        }\r\n\r\n        let isAllowed = false;\r\n        const user = this.authQuery.getUser();\r\n\r\n        if (user.role) {\r\n            user.role.forEach(role => {\r\n                authItem.roles.forEach(authRole => {\r\n                    if (role === authRole) {\r\n                        isAllowed = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return isAllowed;\r\n    }\r\n\r\n    completeAuthentication() {}\r\n    isAuthenticated(): boolean {\r\n        const token = this.getToken();\r\n        const tokenDetails = this.jwtHelper.decodeToken(token);\r\n\r\n        return tokenDetails && !this.jwtHelper.isTokenExpired(token);\r\n    }\r\n    authorizationHeaderValue() {}\r\n    name(): string {\r\n        return 'Hello World';\r\n    }\r\n\r\n    forceLogon(returnUrl: string) {\r\n        this.logoff();\r\n        this.router.navigate(['login'], { queryParams: { returnUrl: returnUrl } });\r\n    }\r\n\r\n    getToken(): string {\r\n        return this.authQuery.getValue().token;\r\n    }\r\n\r\n    private loadUserTokenFromStorage() {\r\n        const savedToken = localStorage.getItem(this.tokenStorageKey); // Loaded from Saved Storage\r\n        if (savedToken !== null) {\r\n            // New AuthUser Based on Token\r\n            if (!this.jwtHelper.isTokenExpired(savedToken)) {\r\n                // If all Good\r\n                this.logger.info('Token from Storage - Token Loaded and not Expired');\r\n                this.setToken(savedToken);\r\n            } else {\r\n                // Expired Token\r\n                this.logger.info('Token from Storage - Token Expired - Not using');\r\n            }\r\n        } else {\r\n            // No token\r\n            this.logger.info('Token from Storage - No Token Available');\r\n        }\r\n    }\r\n\r\n    private setToken(token: any) {\r\n        // New AuthUser Based on Token\r\n        const tokenDetails = this.jwtHelper.decodeToken(token);\r\n\r\n        const newUser = new BasicUser();\r\n\r\n        if (tokenDetails['firstName'] && tokenDetails['lastName']) {\r\n            newUser.name = tokenDetails['firstName'] + ' ' + tokenDetails['lastName'];\r\n        }\r\n\r\n        if (tokenDetails['sub']) {\r\n            newUser.userId = tokenDetails['sub'];\r\n        }\r\n\r\n        if (tokenDetails['role']) {\r\n            newUser.role = tokenDetails['role'];\r\n        }\r\n\r\n        if (tokenDetails['email']) {\r\n            newUser.email = tokenDetails['email'];\r\n        }\r\n\r\n        this.authStore.update({ token: token, userDetails: newUser, authenticated: true });\r\n    }\r\n\r\n    public logon(userName: string, password: string): Observable<null> {\r\n        return new Observable<null>(observer => {\r\n            let body = new HttpParams();\r\n            body = body\r\n                .append('username', userName)\r\n                .append('password', password)\r\n                .append('grant_type', 'password')\r\n                .append('client_id', this.appSettingsService.getValue(AppSettings.authClientId))\r\n                .append('client_secret', this.appSettingsService.getValue(AppSettings.authClientSecret))\r\n                .append('scope', this.appSettingsService.getValue(AppSettings.authScope) + ' offline_access openid');\r\n\r\n            this.http\r\n                .post(\r\n                    this.appSettingsService.getValue(AppSettings.apiAuth) + this.appSettingsService.getValue(AppSettings.authTokenEndpoint),\r\n                    body,\r\n                    {\r\n                        headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                    }\r\n                )\r\n                .pipe(timeout(30000))\r\n                .subscribe(\r\n                    response => {\r\n                        // chek if user is is in 'user' role\r\n                        const tokenDetails = this.jwtHelper.decodeToken(response['access_token']);\r\n                        const requiredRole = this.appSettingsService.getValue(AppSettings.authRequiredRole);\r\n                        if (tokenDetails['role']) {\r\n                            if (requiredRole && !tokenDetails['role'].includes(requiredRole)) {\r\n                                observer.error('Unauthorised');\r\n                            } else {\r\n                        // Save Token in Storage if needed\r\n                        if (this.appSettingsService.getValue(AppSettings.authSaveinLocalStorage)) {\r\n                            localStorage.setItem(this.tokenStorageKey, response['access_token']);\r\n                        }\r\n\r\n                        // Load our details from this token\r\n                        this.setToken(response['access_token']);\r\n\r\n                        if (response['refresh_token']) {\r\n                            // this.refreshToken = response['refresh_token'];\r\n                        }\r\n\r\n                        observer.next(null);\r\n                        observer.complete();\r\n                            }\r\n                        }\r\n                    },\r\n                    err => {\r\n                        observer.error(err);\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    public logoff(): void {\r\n        if (this.appSettingsService.getValue(AppSettings.authSaveinLocalStorage)) {\r\n            // Remove token from Local Storage\r\n            localStorage.removeItem(this.tokenStorageKey);\r\n        }\r\n\r\n        // Clear Akita Stores\r\n        resetStores({ exclude: ['appSettings'] });\r\n\r\n        this.authStore.update({ token: null, userDetails: null, authenticated: false });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserManager, UserManagerSettings, User } from 'oidc-client';\r\nimport { UserAuthenticationBase } from './UserAuthenticationBase';\r\nimport { AppSettings, BaseEntity, BasicUser } from '@ngscaffolding/models';\r\nimport { AuthenticationStore } from './userAuthentication.store';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UserAuthenticationQuery } from './userAuthentication.query';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OAuthService implements UserAuthenticationBase {\r\n  private manager: UserManager;\r\n  private user: User | null;\r\n  private jwtHelper: JwtHelperService;\r\n\r\n  constructor(\r\n    private authStore: AuthenticationStore,\r\n    private authQuery: UserAuthenticationQuery,\r\n    private appSettingsQuery: AppSettingsQuery\r\n  ) {\r\n    this.jwtHelper = new JwtHelperService({});\r\n    appSettingsQuery\r\n      .selectEntity(AppSettings.authOAuthSettings)\r\n      .subscribe((settings) => {\r\n        this.manager = new UserManager(settings.value);\r\n        this.manager.getUser().then((user) => {\r\n          if (user) {\r\n            this.user = user;\r\n            this.setToken(this.user.access_token);\r\n          }\r\n        });\r\n      });\r\n  }\r\n  filterItemsByRole(authItems: BaseEntity[]): Array<BaseEntity> {\r\n    const returnItems: BaseEntity[] = [];\r\n\r\n    if (authItems) {\r\n      authItems.forEach((authItem) => {\r\n        if (this.checkByRoles(authItem)) {\r\n          returnItems.push(authItem);\r\n        }\r\n      });\r\n    }\r\n\r\n    return returnItems;\r\n  }\r\n\r\n  // Check if user passes muster\r\n  checkByRoles(authItem: BaseEntity): boolean {\r\n    // No roles = always okay\r\n    if (!authItem.roles) {\r\n      return true;\r\n    }\r\n\r\n    let isAllowed = false;\r\n    const user = this.authQuery.getUser();\r\n\r\n    if (user.role) {\r\n      user.role.forEach((role) => {\r\n        authItem.roles.forEach((authRole) => {\r\n          if (role === authRole) {\r\n            isAllowed = true;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return isAllowed;\r\n  }\r\n\r\n  getToken(): string {\r\n    return this.user.access_token;\r\n  }\r\n  forceLogon() {\r\n    this.logon();\r\n  }\r\n  logon(userName = '', password = '') {\r\n    return this.manager.signinRedirect();\r\n  }\r\n  async logoff() {\r\n    await this.manager.signoutRedirect();\r\n  }\r\n  async completeAuthentication() {\r\n    this.user = await this.manager.signinRedirectCallback();\r\n    this.setToken(this.user.access_token);\r\n  }\r\n  isAuthenticated(): boolean {\r\n    this.manager.getUser().then((user) => {\r\n      this.user = user;\r\n    });\r\n    return this.user != null && !this.user.expired;\r\n  }\r\n  authorizationHeaderValue() {\r\n    return `${this.user.token_type} ${this.user.access_token}`;\r\n  }\r\n  name(): string {\r\n    return this.user != null ? this.user.profile.name : '';\r\n  }\r\n\r\n  private setToken(token: any) {\r\n    // New AuthUser Based on Token\r\n    const tokenDetails = this.jwtHelper.decodeToken(token);\r\n\r\n    const newUser = new BasicUser();\r\n\r\n    if (tokenDetails['name']) {\r\n      newUser.name = tokenDetails['name'];\r\n    } else if (tokenDetails['firstName'] && tokenDetails['lastName']) {\r\n      newUser.name = tokenDetails['firstName'] + ' ' + tokenDetails['lastName'];\r\n    }\r\n\r\n    if (tokenDetails['role']) {\r\n      newUser.role = tokenDetails['role'];\r\n    }\r\n\r\n    if (tokenDetails['email']) {\r\n      newUser.userId = tokenDetails['email'];\r\n      newUser.email = tokenDetails['email'];\r\n    }\r\n\r\n    this.authStore.update({\r\n      token: token,\r\n      userDetails: newUser,\r\n      authenticated: true,\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { UserPreferenceValue, UserPreferenceDefinition } from '@ngscaffolding/models';\r\n\r\n\r\nexport interface UserPreferencesState extends EntityState<UserPreferenceValue> {\r\n  preferenceDefinitions: UserPreferenceDefinition[];\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'userPreferences', idKey: 'name' })\r\nexport class UserPreferencesStore extends EntityStore<UserPreferencesState, UserPreferenceValue> {\r\n\r\n  constructor() {\r\n    super({ isInitialised: false });\r\n    console.log('UserPreferencesStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { UserPreferencesStore, UserPreferencesState } from './userPreferences.store';\r\nimport { UserPreferenceValue } from '@ngscaffolding/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserPreferencesQuery extends QueryEntity<UserPreferencesState, UserPreferenceValue> {\r\n\r\n  isInitialised$ = this.select(state => state.isInitialised);\r\n\r\n  constructor(protected store: UserPreferencesStore) {\r\n    super(store);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, combineLatest } from 'rxjs';\r\n\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport { AppSettingsService } from '../appSettings/appSettings.service';\r\n\r\n// Models\r\nimport { UserPreferenceDefinition, UserPreferenceValue, AppSettings } from '@ngscaffolding/models';\r\nimport { UserPreferencesStore } from './userPreferences.store';\r\nimport { UserPreferencesQuery } from './userPreferences.query';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserPreferencesService {\r\n  private readonly className = 'UserPreferencesService';\r\n  private readonly prefix = 'preference_';\r\n  private readonly storageKey = 'UserPreferences';\r\n\r\n  private apiHome: string;\r\n  private valuesDownloaded = false;\r\n  private definitionsDownloaded = false;\r\n  private httpInFlight = 0;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authQuery: UserAuthenticationQuery,\r\n    private appSettingsQuery: AppSettingsQuery,\r\n    private logger: LoggingService,\r\n    private userPrefsStore: UserPreferencesStore,\r\n    private userPrefsQuery: UserPreferencesQuery,\r\n    private appSettings: AppSettingsService\r\n  ) {\r\n    // Wait for settings, then load from server\r\n    combineLatest([this.authQuery.authenticated$, this.appSettingsQuery.selectEntity(AppSettings.apiHome)]).subscribe(([authenticated, apiHome]) => {\r\n      if (authenticated && apiHome && !this.valuesDownloaded && !this.definitionsDownloaded) {\r\n        this.apiHome = apiHome.value;\r\n        if (!this.httpInFlight) {\r\n          // Load User Prefs from Localstorage\r\n          this.loadFromLocal();\r\n\r\n          // Load Pref Defs from server\r\n          this.getDefinitions();\r\n\r\n          // Load User Prefs from Server\r\n          this.getValues();\r\n        }\r\n      } else if (!authenticated) {\r\n        // Clear Here as we logoff\r\n        this.clearValues();\r\n      }\r\n    });\r\n  }\r\n\r\n  private clearValues() {\r\n    this.userPrefsStore.remove();\r\n\r\n    // Save to LocalStorage\r\n    localStorage.removeItem(this.storageKey);\r\n  }\r\n\r\n  public deleteValue(name: string) {\r\n    return new Observable<any>(observer => {\r\n      this.http.delete(`${this.appSettings.getValue(AppSettings.apiHome)}/api/v1/userpreferencevalue/${name}`).subscribe(\r\n        () => {\r\n          // Remove and tell the world\r\n          this.userPrefsStore.remove(name);\r\n\r\n          localStorage.removeItem(this.storageKey);\r\n          this.saveToLocal();\r\n\r\n          observer.next();\r\n          observer.complete();\r\n        },\r\n        err => {\r\n          observer.error(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  public getValues() {\r\n    // Load values from Server\r\n    this.httpInFlight++;\r\n    this.http.get<Array<UserPreferenceValue>>(`${this.appSettings.getValue(AppSettings.apiHome)}/api/v1/userpreferencevalue`).subscribe(\r\n      prefValues => {\r\n        if (prefValues) {\r\n          prefValues.forEach(prefValue => {\r\n            this.userPrefsStore.upsert(prefValue.name, prefValue);\r\n          });\r\n          this.userPrefsStore.setLoading(false);\r\n          this.httpInFlight--;\r\n          this.valuesDownloaded = true;\r\n        }\r\n      },\r\n      err => {\r\n        this.httpInFlight--;\r\n        this.logger.error(err, this.className, true);\r\n      }\r\n    );\r\n  }\r\n\r\n  public setValue(key: string, value: any): Observable<any> {\r\n    return new Observable<any>(observer => {\r\n      this.http.post(`${this.appSettings.getValue(AppSettings.apiHome)}/api/v1/userpreferencevalue`, { name: key, value: value }).subscribe(\r\n        () => {\r\n          const existingEntity = this.userPrefsQuery.getEntity(key);\r\n          let newEntity = new UserPreferenceValue();\r\n\r\n          if (existingEntity) {\r\n            newEntity = JSON.parse(JSON.stringify(existingEntity));\r\n          } else {\r\n            newEntity.name = key;\r\n            newEntity.userId = this.authQuery.getValue().userDetails.userId;\r\n          }\r\n\r\n          newEntity.value = value;\r\n          this.userPrefsStore.upsert(key, newEntity);\r\n\r\n          observer.next();\r\n          observer.complete();\r\n        },\r\n        err => {\r\n          observer.error(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  private getDefinitions() {\r\n    this.httpInFlight++;\r\n    this.http.get<Array<UserPreferenceDefinition>>(`${this.appSettings.getValue(AppSettings.apiHome)}/api/v1/UserPreferenceDefinition`).subscribe(\r\n      prefDefinitions => {\r\n        if (prefDefinitions && prefDefinitions.length > 0) {\r\n          let defns = [];\r\n          prefDefinitions.forEach(definition => {\r\n            defns.push(definition);\r\n          });\r\n          this.httpInFlight--;\r\n          this.definitionsDownloaded = true;\r\n          this.userPrefsStore.update({ preferenceDefinitions: defns });\r\n        }\r\n      },\r\n      err => {\r\n        this.httpInFlight--;\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadFromLocal() {\r\n    const stored = localStorage.getItem(this.storageKey);\r\n    if (stored) {\r\n      const map: Array<UserPreferenceValue> = JSON.parse(stored);\r\n      if (map && map.length > 0) {\r\n        map.forEach(value => {\r\n          // this.userPrefsStore.upsert(value.name, value.value);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveToLocal(): void {\r\n    // Save to LocalStorage\r\n    const serial = JSON.stringify(this.userPrefsQuery.getValue().entities);\r\n\r\n    localStorage.setItem(this.storageKey, serial);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { WidgetModelBase } from '@ngscaffolding/models';\r\n\r\nexport interface WidgetState extends EntityState<WidgetModelBase> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'widget', idKey: 'name' })\r\nexport class WidgetStore extends EntityStore<WidgetState, WidgetModelBase> {\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('WidgetStore Constructor');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { WidgetModelBase } from '@ngscaffolding/models';\r\nimport { WidgetStore, WidgetState } from './widget.store';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetQuery extends QueryEntity<WidgetState, WidgetModelBase> {\r\n  constructor(protected store: WidgetStore) {\r\n    super(store);\r\n  }\r\n}\r\n","import { RolesService } from '../rolesService/roles.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { combineLatest } from 'rxjs';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { WidgetModelBase, AppSettings } from '@ngscaffolding/models';\r\nimport { AppSettingsQuery } from '../appSettings/appSettings.query';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport { WidgetStore } from './widget.store';\r\nimport { WidgetQuery } from './widget.query';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n  private className = 'core.WidgetService';\r\n\r\n  private apiHome: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private widgetStore: WidgetStore,\r\n    private widgetQuery: WidgetQuery,\r\n    private appSettingsQuery: AppSettingsQuery,\r\n    private authQuery: UserAuthenticationQuery,\r\n    private log: LoggingService,\r\n    public rolesService: RolesService\r\n  ) {\r\n    // First Time load away\r\n    this.widgetStore.setLoading(false);\r\n\r\n    // Wait for settings, then load from server\r\n    combineLatest(this.authQuery.authenticated$, this.appSettingsQuery.selectEntity(AppSettings.apiHome)).subscribe(([authenticated, apiHome]) => {\r\n      if (authenticated && apiHome) {\r\n        this.apiHome = apiHome.value;\r\n        this.widgetQuery\r\n          .selectLoading()\r\n          .pipe(take(1))\r\n          .subscribe(loading => {\r\n            if (!loading) {\r\n              this.downloadWidgetItems();\r\n            }\r\n          });\r\n      } else if (!authenticated) {\r\n        this.widgetStore.remove();\r\n      }\r\n    });\r\n  }\r\n  public downloadWidgetItems() {\r\n    // Mark loading status\r\n    this.widgetStore.setLoading(true);\r\n\r\n    this.http\r\n      .get<Array<WidgetModelBase>>(this.apiHome + '/api/v1/widgets')\r\n      .pipe(\r\n        finalize(() => {\r\n          this.widgetStore.setLoading(false);\r\n        })\r\n      )\r\n      .subscribe(widgetItems => {\r\n        this.widgetStore.add(widgetItems);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserAuthenticationQuery } from '../userAuthentication/userAuthentication.query';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { RolesService } from '../rolesService/roles.service';\r\nimport { IUserModel, AppSettings, ChangePasswordModel } from '@ngscaffolding/models';\r\nimport { Observable } from 'rxjs';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { UserServiceBase } from './user.service.base';\r\nimport { AppSettingsService } from '../appSettings/appSettings.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService implements UserServiceBase  {\r\n  private className = 'core.UserService';\r\n\r\n  private apiHome: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private appSettingsService: AppSettingsService,\r\n    private authQuery: UserAuthenticationQuery,\r\n    private log: LoggingService,\r\n    public rolesService: RolesService\r\n  ) {}\r\n\r\n  getUsers() {\r\n    return new Observable<IUserModel[]>(observer => {\r\n      this.http.get(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users`);\r\n    }).pipe(timeout(30000));\r\n  }\r\n  createUser(user: any) {\r\n    return new Observable<IUserModel>(observer => {\r\n      this.http.post(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users`, user);\r\n    }).pipe(timeout(30000));\r\n  }\r\n  deleteUser(userId: any) {\r\n    return new Observable<null>(observer => {\r\n      this.http.delete(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users/${userId}`);\r\n    }).pipe(timeout(30000));\r\n  }\r\n  changePassword(changePasswordModel: ChangePasswordModel) {\r\n    return new Observable<null>(observer => {\r\n      this.http.post(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users/changePassword`, changePasswordModel)\r\n        .pipe(timeout(30000))\r\n        .subscribe(response => {\r\n          observer.next(null);\r\n          observer.complete();\r\n        },\r\n        err => {\r\n          observer.error(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  setPassword(changePasswordModel: ChangePasswordModel) {\r\n    return new Observable<null>(observer => {\r\n      this.http.post(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users/setPassword`, changePasswordModel)\r\n        .pipe(timeout(30000))\r\n        .subscribe(response => {\r\n          observer.next(null);\r\n          observer.complete();\r\n        },\r\n        err => {\r\n          observer.error(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  resetPassword(userId: any) {\r\n    return new Observable<null>(observer => {\r\n      this.http.get(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users/resetPassword/${userId}`);\r\n    }).pipe(timeout(30000));\r\n  }\r\n\r\n\r\n  public getUser(userId: string): Observable<IUserModel> {\r\n    return new Observable<IUserModel>(observer => {\r\n      this.http.get(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users/${userId}`);\r\n    }).pipe(timeout(30000));\r\n  }\r\n\r\n  public saveUser(user: IUserModel): Observable<any> {\r\n    return new Observable<IUserModel>(observer => {\r\n      this.http.post(`${this.appSettingsService.getValue(AppSettings.apiAuth)}/api/v1/users/`, user);\r\n    }).pipe(timeout(30000));\r\n  }\r\n}\r\n","import { IUserModel, ChangePasswordModel } from '@ngscaffolding/models';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport abstract class  UserServiceBase {\r\n    abstract getUser(userId: string): Observable<IUserModel>;\r\n    abstract saveUser(user: IUserModel): Observable<IUserModel>;\r\n\r\n    abstract getUsers(): Observable<IUserModel[]>;\r\n    abstract createUser(user: IUserModel): Observable<IUserModel>;\r\n    abstract deleteUser(userId: any): Observable<null>;\r\n\r\n    abstract changePassword(changePasswordModel: ChangePasswordModel): Observable<null>;\r\n    abstract resetPassword(userId: any): Observable<null>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoggingService } from '../logging/logging.service';\r\n\r\nexport class SoftwareVersion {\r\n    module: string;\r\n    version: string;\r\n    isAppModule: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VersionsService {\r\n    private versions: SoftwareVersion[];\r\n\r\n    constructor(private logging: LoggingService) {\r\n        this.versions = [];\r\n    }\r\n    addVersion(module: string, version: string, isAppModule = false) {\r\n        this.logging.info(`Loading Module ${module} Version ${version} IsAppModule ${isAppModule}`);\r\n        this.versions.push({\r\n            module: module,\r\n            version: version,\r\n            isAppModule: isAppModule\r\n        });\r\n    }\r\n    getVersions(): SoftwareVersion[] {\r\n        return this.versions;\r\n    }\r\n\r\n    getVersion(moduleName: string): string {\r\n        const foundModule = this.versions.find(v => v.module === moduleName);\r\n        if (foundModule) {\r\n            return foundModule.version;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import {\r\n  HostListener,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { LoggingService } from '../services/logging/logging.service';\r\n\r\n@Directive({ selector: '[ngsFillHeight]' })\r\nexport class FillHeightDirective implements AfterViewInit {\r\n  @Input() footerElement = null;\r\n  @Input() fixedHeight = 0;\r\n  @Input() relativeToParentPercent = 0;\r\n\r\n  constructor(private el: ElementRef, private logger: LoggingService) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.calculateAndSetElementHeight();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.calculateAndSetElementHeight();\r\n  }\r\n\r\n  private calculateAndSetElementHeight() {\r\n    if (this.relativeToParentPercent > 0) {\r\n      const parentHeight = this.el.nativeElement.parentNode.parentNode\r\n        .parentNode.parentNode.parentNode.parentNode.offsetHeight;\r\n      if (parentHeight > 0) {\r\n        this.el.nativeElement.style.height = `${\r\n          parentHeight * (this.relativeToParentPercent / 100)\r\n        }px`;\r\n      }\r\n    } else if (this.fixedHeight > 0) {\r\n      this.el.nativeElement.style.height = `${this.fixedHeight}px`;\r\n    } else {\r\n      this.el.nativeElement.style.overflow = 'auto';\r\n      let windowHeight = window.innerHeight;\r\n      if (windowHeight === 0) {\r\n        this.logger.error('FillHeight: Window reported zero height');\r\n        windowHeight = 800;\r\n      }\r\n      const elementOffsetTop = this.getElementOffsetTop();\r\n      const elementMarginBottom = this.el.nativeElement.style.marginBottom;\r\n      const footerElementMargin = this.getfooterElementMargin();\r\n\r\n      this.el.nativeElement.style.height = `${\r\n        windowHeight - footerElementMargin - elementOffsetTop - 16\r\n      }px`;\r\n    }\r\n  }\r\n\r\n  private getElementOffsetTop() {\r\n    return this.el.nativeElement.getBoundingClientRect().top;\r\n  }\r\n\r\n  private getfooterElementMargin() {\r\n    if (!this.footerElement) {\r\n      return 0;\r\n    }\r\n    const footerStyle = window.getComputedStyle(this.footerElement);\r\n    return parseInt(footerStyle.height, 10);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ButtonColours } from '@ngscaffolding/models';\r\n\r\n@Pipe({ name: 'buttonColour' })\r\nexport class ButtonColourPipe implements PipeTransform {\r\n  transform(inputColor: string): string {\r\n    let returnColor: string;\r\n\r\n    switch (inputColor) {\r\n      case ButtonColours.primary: {\r\n        returnColor = 'p-button-primary';\r\n        break;\r\n      }\r\n      case ButtonColours.secondary: {\r\n        returnColor = 'p-button-secondary';\r\n        break;\r\n      }\r\n      case ButtonColours.success: {\r\n        returnColor = 'p-button-success';\r\n        break;\r\n      }\r\n      case ButtonColours.info: {\r\n        returnColor = 'p-button-info';\r\n        break;\r\n      }\r\n      case ButtonColours.warning: {\r\n        returnColor = 'p-button-warning';\r\n        break;\r\n      }\r\n      case ButtonColours.danger: {\r\n        returnColor = 'p-button-danger';\r\n        break;\r\n      }\r\n      case ButtonColours.blue: {\r\n        returnColor = 'blue-grey-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.cyan: {\r\n        returnColor = 'cyan-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.teal: {\r\n        returnColor = 'teal-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.orange: {\r\n        returnColor = 'orange-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.deeporange: {\r\n        returnColor = 'deep-orange-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.purple: {\r\n        returnColor = 'purple-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.indigo: {\r\n        returnColor = 'indigo-btn';\r\n        break;\r\n      }\r\n      case ButtonColours.pink: {\r\n        returnColor = 'pink-btn';\r\n        break;\r\n      }\r\n      default: {\r\n        returnColor = 'p-button-info';\r\n      }\r\n    }\r\n    return returnColor;\r\n  }\r\n}\r\n","import * as dateFormatimp from 'dateformat';\r\nconst dateFormat = dateFormatimp;\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { AppSettingsQuery } from '../services/appSettings/appSettings.query';\r\nimport { AppSettings } from '@ngscaffolding/models';\r\n\r\n@Pipe({ name: 'ngsDate' })\r\nexport class NgsDatePipe implements PipeTransform {\r\n  constructor(private appSettings: AppSettingsQuery) {}\r\n  transform(inputDate: Date): string {\r\n    if (inputDate) {\r\n      // If a string gets through, convert to date object\r\n      if (typeof inputDate === 'string' || inputDate instanceof String) {\r\n        inputDate = new Date(inputDate);\r\n      }\r\n\r\n      const userTimezoneOffset = inputDate.getTimezoneOffset() * 60000;\r\n      const zuluDate = new Date(inputDate.getTime() + userTimezoneOffset);\r\n\r\n      const format = this.appSettings.getEntity(AppSettings.dateFormat);\r\n      if (format && format.value) {\r\n        return dateFormat(zuluDate, format.value);\r\n      } else {\r\n        return dateFormat(zuluDate, 'default');\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import * as dateFormatimp from 'dateformat';\r\nconst dateFormat = dateFormatimp;\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { AppSettingsQuery } from '../services/appSettings/appSettings.query';\r\nimport { AppSettings } from '@ngscaffolding/models';\r\n\r\n@Pipe({ name: 'ngsDateTime' })\r\nexport class NgsDateTimePipe implements PipeTransform {\r\n  constructor(private appSettings: AppSettingsQuery) {}\r\n  transform(inputDate: Date): string {\r\n    if (inputDate) {\r\n      // If a string gets through, convert to date object\r\n      if (typeof inputDate === 'string' || inputDate instanceof String) {\r\n        inputDate = new Date(inputDate);\r\n      }\r\n\r\n      const userTimezoneOffset = inputDate.getTimezoneOffset() * 60000;\r\n      const zuluDate = new Date(inputDate.getTime() + userTimezoneOffset);\r\n\r\n      const format = this.appSettings.getEntity(AppSettings.dateTimeFormat);\r\n      if (format && format.value) {\r\n        return dateFormat(zuluDate, format.value);\r\n      } else {\r\n        return dateFormat(zuluDate, 'default');\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncateText'\r\n})\r\nexport class TruncateTextPipe implements PipeTransform {\r\n\r\n  transform(value: string, limit: number = 40, trail: String = '…'): string {\r\n    let result = value || '';\r\n\r\n    if (value) {\r\n      const words = value.split(/\\s+/);\r\n      if (words.length > Math.abs(limit)) {\r\n        if (limit < 0) {\r\n          limit *= -1;\r\n          result =\r\n            trail + words.slice(words.length - limit, words.length).join(' ');\r\n        } else {\r\n          result = words.slice(0, limit).join(' ') + trail;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import {\r\n  CanActivate,\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { RolesService } from '../services/rolesService/roles.service';\r\nimport { UserAuthenticationBase } from '../services/userAuthentication/UserAuthenticationBase';\r\n\r\n@Injectable()\r\nexport class AuthoriseRoleGuard implements CanActivate {\r\n  constructor(\r\n    private authService: UserAuthenticationBase,\r\n    private router: Router,\r\n    private rolesService: RolesService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n\r\n    // No authority, bye bye.\r\n    this.authService.forceLogon(state.url);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngs-dialog-window',\r\n    templateUrl: 'dialogWindow.component.html',\r\n    styleUrls: ['dialogWindow.component.scss']\r\n})\r\nexport class DialogWindowComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Output() closed = new EventEmitter<any>();\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {}\r\n    ngOnDestroy(): void {}\r\n    ngOnInit(): void {}\r\n\r\n    cancel(event: any) {\r\n        this.closed.emit(null);\r\n    }\r\n\r\n    save(event: any) {\r\n\r\n    }\r\n}\r\n","<h1>Dialog Window Base Class</h1>\r\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\r\n/* tslint:disable */\r\nexport const VERSION = {\r\n    \"dirty\": true,\r\n    \"raw\": \"608f2a0-dirty\",\r\n    \"hash\": \"608f2a0\",\r\n    \"distance\": null,\r\n    \"tag\": null,\r\n    \"semver\": null,\r\n    \"suffix\": \"608f2a0-dirty\",\r\n    \"semverString\": null,\r\n    \"version\": \"1.1.20\"\r\n};\r\n/* tslint:enable */\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n// Pipes\nimport { ButtonColourPipe } from './pipes/buttonColour.pipe';\nimport { NgsDateTimePipe } from './pipes/ngsDateTime.pipe';\nimport { NgsDatePipe } from './pipes/ngsDate.pipe';\nimport { TruncateTextPipe } from './pipes/truncateText.pipe';\n\n// Directives\nimport { FillHeightDirective } from './directives/fill-height.directive';\n\n// Services\nimport { VersionsService } from './services/versions/versions.service';\n\n// Components\nimport { DialogWindowComponent } from './components/dialogWindow/dialogWindow.component';\n\nimport { VERSION } from './version';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, HttpClientModule],\n    declarations: [\n        FillHeightDirective,\n        ButtonColourPipe,\n        NgsDatePipe,\n        NgsDateTimePipe,\n        TruncateTextPipe,\n        DialogWindowComponent\n    ],\n    exports: [\n        ButtonColourPipe,\n        NgsDatePipe,\n        NgsDateTimePipe,\n        TruncateTextPipe,\n        FillHeightDirective,\n        DialogWindowComponent\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders<CoreModule> {\n        return {\n            ngModule: CoreModule\n        };\n    }\n    constructor(versions: VersionsService) {\n        versions.addVersion('@ngscaffolding/core', VERSION.version);\n    }\n}\n","/*\n * Public API Surface of core\n */\n\n\nexport { AppSettingsQuery } from './lib/services/appSettings/appSettings.query';\nexport { AppSettingsService } from './lib/services/appSettings/appSettings.service';\nexport { AppSettingsState, AppSettingsStore } from './lib/services/appSettings/appSettings.store';\n\nexport { AppAuditService } from './lib/services/appAudit/appAudit.service';\nexport { AuditLogService } from './lib/services/auditLog/auditLog.service';\n\nexport { BroadcastService, BroadcastTypes } from './lib/services/broadcast/broadcast.service';\nexport { ComponentLoaderService } from './lib/services/componentLoader.service';\nexport { CoreErrorHandlerService } from './lib/services/coreErrorHandler/coreErrorHandler.service';\nexport { DataSourceQuery } from './lib/services/dataSource/dataSource.query';\nexport { DataSourceService } from './lib/services/dataSource/dataSource.service';\nexport { DataSourceState, DataSourceStore } from './lib/services/dataSource/dataSource.store';\n\nexport { LoggingService } from './lib/services/logging/logging.service';\nexport { MenuQuery } from './lib/services/menu/menu.query';\nexport { MenuService } from './lib/services/menu/menu.service';\nexport { MenuState, MenuStore } from './lib/services/menu/menu.store';\n\nexport { NotificationService } from './lib/services/notification/notification.service';\nexport { ReferenceValuesQuery } from './lib/services/referenceValues/referenceValues.query';\nexport { ReferenceValuesState, ReferenceValuesStore } from './lib/services/referenceValues/referenceValues.store';\nexport { ReferenceValuesService } from './lib/services/referenceValues/refrenceValues.service';\n\nexport { RolesQuery } from './lib/services/rolesService/roles.query';\nexport { RolesService } from './lib/services/rolesService/roles.service';\nexport { RoleState, RolesStore } from './lib/services/rolesService/roles.store';\n\nexport { SpinnerService } from './lib/services/spinnerService/spinner.service';\n\nexport { UserAuthenticationBase } from './lib/services/userAuthentication/UserAuthenticationBase';\nexport { UserAuthenticationQuery } from './lib/services/userAuthentication/userAuthentication.query';\nexport { UserAuthenticationService } from './lib/services/userAuthentication/userAuthentication.service';\nexport { OAuthService } from './lib/services/userAuthentication/userAuthentication.oauth.service';\nexport { AuthenticationState, AuthenticationStore } from './lib/services/userAuthentication/userAuthentication.store';\n\nexport { UserPreferencesQuery } from './lib/services/userPreferences/userPreferences.query';\nexport { UserPreferencesService } from './lib/services/userPreferences/userPreferences.service';\nexport { UserPreferencesState, UserPreferencesStore } from './lib/services/userPreferences/userPreferences.store';\n\nexport { WidgetQuery } from './lib/services/widgetsService/widget.query';\nexport { WidgetService } from './lib/services/widgetsService/widget.service';\nexport { WidgetState, WidgetStore } from './lib/services/widgetsService/widget.store';\n\nexport { UserService } from './lib/services/userService/user.service';\nexport { UserServiceBase } from './lib/services/userService/user.service.base';\nexport { SoftwareVersion, VersionsService } from './lib/services/versions/versions.service';\n\nexport { FillHeightDirective } from './lib/directives/fill-height.directive';\n\n// Pipes\nexport { ButtonColourPipe } from './lib/pipes/buttonColour.pipe';\nexport { NgsDatePipe } from './lib/pipes/ngsDate.pipe';\nexport { NgsDateTimePipe } from './lib/pipes/ngsDateTime.pipe';\nexport { TruncateTextPipe } from './lib/pipes/truncateText.pipe';\n\n// Guards\nexport { AuthoriseRoleGuard } from './lib/routeGuards/authoriseRoleGuard';\n\nexport { DialogWindowComponent } from './lib/components/dialogWindow/dialogWindow.component';\nexport { CoreModule } from './lib/core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AppSettingsStore","EntityStore","StoreConfig","Injectable","QueryEntity","Subject","filter","map","AuthenticationStore","createBasicUser","Store","toBoolean","Query","AppSettings","timeout","retry","ZuluDateHelper","uuid","finalize","ErrorModel","ErrorHandler","DataSourceStore","of","Observable","MenuStore","MenuQuery","QueryConfig","Order","RolesStore","combineLatest","take","BehaviorSubject","ReferenceValuesStore","JwtHelperService","BasicUser","HttpParams","HttpHeaders","resetStores","UserManager","UserPreferencesStore","UserPreferenceValue","WidgetStore","Directive","Input","HostListener","Pipe","dateFormatimp","dateFormat","EventEmitter","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","Component","Output","CommonModule","FormsModule","HttpClientModule","NgModule"],"mappings":"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"}