{"version":3,"sources":["../projects/ngscaffolding/inputbuilder/src/lib/components/editableTitle/editableTitle.component.html","../projects/ngscaffolding/inputbuilder/src/lib/components/editableTitle/editableTitle.component.ts","../../../../node_modules/tslib/tslib.es6.js","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilder/inputBuilder.component.html","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilder/inputBuilder.component.ts","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilderPopup/inputBuilderPopup.component.html","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilderPopup/inputBuilderPopup.component.ts","../../../projects/ngscaffolding/inputbuilder/src/lib/inputbuilder.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0","ɵɵrestoreView","_r4_1","ɵɵnextContext","mouseLeave","mouseOver","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","$event","_r9_1","editTitle","textChanged","i0.ɵɵproperty","EditableTitleComponent","this","titleChanged","EventEmitter","displayIcon","isEditing","prototype","ngOnChanges","changes","title","currentValue","applyObject","configObject","config","newTitle","key","hasOwnProperty","replace","readOnly","mouseClicked","_this","setTimeout","inputTitleElement","nativeElement","focus","select","emit","selectors","viewQuery","rf","ctx","i0.ɵɵtemplate","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","input_r3","name","min","max","step","mask","ctx_r10","form","controls","ctx_r11","rows","label","ctx_r13","i0.ɵɵstyleMap","ctx_r14","dataSourceLookup","selectFilter","ctx_r15","tabindex","ctx_r16","getLabel","ctx_r18","ɵɵpipeBind1","ctx_r20","appSettings","getBoolean","getString","ctx_r21","ctx_r22","ctx_r23","ctx_r24","editorOptions","i0.ɵɵpropertyInterpolate","accept","ctx_r25","allowedFileTypes","maxFileSize","i0.ɵɵtextInterpolate1","i0.ɵɵclassProp","ctx_r1","getContainerClass","ctx_r0","inputBuilderDefinition","inputLocation","InputBuilderComponent","elementRef","ref","appSettingsQuery","authQuery","refValuesService","componentLoader","authService","modelUpdated","valueUpdated","fileAttached","okClicked","cancelClicked","formBuilt","controlStyle","containerClass","formSubmitted","JsonEditorOptions","modes","input","loadComponent","angularComponent","then","element","querySelector","appendChild","onSubmit","valid","okButtonCallBack","clonedInputModel","fileContent","onCancel","cancelButtonCallBack","onCustom","customButtonCallBack","inputModel","previousValue","buildForm","decorateInputModel","currentUser","getValue","userDetails","now","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","userId","ngOnInit","hasEntity","AppSettings","maximumFileSize","getEntity","inputDetail","help","attachFiles","event","loadFileContent","files","file","fileReader","FileReader","onload","result","toString","readAsText","_b","_c","fieldChanged","searchAutoComplete","loadDataSource","query","subscribe","data","referenceValueItems","detectChanges","getDefaultValue","ZuluDateHelper","getGMTDate","setDate","assign","orientation","columnCount","colSize","formGroup","localModel","asyncGets","push","of","ReferenceValue","inputDetails","filteredInputDetails","filterItemsByRole","inputValue","ObjectPathHelper","get","this_1","parseValue","set","formControl","FormControl","mapValidators","readonly","disable","type","InputTypes","search","valueChanges","pipe","debounceTime","distinctUntilChanged","tap","text","manipulateValuesToObjects","autocomplete","referenceValueName","seed","referenceValueSeedDependency","_d","_e","_f","checkForDependencies","formRendered$","forkJoin","results","console","log","FormGroup","formValidators","customValidators","forEach","validator","foundInputValue_1","multiselect","foundValues_1","filter","ds","includes","_","setValue","onlySelf","emitEvent","find","checkbox","switch","number","rating","spinner","Number","date","datetime","time","valueAsDate","forceUTC","returnedValue","endsWith","fileattach","setGMTDate","Array","isArray","map","refVal","updatedModel","updatedValue","referenceValueChildLevel","childDepth","getReferenceValue","validateRequired","Validators","required","validateRequiredTrue","requiredTrue","validateEmail","email","validatePattern","pattern","validateMinLength","minLength","validateMinLengthMessage","validateMaxLength","maxLength","validateMaxLengthMessage","_r3_1","onOkClicked","onCancelClicked","onModelUpdated","onValueUpdated","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","i1","AppSettingsService","AppSettingsQuery","UserAuthenticationQuery","ReferenceValuesService","ComponentLoaderService","UserAuthenticationBase","InputBuilderPopupComponent","changeDetector","styleValues","overflow","mouseSubscription","fromEvent","document","body","e","attachMouseClick","screenWidth","window","innerWidth","mouseY","mouseX","setWidth","setLeft","setTop","isShown","newStyle","position","top","left","showPopup","markForCheck","ngOnDestroy","unsubscribe","notifyChanged","model","inputs","outputs","decls","vars","consts","template","i0.ɵɵstyleProp","InputBuilderModule","forRoot","ngModule","imports","CommonModule","CoreModule","AutoCompleteModule","FormsModule","ReactiveFormsModule","DialogModule","SharedModule","EditorModule","ListboxModule","SelectButtonModule","ColorPickerModule","SliderModule","ChipsModule","InputSwitchModule","InputTextModule","InputMaskModule","SpinnerModule","CalendarModule","TriStateCheckboxModule","InputTextareaModule","CheckboxModule","RadioButtonModule","DropdownModule","PasswordModule","RatingModule","KeyFilterModule","MultiSelectModule","ToggleButtonModule","TooltipModule","NgJsonEditorModule","FileUploadModule","TranslateModule","forChild","declarations","i22","exports"],"mappings":"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","sourcesContent":["<span *ngIf=\"!isEditing\" class=\"title-display\" (click)=\"mouseClicked()\" (mouseleave)=\"mouseLeave()\" (mouseenter)=\"mouseOver()\">{{title}}</span>\r\n\r\n<button *ngIf=\"displayIcon\" pButton class=\"p-button-rounded p-button-info p-button-text p-mr-2 p-mb-2\" type=\"button\" icon=\"pi pi-pencil\"></button>\r\n\r\n<input #inputTitle class=\"large-edit\" *ngIf=\"isEditing\" type=\"text\" (blur)=\"isEditing=false\" [(ngModel)]=\"editTitle\" (change)=\"textChanged()\" pInputText>\r\n","import { Component, Inject, forwardRef, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngs-editable-title',\r\n  templateUrl: 'editableTitle.component.html',\r\n  styleUrls: ['editableTitle.component.scss']\r\n})\r\nexport class EditableTitleComponent implements OnChanges {\r\n  @ViewChild('inputTitle', {static: false}) inputTitleElement: ElementRef;\r\n  @Input() title: string;\r\n  @Input() configObject: any;\r\n  @Input() readOnly: boolean;\r\n\r\n  @Output() titleChanged = new EventEmitter<string>();\r\n\r\n  editTitle: string;\r\n  displayIcon = false;\r\n  isEditing = false;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.title) {\r\n      this.editTitle = changes.title.currentValue;\r\n      this.applyObject(changes.configObject);\r\n    }\r\n    if (changes.configObject) {\r\n      this.applyObject(changes.configObject);\r\n    }\r\n  }\r\n\r\n  // update Title with string replacement @@key## style\r\n  private applyObject(config: any) {\r\n    let newTitle = this.title;\r\n\r\n    if (config) {\r\n      for (const key in config) {\r\n        if (config.hasOwnProperty(key)) {\r\n          newTitle = newTitle.replace(`@@${key}##`, config[key]);\r\n        }\r\n      }\r\n      this.editTitle = newTitle;\r\n    }\r\n  }\r\n\r\n  mouseOver() {\r\n    if (!this.readOnly) {\r\n      this.displayIcon = true;\r\n    }\r\n  }\r\n  mouseLeave() {\r\n    this.displayIcon = false;\r\n  }\r\n  mouseClicked() {\r\n    if (!this.readOnly) {\r\n      this.isEditing = true;\r\n      this.displayIcon = false;\r\n    }\r\n    setTimeout(() => {\r\n      // this will make the execution after the above boolean has changed\r\n      this.inputTitleElement.nativeElement.focus();\r\n      this.inputTitleElement.nativeElement.select();\r\n    }, 0);\r\n  }\r\n\r\n  textChanged() {\r\n    this.titleChanged.emit(this.editTitle);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<form\r\n    novalidate\r\n    *ngIf=\"(formRendered$ | async) && formBuilt && inputBuilderDefinition && filteredInputDetails\"\r\n    [class.noPadding]=\"inputBuilderDefinition.inputLocation === 'inline'\"\r\n    [class.form-group]=\"inputBuilderDefinition.inputLocation !== 'inline'\"\r\n    class=\"p-grid ui-fluid\"\r\n    (ngSubmit)=\"onSubmit(form)\"\r\n    [formGroup]=\"form\"\r\n>\r\n    <div\r\n        [className]=\"controlStyle\"\r\n        [class.noPadding]=\"inputBuilderDefinition.inputLocation === 'inline'\"\r\n        *ngFor=\"let input of filteredInputDetails\"\r\n    >\r\n        <div [ngSwitch]=\"input.type\" [className]=\"getContainerClass(input)\">\r\n            <!-- null === Blank -->\r\n            <span *ngSwitchCase=\"'null'\" class=\"p-float-label\"> </span>\r\n\r\n            <!-- textbox -->\r\n            <span *ngSwitchCase=\"'textbox'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    *ngIf=\"!input.mask\"\r\n                    type=\"text\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pInputText\r\n                />\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- password -->\r\n            <span *ngSwitchCase=\"'password'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    *ngIf=\"!input.mask\"\r\n                    type=\"password\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pPassword\r\n                />\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- email -->\r\n            <span *ngSwitchCase=\"'email'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    *ngIf=\"!input.mask\"\r\n                    type=\"email\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pInputText\r\n                />\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- keyfilter/number -->\r\n            <span *ngSwitchCase=\"'number'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    type=\"text\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pKeyFilter=\"num\"\r\n                    pInputText\r\n                />\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- slider -->\r\n            <span *ngSwitchCase=\"'slider'\" class=\"p-float-label\">\r\n                <p-slider\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    [min]=\"input.min\"\r\n                    [max]=\"input.max\"\r\n                    [step]=\"input.step\"\r\n                ></p-slider>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Mask -->\r\n            <span *ngSwitchCase=\"'mask'\">\r\n                <p-inputMask\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [mask]=\"input.mask\"\r\n                    [id]=\"input.name\"\r\n                    [formControl]=\"form.controls[input.name]\"\r\n                ></p-inputMask>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Spinner -->\r\n            <span *ngSwitchCase=\"'spinner'\">\r\n                <p-spinner\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [id]=\"input.name\"\r\n                    [min]=\"input.min\"\r\n                    [max]=\"input.max\"\r\n                    [formControl]=\"form.controls[input.name]\"\r\n                ></p-spinner>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- TextArea -->\r\n            <span *ngSwitchCase=\"'textarea'\" class=\"p-float-label\">\r\n                <textarea\r\n                    class=\"textInput\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [rows]=\"input.rows\"\r\n                    [placeholder]=\"input.label\"\r\n                    pInputTextarea\r\n                    [formControlName]=\"input.name\"\r\n                ></textarea>\r\n            </span>\r\n\r\n            <!-- Checkbox -->\r\n            <span *ngSwitchCase=\"'checkbox'\">\r\n                <p-checkbox\r\n                    [tabindex]=\"input.tabindex\"\r\n                    binary=\"true\"\r\n                    [label]=\"input.label\"\r\n                    [id]=\"input.name\"\r\n                    [formControl]=\"form.controls[input.name]\"\r\n                >\r\n                </p-checkbox>\r\n            </span>\r\n\r\n            <!-- Simple DropDown -->\r\n            <span class=\"p-float-label\" *ngSwitchCase=\"'dropdown'\">\r\n                <p-dropdown\r\n                    [style]=\"{ width: '100%' }\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    appendTo=\"body\"\r\n                    class=\"dropdownInput\"\r\n                    [id]=\"input.name\"\r\n                    showClear=\"true\"\r\n                    [options]=\"dataSourceLookup[input.name]\"\r\n                    [filter]=\"input.selectFilter\"\r\n                    dataKey=\"value\"\r\n                    optionLabel=\"display\"\r\n                    [formControlName]=\"input.name\"\r\n                    #dropDown\r\n                ></p-dropdown>\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- DropDown Returns Object -->\r\n            <span *ngSwitchCase=\"'dropdownobject'\" class=\"p-float-label\" >\r\n                <p-dropdown\r\n                    appendTo=\"body\"\r\n                    [style]=\"{ width: '100%' }\"\r\n                    class=\"dropdownInput\"\r\n                    [id]=\"input.name\"\r\n                    [options]=\"dataSourceLookup[input.name]\"\r\n                    [filter]=\"input.selectFilter\"\r\n                    showClear=\"true\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    optionLabel=\"display\"\r\n                    [formControlName]=\"input.name\"\r\n                    #dropDown\r\n                ></p-dropdown>\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- AutoComplete -->\r\n            <p-autoComplete\r\n                *ngSwitchCase=\"'autocomplete'\"\r\n                [style]=\"{ width: '100%' }\"\r\n                appendTo=\"body\"\r\n                dataKey=\"value\"\r\n                [tabindex]=\"input.tabindex\"\r\n                field=\"display\"\r\n                [dropdown]=\"true\"\r\n                [formControlName]=\"input.name\"\r\n                [suggestions]=\"dataSourceLookup[input.name]\"\r\n                (completeMethod)=\"searchAutoComplete($event, input)\"\r\n                [placeholder]=\"getLabel(input)\"\r\n            ></p-autoComplete>\r\n\r\n            <!-- Chips -->\r\n            <span *ngSwitchCase=\"'chips'\" class=\"p-float-label\">\r\n                <p-chips [tabindex]=\"input.tabindex\" [id]=\"input.name\" [placeholder]=\"input.label\" [formControlName]=\"input.name\"></p-chips>\r\n            </span>\r\n\r\n            <!-- multiselect -->\r\n            <span *ngSwitchCase=\"'multiselect'\" class=\"p-float-label\">\r\n                <!-- <label class=\"small-label\" [for]=\"input.name\">{{getLabel(input)}}</label> -->\r\n                <p-multiSelect\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [id]=\"input.name\"\r\n                    class=\"multi-select\"\r\n                    [filterPlaceHolder]=\"input.name\"\r\n                    [formControlName]=\"input.name\"\r\n                    [filter]=\"false\"\r\n                    appendTo=\"body\"\r\n                    optionLabel=\"display\"\r\n                    dataKey=\"value\"\r\n                    [options]=\"dataSourceLookup[input.name]\"\r\n                ></p-multiSelect>\r\n            </span>\r\n\r\n            <!-- InputSwitch -->\r\n            <span *ngSwitchCase=\"'switch'\">\r\n                <p-inputSwitch [tabindex]=\"input.tabindex\" [id]=\"input.name\" [formControlName]=\"input.name\"> </p-inputSwitch>\r\n                <label class=\"switch-label\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- DateTime -->\r\n            <span *ngSwitchCase=\"'datetime'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    [tabindex]=\"input.tabindex\"\r\n                    appendTo=\"body\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [dateFormat]=\"appSettings.getString('inputDateFormat') | async\"\r\n                    showTime=\"true\"\r\n                    hourFormat=\"24\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- DateTime UTC -->\r\n            <span *ngSwitchCase=\"'datetimeUTC'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    [tabindex]=\"input.tabindex\"\r\n                    appendTo=\"body\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [dateFormat]=\"appSettings.getString('inputDateFormat') | async\"\r\n                    showTime=\"true\"\r\n                    hourFormat=\"24\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Date -->\r\n            <span *ngSwitchCase=\"'date'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    appendTo=\"body\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [dateFormat]=\"appSettings.getString('inputDateFormat') | async\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Time -->\r\n            <span *ngSwitchCase=\"'time'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    appendTo=\"body\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    timeOnly=\"true\"\r\n                    showTime=\"true\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    hourFormat=\"24\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- JSon Edit -->\r\n            <span *ngSwitchCase=\"'json'\" class=\"p-float-label\">\r\n                <json-editor [tabindex]=\"input.tabindex\" [options]=\"editorOptions\" [data]=\"input.value\"></json-editor>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- File Attachment -->\r\n            <span *ngSwitchCase=\"'fileattach'\" class=\"p-float-label\">\r\n                <p-fileUpload\r\n                    [tabindex]=\"input.tabindex\"\r\n                    customUpload=\"true\"\r\n                    [accept]=\"input.accept || this.allowedFileTypes\"\r\n                    [maxFileSize]=\"input.maxFileSize || this.maxFileSize\"\r\n                    chooseLabel=\"{{ 'Choose File' | translate }}\"\r\n                    auto=\"true\"\r\n                    (uploadHandler)=\"attachFiles($event, input)\"\r\n                ></p-fileUpload>\r\n            </span>\r\n\r\n            <!-- Search Text -->\r\n            <div *ngSwitchCase=\"'search'\" class=\"ui-inputgroup\">\r\n                <span class=\"p-float-label\">\r\n                    <input style=\"width: 100%;\" type=\"text\" [tabindex]=\"input.tabindex\" [formControlName]=\"input.name\" [id]=\"input.name\" pInputText />\r\n                    <label>{{ getLabel(input) }}</label>\r\n                </span>\r\n                <button pButton type=\"button\" icon=\"ui-icon-search\"></button>\r\n            </div>\r\n\r\n            <!-- Dynamic -->\r\n            <span *ngSwitchCase=\"'dynamic'\" class=\"p-float-label\">\r\n                <div class=\"textInput\" [id]=\"input.name\">{{ loadComponent(input) }}</div>\r\n            </span>\r\n\r\n            <!-- DEFUALT textbox -->\r\n            <span *ngSwitchDefault class=\"p-float-label\">\r\n                <input type=\"text\" [tabindex]=\"input.tabindex\" [formControlName]=\"input.name\" [id]=\"input.name\" pInputText />\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n        </div>\r\n\r\n        <!-- Help text here -->\r\n        <span *ngIf=\"input.help\" class=\"p-col-1\">\r\n            <i class=\"fa ui-icon-info helpIcon\" pTooltip=\"{{ input.help }}\" tooltipPosition=\"bottom\"></i>\r\n        </span>\r\n\r\n        <div\r\n            class=\"ui-message ui-messages-error ui-corner-all\"\r\n            *ngIf=\"form.get(input.name)?.invalid && (form.get(input.name)?.dirty || form.get(input.name)?.touched || formSubmitted)\"\r\n        >\r\n            <div *ngIf=\"form.get(input.name).errors.required\">\r\n                {{ input.validateRequired }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.requiredTrue\">\r\n                {{ input.validateRequiredTrue }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.email\">\r\n                {{ input.validateEmail }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.pattern\">\r\n                {{ input.validatePatternMessage }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.minlength\">\r\n                {{ input.validateMinLengthMessage }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.maxlength\">\r\n                {{ input.validateMaxLengthMessage }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- [className]=\"controlStyle\" -->\r\n    <div\r\n        class=\"button-line\"\r\n        class=\"p-col-12\"\r\n        *ngIf=\"inputBuilderDefinition.customButtonText || inputBuilderDefinition.cancelButtonText || inputBuilderDefinition.okButtonText\"\r\n    >\r\n        <div class=\"button-container p-col-3\" *ngIf=\"inputBuilderDefinition.customButtonText\">\r\n            <button\r\n                pButton\r\n                type=\"button\"\r\n                (click)=\"onCustom()\"\r\n                class=\"p-button-info\"\r\n                icon=\"{{ inputBuilderDefinition.customButtonIcon }}\"\r\n                iconPos=\"left\"\r\n                label=\"{{ inputBuilderDefinition.customButtonText }}\"\r\n            ></button>\r\n        </div>\r\n        <div class=\"button-container p-col-3\" *ngIf=\"inputBuilderDefinition.cancelButtonText\">\r\n            <button\r\n                pButton\r\n                type=\"button\"\r\n                (click)=\"onCancel()\"\r\n                class=\"p-button-warning\"\r\n                icon=\"{{ inputBuilderDefinition.cancelButtonIcon }}\"\r\n                iconPos=\"left\"\r\n                label=\"{{ inputBuilderDefinition.cancelButtonText }}\"\r\n            ></button>\r\n        </div>\r\n        <div class=\"button-container p-col-3\" *ngIf=\"inputBuilderDefinition.okButtonText\">\r\n            <button\r\n                pButton\r\n                type=\"submit\"\r\n                class=\"p-button-success\"\r\n                icon=\"{{ inputBuilderDefinition.okButtonIcon }}\"\r\n                iconPos=\"left\"\r\n                label=\"{{ inputBuilderDefinition.okButtonText }}\"\r\n            ></button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnInit,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    ViewChildren,\r\n    QueryList,\r\n    ElementRef\r\n} from '@angular/core';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\r\n\r\nimport { Dropdown } from 'primeng/dropdown';\r\nimport { tap, map, switchMap, filter, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport {\r\n    AppSettingsService,\r\n    AppSettingsQuery,\r\n    UserAuthenticationQuery,\r\n    ReferenceValuesService,\r\n    ComponentLoaderService,\r\n    UserAuthenticationBase\r\n} from '@ngscaffolding/core';\r\nimport {\r\n    InputBuilderDefinition,\r\n    InputDetail,\r\n    InputDynamic,\r\n    AppSettings,\r\n    InputDetailReferenceValues,\r\n    ZuluDateHelper,\r\n    OrientationValues,\r\n    InputLocations,\r\n    ReferenceValue,\r\n    InputTypes,\r\n    InputDetailDateTime,\r\n    ReferenceValueItem,\r\n    ObjectPathHelper\r\n} from '@ngscaffolding/models';\r\n\r\n@Component({\r\n    selector: 'ngs-input-builder',\r\n    templateUrl: 'inputBuilder.component.html',\r\n    styleUrls: ['inputBuilder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InputBuilderComponent implements OnInit, OnChanges {\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private ref: ChangeDetectorRef,\r\n        public appSettings: AppSettingsService,\r\n        public appSettingsQuery: AppSettingsQuery,\r\n        private authQuery: UserAuthenticationQuery,\r\n        public refValuesService: ReferenceValuesService,\r\n        private componentLoader: ComponentLoaderService,\r\n        private authService: UserAuthenticationBase\r\n    ) {\r\n        this.editorOptions = new JsonEditorOptions();\r\n        this.editorOptions.modes = ['code', 'text', 'tree', 'view']; // set all allowed modes\r\n    }\r\n\r\n    @Input() inputBuilderDefinition: InputBuilderDefinition;\r\n    @Input() inputModel: any;\r\n\r\n    @Output() modelUpdated = new EventEmitter<object>();\r\n    @Output() valueUpdated = new EventEmitter<[string, object]>();\r\n    @Output() fileAttached = new EventEmitter<string>();\r\n\r\n    @Output() okClicked = new EventEmitter<[object, string]>();\r\n    @Output() cancelClicked = new EventEmitter<any>();\r\n\r\n    @ViewChildren('dropDown') dropDownChildren: QueryList<Dropdown>;\r\n\r\n    private clonedInputModel: any;\r\n    private fileContent: string;\r\n\r\n    filteredInputDetails: InputDetail[];\r\n\r\n    formBuilt = false;\r\n    form: FormGroup;\r\n    controlStyle = 'p-col-12';\r\n    containerClass = 'p-col-12'; // This changes to allow the help Icon\r\n    editorOptions: JsonEditorOptions;\r\n    formSubmitted = false;\r\n    dataSourceLookup = {};\r\n    maxFileSize: number;\r\n    allowedFileTypes: string;\r\n\r\n    public formRendered$: Observable<any>;\r\n\r\n    public getLabel(input: InputDetail) {\r\n        if (input.label) {\r\n            return input.label;\r\n        } else if (input.name) {\r\n            return input.name.replace(/([A-Z]+)/g, ' $1').replace(/([A-Z][a-z])/g, ' $1');\r\n        }\r\n    }\r\n\r\n    loadComponent(input: InputDynamic) {\r\n        this.componentLoader.loadComponent(input.angularComponent).then(element => {\r\n            this.elementRef.nativeElement.querySelector(`#${input.name}`).appendChild(element);\r\n        });\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n        this.formSubmitted = true;\r\n        if (this.form.valid) {\r\n            if (this.inputBuilderDefinition.okButtonCallBack) {\r\n                this.inputBuilderDefinition.okButtonCallBack(this.clonedInputModel);\r\n            }\r\n\r\n            this.okClicked.emit([this.clonedInputModel, this.fileContent]);\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        if (this.inputBuilderDefinition.cancelButtonCallBack) {\r\n            this.inputBuilderDefinition.cancelButtonCallBack(this.clonedInputModel);\r\n        }\r\n\r\n        this.cancelClicked.emit();\r\n    }\r\n\r\n    onCustom() {\r\n        if (this.inputBuilderDefinition.customButtonCallBack) {\r\n            this.inputBuilderDefinition.customButtonCallBack(this.clonedInputModel);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.inputModel && changes.inputModel.currentValue !== changes.inputModel.previousValue) {\r\n            this.formBuilt = false;\r\n        }\r\n\r\n        if (\r\n            changes.inputBuilderDefinition &&\r\n            changes.inputBuilderDefinition.currentValue !== changes.inputBuilderDefinition.previousValue\r\n        ) {\r\n            this.formBuilt = false;\r\n        }\r\n\r\n        this.buildForm();\r\n    }\r\n\r\n    private decorateInputModel() {\r\n        // Add in standard Values\r\n        const currentUser = this.authQuery.getValue().userDetails;\r\n        const now = new Date();\r\n        this.clonedInputModel['now'] = now;\r\n        this.clonedInputModel['zuluDate'] = new Date(\r\n            Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds())\r\n        );\r\n\r\n        this.clonedInputModel['userId'] = currentUser.userId;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.maxFileSize = this.appSettingsQuery.hasEntity(AppSettings.maximumFileSize)\r\n            ? this.appSettingsQuery.getEntity(AppSettings.maximumFileSize).value\r\n            : 999999;\r\n\r\n        this.allowedFileTypes = this.appSettingsQuery.hasEntity(AppSettings.allowedFileTypes)\r\n            ? this.appSettingsQuery.getEntity(AppSettings.allowedFileTypes).value\r\n            : '';\r\n    }\r\n\r\n    getContainerClass(inputDetail: InputDetail) {\r\n        return inputDetail.help ? 'p-col-11' : 'p-col-12';\r\n    }\r\n\r\n    attachFiles(event: any, input: InputDetail) {\r\n        if (this.inputBuilderDefinition.loadFileContent) {\r\n            if (event.files && event.files.length > 0) {\r\n                for (const file of event.files) {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.onload = () => {\r\n                        // this 'text' is the content of the file\r\n                        this.fileContent = fileReader.result.toString();\r\n                        this.fileAttached.emit(this.fileContent);\r\n                    };\r\n                    fileReader.readAsText(file);\r\n                }\r\n            }\r\n        } else {\r\n            this.fieldChanged(input, event.files[0]);\r\n        }\r\n    }\r\n\r\n    searchAutoComplete($event, input: InputDetailReferenceValues) {\r\n        this.loadDataSource(input, $event.query).subscribe(data => {\r\n            this.dataSourceLookup[input.name] = data.referenceValueItems;\r\n            setTimeout(() => {\r\n                this.ref.detectChanges();\r\n            }, 50);\r\n        });\r\n    }\r\n\r\n    private getDefaultValue(value: any) {\r\n        switch (value) {\r\n            case 'today':\r\n            case 'now':\r\n                return ZuluDateHelper.getGMTDate(new Date());\r\n                break;\r\n            case 'yesterday': {\r\n                const now = new Date();\r\n                return ZuluDateHelper.getGMTDate(new Date(now.setDate(now.getDate() - 1)));\r\n                break;\r\n            }\r\n            case 'tomorrow': {\r\n                const now = new Date();\r\n                return ZuluDateHelper.getGMTDate(new Date(now.setDate(now.getDate() + 1)));\r\n                break;\r\n            }\r\n            default:\r\n                return value;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        if (this.formBuilt || !this.inputBuilderDefinition || !this.inputModel) {\r\n            return;\r\n        }\r\n\r\n        this.formBuilt = true;\r\n\r\n        // Clone our inputModel\r\n        this.clonedInputModel = { ...this.inputModel };\r\n        this.decorateInputModel();\r\n\r\n        // Default to full width (changes if help found)\r\n        this.containerClass = 'p-col-12';\r\n\r\n        if (\r\n            this.inputBuilderDefinition.orientation === OrientationValues.Horizontal ||\r\n            this.inputBuilderDefinition.inputLocation === InputLocations.INLINE\r\n        ) {\r\n            if (this.inputBuilderDefinition.columnCount > 0 && this.inputBuilderDefinition.columnCount < 5) {\r\n                const colSize = 12 / this.inputBuilderDefinition.columnCount;\r\n                this.controlStyle = `p-col-${colSize}`;\r\n            }\r\n        } else {\r\n            this.controlStyle = 'p-col-12';\r\n        }\r\n        const formGroup = {};\r\n\r\n        const localModel = {};\r\n\r\n        const asyncGets: Array<Observable<ReferenceValue>> = [];\r\n\r\n        // Always have one to run\r\n        asyncGets.push(of(new ReferenceValue()));\r\n\r\n        if (this.inputBuilderDefinition.inputDetails) {\r\n            this.filteredInputDetails = this.authService.filterItemsByRole(this.inputBuilderDefinition.inputDetails);\r\n            for (const inputDetail of this.filteredInputDetails) {\r\n                // Get value from model and apply to new FormControl\r\n                let inputValue: any = null;\r\n                if (ObjectPathHelper.get(this.clonedInputModel, inputDetail.name)) {\r\n                    // If we have a passed value in the model, set the control value to this\r\n                    inputValue = this.parseValue(inputDetail, ObjectPathHelper.get(this.clonedInputModel, inputDetail.name));\r\n                } else if (inputDetail.value) {\r\n                    // If we have a value passed in the Input definition set the control value to this.\r\n                    inputValue = this.getDefaultValue(inputDetail.value);\r\n                    ObjectPathHelper.set(this.clonedInputModel, inputDetail.name, inputValue);\r\n                } else {\r\n                    // This ensures that the property is set if not passed in\r\n                    ObjectPathHelper.set(this.clonedInputModel, inputDetail.name, null);\r\n                }\r\n\r\n                const formControl = new FormControl(inputValue, this.mapValidators(inputDetail)); // Validators passed here too\r\n\r\n                // Readonly\r\n                if (inputDetail.readonly) {\r\n                    formControl.disable();\r\n                }\r\n\r\n                // Remember for dependecy check in a mo\r\n                ObjectPathHelper.set(localModel, inputDetail.name, inputValue);\r\n\r\n                if (inputDetail.type !== InputTypes.search) {\r\n                    formControl.valueChanges.subscribe(changes => {\r\n                        this.fieldChanged(inputDetail, changes);\r\n                    });\r\n                } else {\r\n                    // Handle debounce for search boxes\r\n                    formControl.valueChanges\r\n                        .pipe(\r\n                            debounceTime(500),\r\n                            distinctUntilChanged(),\r\n                            tap(text => {\r\n                                this.fieldChanged(inputDetail, text);\r\n                            })\r\n                        )\r\n                        .subscribe();\r\n                }\r\n\r\n                formGroup[inputDetail.name] = formControl;\r\n\r\n                if (inputDetail['datasourceItems'] && inputDetail['datasourceItems'].length > 0) {\r\n                    // Pre loaded datasourceItems\r\n                    this.dataSourceLookup[inputDetail.name] = inputDetail['datasourceItems'];\r\n                    this.manipulateValuesToObjects(formControl, inputDetail as InputDetailReferenceValues, inputValue);\r\n                } else if (\r\n                    inputDetail.type !== InputTypes.autocomplete &&\r\n                    inputDetail.hasOwnProperty('referenceValueName') &&\r\n                    (<InputDetailReferenceValues>inputDetail).referenceValueName\r\n                ) {\r\n                    // If Datasource, get the values\r\n\r\n                    // Do we need a seed value\r\n                    let seed = '';\r\n                    if ((<InputDetailReferenceValues>inputDetail).referenceValueSeedDependency) {\r\n                        seed = this.clonedInputModel[(<InputDetailReferenceValues>inputDetail).referenceValueSeedDependency];\r\n                    }\r\n                    asyncGets.push(\r\n                        this.loadDataSource(inputDetail, seed).pipe(\r\n                            tap(data => {\r\n                                this.dataSourceLookup[inputDetail.name] = data.referenceValueItems;\r\n                                this.manipulateValuesToObjects(formControl, inputDetail as InputDetailReferenceValues, inputValue);\r\n                            })\r\n                        )\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Now re-loop notifying any dependencies\r\n            for (const inputDetail of this.filteredInputDetails) {\r\n                this.checkForDependencies(inputDetail, localModel[inputDetail.name]);\r\n            }\r\n        }\r\n\r\n        this.formRendered$ = forkJoin(asyncGets);\r\n        this.formRendered$.subscribe(results => {\r\n            console.log('Form rendering');\r\n            this.form = new FormGroup(formGroup);\r\n        });\r\n\r\n        const formValidators = [];\r\n        if (this.inputBuilderDefinition.customValidators) {\r\n            this.inputBuilderDefinition.customValidators.forEach(validator => {\r\n                formValidators.push({});\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup(formGroup, formValidators);\r\n    }\r\n\r\n    private manipulateValuesToObjects(formControl: FormControl, inputDetail: InputDetailReferenceValues, inputValue: any) {\r\n        if (inputDetail.type === InputTypes.multiselect) {\r\n            if (inputValue) {\r\n                const foundValues = this.dataSourceLookup[inputDetail.name].filter(ds => inputValue.includes(ds.value));\r\n                setTimeout(_ => {\r\n                    formControl.setValue(foundValues, {\r\n                        onlySelf: true,\r\n                        emitEvent: false\r\n                    });\r\n                }, 10);\r\n            }\r\n        } else {\r\n            // Now we have the values, find the ReferenceValue that matches the inputValue from above\r\n            if (this.clonedInputModel[inputDetail.name] && this.dataSourceLookup[inputDetail.name]) {\r\n                if (inputValue) {\r\n                    let foundInputValue;\r\n                    if (inputValue === 'first') {\r\n                        foundInputValue = this.dataSourceLookup[inputDetail.name][0];\r\n                    } else {\r\n                        foundInputValue = this.dataSourceLookup[inputDetail.name] // tslint:disable-next-line:triple-equals\r\n                            .find(ds => ds.value && ds.value.toString() == inputValue.toString()); // Full on corecion\r\n                    }\r\n                    if (foundInputValue) {\r\n                        setTimeout(_ => {\r\n                            formControl.setValue(foundInputValue, {\r\n                                onlySelf: true,\r\n                                emitEvent: false\r\n                            });\r\n                        }, 10);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseValue(inputDetail: InputDetail, value: string): any {\r\n        switch (inputDetail.type) {\r\n            case InputTypes.checkbox:\r\n            case InputTypes.switch: {\r\n                return value.toString() === 'true' || value.toString() === 'True' || value.toString() === '1';\r\n            }\r\n            case InputTypes.number:\r\n            case InputTypes.rating:\r\n            case InputTypes.spinner: {\r\n                return Number(value);\r\n            }\r\n            case InputTypes.date:\r\n            case InputTypes.datetime:\r\n            case InputTypes.time: {\r\n                const valueAsDate = new Date(value);\r\n                if ((<InputDetailDateTime>inputDetail).forceUTC) {\r\n                    return ZuluDateHelper.getGMTDate(valueAsDate);\r\n                } else {\r\n                    return valueAsDate;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Default just pass back original\r\n        return value;\r\n    }\r\n\r\n    private fieldChanged(inputDetail: InputDetail, value: any) {\r\n        let returnedValue: any;\r\n\r\n        // If we are any 'Object' type input just return the object. Simples.\r\n        if (inputDetail.type && inputDetail.type.endsWith('object')) {\r\n            returnedValue = value;\r\n        } else if (inputDetail.type === InputTypes.fileattach) {\r\n            returnedValue = value;\r\n        } else if (\r\n            (inputDetail.type && inputDetail.type === InputTypes.date) ||\r\n            inputDetail.type === InputTypes.datetime ||\r\n            inputDetail.type === InputTypes.time\r\n        ) {\r\n            if ((<InputDetailDateTime>inputDetail).forceUTC) {\r\n                returnedValue = ZuluDateHelper.setGMTDate(value);\r\n            } else {\r\n                returnedValue = value;\r\n            }\r\n        } else if (inputDetail.type === InputTypes.spinner) {\r\n            returnedValue = Number(value);\r\n        } else if (inputDetail.type && inputDetail.type === InputTypes.multiselect) {\r\n            // This is an array\r\n            if (Array.isArray(value)) {\r\n                const asArray = value as Array<ReferenceValueItem>;\r\n                returnedValue = asArray.map(refVal => refVal.value);\r\n            } else {\r\n                returnedValue = [];\r\n            }\r\n        } else {\r\n            if (value) {\r\n                returnedValue = value.toString();\r\n            } else {\r\n                returnedValue = null;\r\n            }\r\n\r\n            if (value && value.hasOwnProperty('value')) {\r\n                returnedValue = value.value;\r\n            } else {\r\n                returnedValue = value;\r\n            }\r\n        }\r\n\r\n        // Update listeners\r\n        this.valueUpdated.emit([inputDetail.name, returnedValue]);\r\n\r\n        // Do We need to notify another input of this change?\r\n        this.checkForDependencies(inputDetail, returnedValue);\r\n\r\n        // Flatten out Objects to value\r\n        const updatedModel = Object.assign({}, this.clonedInputModel);\r\n\r\n        updatedModel[inputDetail.name] = returnedValue;\r\n\r\n        // Tell subscribers we have changes\r\n        this.modelUpdated.emit(updatedModel);\r\n        this.clonedInputModel = updatedModel;\r\n    }\r\n\r\n    private checkForDependencies(inputDetail: InputDetail, updatedValue: any) {\r\n        this.filteredInputDetails.forEach(input => {\r\n            if (\r\n                this.form &&\r\n                input.hasOwnProperty('referenceValueSeedDependency') &&\r\n                (<InputDetailReferenceValues>input).referenceValueSeedDependency &&\r\n                (<InputDetailReferenceValues>input).referenceValueSeedDependency === inputDetail.name\r\n            ) {\r\n                this.loadDataSource(input, updatedValue, (<InputDetailReferenceValues>input).referenceValueChildLevel).subscribe(data => {\r\n                    this.dataSourceLookup[input.name] = data.referenceValueItems;\r\n\r\n                    const formControl = this.form.controls[inputDetail.name] as FormControl;\r\n                    this.manipulateValuesToObjects(formControl, inputDetail as InputDetailReferenceValues, formControl.value);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadDataSource(inputDetail: InputDetail, seed: string = '', childDepth = 0): Observable<ReferenceValue> {\r\n        return this.refValuesService.getReferenceValue((<InputDetailReferenceValues>inputDetail).referenceValueName, seed, childDepth);\r\n    }\r\n\r\n    private mapValidators(inputDetail: InputDetail) {\r\n        const formValidators = [];\r\n\r\n        if (inputDetail) {\r\n            // Required\r\n            if (inputDetail.validateRequired) {\r\n                formValidators.push(Validators.required);\r\n            }\r\n\r\n            // RequiredTrue\r\n            if (inputDetail.validateRequiredTrue) {\r\n                formValidators.push(Validators.requiredTrue);\r\n            }\r\n\r\n            // EMail\r\n            if (inputDetail.validateEmail) {\r\n                formValidators.push(Validators.email);\r\n            }\r\n\r\n            // Pattern\r\n            if (inputDetail.validatePattern) {\r\n                formValidators.push(Validators.pattern(inputDetail.validatePattern));\r\n            }\r\n\r\n            // Min Length\r\n            if (inputDetail.validateMinLength) {\r\n                formValidators.push(Validators.minLength(inputDetail.validateMinLength));\r\n                if (!inputDetail.validateMinLengthMessage) {\r\n                    inputDetail.validateMinLengthMessage = `${inputDetail.label} must be a minimum length of ${inputDetail.validateMinLength}`;\r\n                }\r\n            }\r\n\r\n            // Max Length\r\n            if (inputDetail.validateMaxLength) {\r\n                formValidators.push(Validators.maxLength(inputDetail.validateMaxLength));\r\n                if (!inputDetail.validateMaxLengthMessage) {\r\n                    inputDetail.validateMaxLengthMessage = `${inputDetail.label} must be a max length of ${inputDetail.validateMinLength}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return formValidators;\r\n    }\r\n}\r\n","<p-dialog [(visible)]=\"isShown\" [style]=\"styleValues\">\r\n    <p-header>\r\n        {{ inputBuilderDefinition?.title }}\r\n    </p-header>\r\n    <div class=\"ui-fluid\" #popupContainer [style.width.px]=\"setWidth\">\r\n        <ngs-input-builder\r\n            *ngIf=\"isShown\"\r\n            (modelUpdated)=\"notifyChanged($event)\"\r\n            (okClicked)=\"onOkClicked($event)\"\r\n            (cancelClicked)=\"onCancelClicked()\"\r\n            (modelUpdated)=\"onModelUpdated($event)\"\r\n            (valueUpdated)=\"onValueUpdated()\"\r\n            [inputBuilderDefinition]=\"inputBuilderDefinition\"\r\n            [inputModel]=\"inputModel\"\r\n        ></ngs-input-builder>\r\n    </div>\r\n</p-dialog>\r\n","import { Component, Input, Output, EventEmitter, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { InputBuilderDefinition } from '@ngscaffolding/models';\r\n\r\n@Component({\r\n    selector: 'ngs-input-builder-popup',\r\n    templateUrl: 'inputBuilderPopup.component.html',\r\n    styleUrls: ['inputBuilderPopup.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InputBuilderPopupComponent implements OnDestroy {\r\n    @Input() inputBuilderDefinition: InputBuilderDefinition;\r\n    @Input() attachMouseClick: boolean;\r\n    @Input() inputModel: any;\r\n    @Input() setWidth: number;\r\n    @Input() setTop: number;\r\n    @Input() setLeft: number;\r\n\r\n    @Output() modelUpdated = new EventEmitter<any>();\r\n    @Output() valueUpdated = new EventEmitter<[string, any]>();\r\n\r\n    @Output() okClicked = new EventEmitter<any>();\r\n    @Output() cancelClicked = new EventEmitter<any>();\r\n\r\n    isShown: boolean;\r\n\r\n    private mouseSubscription: Subscription;\r\n    private mouseX: number;\r\n    private mouseY: number;\r\n    private screenWidth: number;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {\r\n        this.mouseSubscription = fromEvent(document.body, 'mousemove').subscribe(e => {\r\n            if (this.attachMouseClick) {\r\n                this.screenWidth = window.innerWidth;\r\n                this.mouseY = e['pageY'];\r\n                this.mouseX = e['pageX'];\r\n                if (this.setWidth) {\r\n                    if (this.mouseX + this.setWidth > this.screenWidth) {\r\n                        this.setLeft = this.mouseX - this.setWidth;\r\n                    } else {\r\n                        this.setLeft = this.mouseX;\r\n                    }\r\n                    this.setTop = this.mouseY;\r\n                } else {\r\n                    this.setLeft = this.mouseX;\r\n                    this.setTop = this.mouseY;\r\n                }\r\n\r\n                if (!this.isShown) {\r\n                    const newStyle: any = { overflow: 'visible', position: 'absolute' };\r\n\r\n                    newStyle.top = `${this.setTop}px`;\r\n                    newStyle.left = `${this.setLeft}px`;\r\n\r\n                    this.styleValues = newStyle;\r\n\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    styleValues = {\r\n        overflow: 'visible'\r\n    };\r\n\r\n    showPopup() {\r\n        this.isShown = true;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.mouseSubscription) {\r\n            this.mouseSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    notifyChanged(event: any) {}\r\n\r\n    onModelUpdated(model: any) {\r\n        this.modelUpdated.emit(model);\r\n    }\r\n\r\n    onValueUpdated() {}\r\n\r\n    onOkClicked(model: any) {\r\n        this.okClicked.emit(model);\r\n    }\r\n    onCancelClicked() {\r\n        this.cancelClicked.emit(null);\r\n        this.isShown = false;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@ngscaffolding/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InputBuilderComponent } from './inputBuilder/inputBuilder.component';\nimport { InputBuilderPopupComponent } from './inputBuilderPopup/inputBuilderPopup.component';\n\nimport { NgJsonEditorModule } from 'ang-jsoneditor';\n\n// Components\nimport { EditableTitleComponent } from './components/editableTitle/editableTitle.component';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { DialogModule } from 'primeng/dialog';\nimport { EditorModule } from 'primeng/editor';\nimport { ListboxModule } from 'primeng/listbox';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { SliderModule } from 'primeng/slider';\nimport { ChipsModule } from 'primeng/chips';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { SpinnerModule } from 'primeng/spinner';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { PasswordModule } from 'primeng/password';\nimport { RatingModule } from 'primeng/rating';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'primeng/api';\n\n@NgModule({\n    declarations: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        AutoCompleteModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SharedModule,\n        EditorModule,\n        ListboxModule,\n        SelectButtonModule,\n        ColorPickerModule,\n        SliderModule,\n        ChipsModule,\n        ReactiveFormsModule,\n        InputSwitchModule,\n        InputTextModule,\n        InputMaskModule,\n        SpinnerModule,\n        CalendarModule,\n        TriStateCheckboxModule,\n        InputTextareaModule,\n        CheckboxModule,\n        RadioButtonModule,\n        DropdownModule,\n        PasswordModule,\n        RatingModule,\n        KeyFilterModule,\n        MultiSelectModule,\n        ToggleButtonModule,\n        TooltipModule,\n        NgJsonEditorModule,\n        FileUploadModule,\n        TranslateModule.forChild(),\n    ],\n    exports: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent],\n})\nexport class InputBuilderModule {\n    static forRoot(): ModuleWithProviders<InputBuilderModule> {\n        return {\n            ngModule: InputBuilderModule,\n        };\n    }\n}\n"]}