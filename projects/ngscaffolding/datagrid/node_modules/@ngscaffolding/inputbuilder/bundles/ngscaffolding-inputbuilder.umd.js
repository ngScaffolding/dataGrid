(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('primeng/button'), require('@angular/forms'), require('primeng/inputtext'), require('rxjs'), require('ang-jsoneditor'), require('rxjs/operators'), require('@ngscaffolding/models'), require('@ngscaffolding/core'), require('primeng/password'), require('primeng/keyfilter'), require('primeng/slider'), require('primeng/inputmask'), require('primeng/spinner'), require('primeng/inputtextarea'), require('primeng/checkbox'), require('primeng/dropdown'), require('primeng/autocomplete'), require('primeng/chips'), require('primeng/multiselect'), require('primeng/inputswitch'), require('primeng/calendar'), require('primeng/fileupload'), require('primeng/tooltip'), require('@ngx-translate/core'), require('primeng/dialog'), require('primeng/api'), require('primeng/editor'), require('primeng/listbox'), require('primeng/selectbutton'), require('primeng/colorpicker'), require('primeng/tristatecheckbox'), require('primeng/radiobutton'), require('primeng/rating'), require('primeng/togglebutton')) :
    typeof define === 'function' && define.amd ? define('@ngscaffolding/inputbuilder', ['exports', '@angular/core', '@angular/common', 'primeng/button', '@angular/forms', 'primeng/inputtext', 'rxjs', 'ang-jsoneditor', 'rxjs/operators', '@ngscaffolding/models', '@ngscaffolding/core', 'primeng/password', 'primeng/keyfilter', 'primeng/slider', 'primeng/inputmask', 'primeng/spinner', 'primeng/inputtextarea', 'primeng/checkbox', 'primeng/dropdown', 'primeng/autocomplete', 'primeng/chips', 'primeng/multiselect', 'primeng/inputswitch', 'primeng/calendar', 'primeng/fileupload', 'primeng/tooltip', '@ngx-translate/core', 'primeng/dialog', 'primeng/api', 'primeng/editor', 'primeng/listbox', 'primeng/selectbutton', 'primeng/colorpicker', 'primeng/tristatecheckbox', 'primeng/radiobutton', 'primeng/rating', 'primeng/togglebutton'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ngscaffolding = global.ngscaffolding || {}, global.ngscaffolding.inputbuilder = {}), global.ng.core, global.ng.common, global.i2$1, global.ng.forms, global.i4, global.rxjs, global.i18, global.rxjs.operators, global.models, global.i1, global.i5, global.i6, global.i7, global.i8, global.i9, global.i10, global.i11, global.i12, global.i13, global.i14, global.i15, global.i16, global.i17, global.i19, global.i21, global.i22, global.i1$1, global.i2$2, global.editor, global.listbox, global.selectbutton, global.colorpicker, global.tristatecheckbox, global.radiobutton, global.rating, global.togglebutton));
}(this, (function (exports, i0, i2, i2$1, i3, i4, rxjs, i18, operators, models, i1, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i19, i21, i22, i1$1, i2$2, editor, listbox, selectbutton, colorpicker, tristatecheckbox, radiobutton, rating, togglebutton) { 'use strict';

    var _c0 = ["inputTitle"];
    function EditableTitleComponent_span_0_Template(rf, ctx) {
        if (rf & 1) {
            var _r4_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "span", 3);
            i0.ɵɵlistener("click", function EditableTitleComponent_span_0_Template_span_click_0_listener() { i0.ɵɵrestoreView(_r4_1); var ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.mouseClicked(); })("mouseleave", function EditableTitleComponent_span_0_Template_span_mouseleave_0_listener() { i0.ɵɵrestoreView(_r4_1); var ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.mouseLeave(); })("mouseenter", function EditableTitleComponent_span_0_Template_span_mouseenter_0_listener() { i0.ɵɵrestoreView(_r4_1); var ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.mouseOver(); });
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0.ɵɵnextContext();
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx_r0.title);
        }
    }
    function EditableTitleComponent_button_1_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelement(0, "button", 4);
        }
    }
    function EditableTitleComponent_input_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r9_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "input", 5, 6);
            i0.ɵɵlistener("blur", function EditableTitleComponent_input_2_Template_input_blur_0_listener() { i0.ɵɵrestoreView(_r9_1); var ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.isEditing = false; })("ngModelChange", function EditableTitleComponent_input_2_Template_input_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r9_1); var ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.editTitle = $event; })("change", function EditableTitleComponent_input_2_Template_input_change_0_listener() { i0.ɵɵrestoreView(_r9_1); var ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.textChanged(); });
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0.ɵɵnextContext();
            i0.ɵɵproperty("ngModel", ctx_r2.editTitle);
        }
    }
    var EditableTitleComponent = /** @class */ (function () {
        function EditableTitleComponent() {
            this.titleChanged = new i0.EventEmitter();
            this.displayIcon = false;
            this.isEditing = false;
        }
        EditableTitleComponent.prototype.ngOnChanges = function (changes) {
            if (changes.title) {
                this.editTitle = changes.title.currentValue;
                this.applyObject(changes.configObject);
            }
            if (changes.configObject) {
                this.applyObject(changes.configObject);
            }
        };
        // update Title with string replacement @@key## style
        EditableTitleComponent.prototype.applyObject = function (config) {
            var newTitle = this.title;
            if (config) {
                for (var key in config) {
                    if (config.hasOwnProperty(key)) {
                        newTitle = newTitle.replace("@@" + key + "##", config[key]);
                    }
                }
                this.editTitle = newTitle;
            }
        };
        EditableTitleComponent.prototype.mouseOver = function () {
            if (!this.readOnly) {
                this.displayIcon = true;
            }
        };
        EditableTitleComponent.prototype.mouseLeave = function () {
            this.displayIcon = false;
        };
        EditableTitleComponent.prototype.mouseClicked = function () {
            var _this = this;
            if (!this.readOnly) {
                this.isEditing = true;
                this.displayIcon = false;
            }
            setTimeout(function () {
                // this will make the execution after the above boolean has changed
                _this.inputTitleElement.nativeElement.focus();
                _this.inputTitleElement.nativeElement.select();
            }, 0);
        };
        EditableTitleComponent.prototype.textChanged = function () {
            this.titleChanged.emit(this.editTitle);
        };
        return EditableTitleComponent;
    }());
    EditableTitleComponent.ɵfac = function EditableTitleComponent_Factory(t) { return new (t || EditableTitleComponent)(); };
    EditableTitleComponent.ɵcmp = i0.ɵɵdefineComponent({ type: EditableTitleComponent, selectors: [["ngs-editable-title"]], viewQuery: function EditableTitleComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0.ɵɵviewQuery(_c0, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputTitleElement = _t.first);
            }
        }, inputs: { title: "title", configObject: "configObject", readOnly: "readOnly" }, outputs: { titleChanged: "titleChanged" }, features: [i0.ɵɵNgOnChangesFeature], decls: 3, vars: 3, consts: [["class", "title-display", 3, "click", "mouseleave", "mouseenter", 4, "ngIf"], ["pButton", "", "class", "p-button-rounded p-button-info p-button-text p-mr-2 p-mb-2", "type", "button", "icon", "pi pi-pencil", 4, "ngIf"], ["class", "large-edit", "type", "text", "pInputText", "", 3, "ngModel", "blur", "ngModelChange", "change", 4, "ngIf"], [1, "title-display", 3, "click", "mouseleave", "mouseenter"], ["pButton", "", "type", "button", "icon", "pi pi-pencil", 1, "p-button-rounded", "p-button-info", "p-button-text", "p-mr-2", "p-mb-2"], ["type", "text", "pInputText", "", 1, "large-edit", 3, "ngModel", "blur", "ngModelChange", "change"], ["inputTitle", ""]], template: function EditableTitleComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0.ɵɵtemplate(0, EditableTitleComponent_span_0_Template, 2, 1, "span", 0);
                i0.ɵɵtemplate(1, EditableTitleComponent_button_1_Template, 1, 0, "button", 1);
                i0.ɵɵtemplate(2, EditableTitleComponent_input_2_Template, 2, 1, "input", 2);
            }
            if (rf & 2) {
                i0.ɵɵproperty("ngIf", !ctx.isEditing);
                i0.ɵɵadvance(1);
                i0.ɵɵproperty("ngIf", ctx.displayIcon);
                i0.ɵɵadvance(1);
                i0.ɵɵproperty("ngIf", ctx.isEditing);
            }
        }, directives: [i2.NgIf, i2$1.ButtonDirective, i3.DefaultValueAccessor, i4.InputText, i3.NgControlStatus, i3.NgModel], styles: [".toolbarButton[_ngcontent-%COMP%]{border-radius:0x!important;margin-left:2px}.large-edit[_ngcontent-%COMP%]{font-size:20px;width:50%}.tipIcon[_ngcontent-%COMP%]{font-size:12px;margin-left:6px;top:-4px}.title-display[_ngcontent-%COMP%]{margin-left:.5em}"] });
    /*@__PURE__*/ (function () {
        i0.ɵsetClassMetadata(EditableTitleComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'ngs-editable-title',
                        templateUrl: 'editableTitle.component.html',
                        styleUrls: ['editableTitle.component.scss']
                    }]
            }], null, { inputTitleElement: [{
                    type: i0.ViewChild,
                    args: ['inputTitle', { static: false }]
                }], title: [{
                    type: i0.Input
                }], configObject: [{
                    type: i0.Input
                }], readOnly: [{
                    type: i0.Input
                }], titleChanged: [{
                    type: i0.Output
                }] });
    })();

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var _c0$1 = ["dropDown"];
    function InputBuilderComponent_form_0_div_1_span_2_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelement(0, "span", 13);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_3_input_1_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelement(0, "input", 16);
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_3_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵtemplate(1, InputBuilderComponent_form_0_div_1_span_3_input_1_Template, 1, 3, "input", 14);
            i0.ɵɵelementStart(2, "label", 15);
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r5 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !input_r3.mask);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("for", input_r3.name);
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx_r5.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_4_input_1_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelement(0, "input", 18);
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_4_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵtemplate(1, InputBuilderComponent_form_0_div_1_span_4_input_1_Template, 1, 3, "input", 17);
            i0.ɵɵelementStart(2, "label", 15);
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r6 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !input_r3.mask);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("for", input_r3.name);
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx_r6.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_5_input_1_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelement(0, "input", 20);
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_5_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵtemplate(1, InputBuilderComponent_form_0_div_1_span_5_input_1_Template, 1, 3, "input", 19);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r7 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", !input_r3.mask);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r7.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_6_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "input", 21);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r8 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r8.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_7_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-slider", 22);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r9 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name)("min", input_r3.min)("max", input_r3.max)("step", input_r3.step);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r9.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_8_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span");
            i0.ɵɵelement(1, "p-inputMask", 23);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r10 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("mask", input_r3.mask)("id", input_r3.name)("formControl", ctx_r10.form.controls[input_r3.name]);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r10.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_9_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span");
            i0.ɵɵelement(1, "p-spinner", 24);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r11 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("id", input_r3.name)("min", input_r3.min)("max", input_r3.max)("formControl", ctx_r11.form.controls[input_r3.name]);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r11.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_10_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "textarea", 25);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("rows", input_r3.rows)("placeholder", input_r3.label)("formControlName", input_r3.name);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_11_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span");
            i0.ɵɵelement(1, "p-checkbox", 26);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r13 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("label", input_r3.label)("id", input_r3.name)("formControl", ctx_r13.form.controls[input_r3.name]);
        }
    }
    var _c1 = function () { return { width: "100%" }; };
    function InputBuilderComponent_form_0_div_1_span_12_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-dropdown", 27, 28);
            i0.ɵɵelementStart(3, "label", 15);
            i0.ɵɵtext(4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r14 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c1));
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("id", input_r3.name)("options", ctx_r14.dataSourceLookup[input_r3.name])("filter", input_r3.selectFilter)("formControlName", input_r3.name);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("for", input_r3.name);
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx_r14.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_13_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-dropdown", 29, 28);
            i0.ɵɵelementStart(3, "label", 15);
            i0.ɵɵtext(4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r15 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c1));
            i0.ɵɵproperty("id", input_r3.name)("options", ctx_r15.dataSourceLookup[input_r3.name])("filter", input_r3.selectFilter)("tabindex", input_r3.tabindex)("formControlName", input_r3.name);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("for", input_r3.name);
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx_r15.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_p_autoComplete_14_Template(rf, ctx) {
        if (rf & 1) {
            var _r52_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "p-autoComplete", 30);
            i0.ɵɵlistener("completeMethod", function InputBuilderComponent_form_0_div_1_p_autoComplete_14_Template_p_autoComplete_completeMethod_0_listener($event) { i0.ɵɵrestoreView(_r52_1); var input_r3 = i0.ɵɵnextContext().$implicit; var ctx_r50 = i0.ɵɵnextContext(2); return ctx_r50.searchAutoComplete($event, input_r3); });
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r16 = i0.ɵɵnextContext(2);
            i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c1));
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("dropdown", true)("formControlName", input_r3.name)("suggestions", ctx_r16.dataSourceLookup[input_r3.name])("placeholder", ctx_r16.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_15_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-chips", 31);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("id", input_r3.name)("placeholder", input_r3.label)("formControlName", input_r3.name);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_16_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-multiSelect", 32);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r18 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("id", input_r3.name)("filterPlaceHolder", input_r3.name)("formControlName", input_r3.name)("filter", false)("options", ctx_r18.dataSourceLookup[input_r3.name]);
        }
    }
    function InputBuilderComponent_form_0_div_1_span_17_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span");
            i0.ɵɵelement(1, "p-inputSwitch", 33);
            i0.ɵɵelementStart(2, "label", 34);
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r19 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("id", input_r3.name)("formControlName", input_r3.name);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r19.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_18_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-calendar", 35);
            i0.ɵɵpipe(2, "async");
            i0.ɵɵpipe(3, "async");
            i0.ɵɵpipe(4, "async");
            i0.ɵɵelementStart(5, "label");
            i0.ɵɵtext(6);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r20 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("showButtonBar", i0.ɵɵpipeBind1(2, 7, ctx_r20.appSettings.getBoolean("inputDateShowButtonBar")))("showIcon", i0.ɵɵpipeBind1(3, 9, ctx_r20.appSettings.getBoolean("inputShowCalendarIcon")))("dateFormat", i0.ɵɵpipeBind1(4, 11, ctx_r20.appSettings.getString("inputDateFormat")))("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(5);
            i0.ɵɵtextInterpolate(ctx_r20.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_19_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-calendar", 35);
            i0.ɵɵpipe(2, "async");
            i0.ɵɵpipe(3, "async");
            i0.ɵɵpipe(4, "async");
            i0.ɵɵelementStart(5, "label");
            i0.ɵɵtext(6);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r21 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("showButtonBar", i0.ɵɵpipeBind1(2, 7, ctx_r21.appSettings.getBoolean("inputDateShowButtonBar")))("showIcon", i0.ɵɵpipeBind1(3, 9, ctx_r21.appSettings.getBoolean("inputShowCalendarIcon")))("dateFormat", i0.ɵɵpipeBind1(4, 11, ctx_r21.appSettings.getString("inputDateFormat")))("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(5);
            i0.ɵɵtextInterpolate(ctx_r21.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_20_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-calendar", 36);
            i0.ɵɵpipe(2, "async");
            i0.ɵɵpipe(3, "async");
            i0.ɵɵpipe(4, "async");
            i0.ɵɵelementStart(5, "label");
            i0.ɵɵtext(6);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r22 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("showButtonBar", i0.ɵɵpipeBind1(2, 7, ctx_r22.appSettings.getBoolean("inputDateShowButtonBar")))("showIcon", i0.ɵɵpipeBind1(3, 9, ctx_r22.appSettings.getBoolean("inputShowCalendarIcon")))("dateFormat", i0.ɵɵpipeBind1(4, 11, ctx_r22.appSettings.getString("inputDateFormat")))("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(5);
            i0.ɵɵtextInterpolate(ctx_r22.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_21_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "p-calendar", 37);
            i0.ɵɵpipe(2, "async");
            i0.ɵɵpipe(3, "async");
            i0.ɵɵelementStart(4, "label");
            i0.ɵɵtext(5);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r23 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("showButtonBar", i0.ɵɵpipeBind1(2, 6, ctx_r23.appSettings.getBoolean("inputDateShowButtonBar")))("showIcon", i0.ɵɵpipeBind1(3, 8, ctx_r23.appSettings.getBoolean("inputShowCalendarIcon")))("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(4);
            i0.ɵɵtextInterpolate(ctx_r23.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_22_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "json-editor", 38);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r24 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("options", ctx_r24.editorOptions)("data", input_r3.value);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r24.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_23_Template(rf, ctx) {
        if (rf & 1) {
            var _r64_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelementStart(1, "p-fileUpload", 39);
            i0.ɵɵlistener("uploadHandler", function InputBuilderComponent_form_0_div_1_span_23_Template_p_fileUpload_uploadHandler_1_listener($event) { i0.ɵɵrestoreView(_r64_1); var input_r3 = i0.ɵɵnextContext().$implicit; var ctx_r62 = i0.ɵɵnextContext(2); return ctx_r62.attachFiles($event, input_r3); });
            i0.ɵɵpipe(2, "translate");
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r25 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵpropertyInterpolate("chooseLabel", i0.ɵɵpipeBind1(2, 4, "Choose File"));
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("accept", input_r3.accept || ctx_r25.allowedFileTypes)("maxFileSize", input_r3.maxFileSize || ctx_r25.maxFileSize);
        }
    }
    function InputBuilderComponent_form_0_div_1_div_24_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 40);
            i0.ɵɵelementStart(1, "span", 13);
            i0.ɵɵelement(2, "input", 41);
            i0.ɵɵelementStart(3, "label");
            i0.ɵɵtext(4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
            i0.ɵɵelement(5, "button", 42);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r26 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r26.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_25_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelementStart(1, "div", 43);
            i0.ɵɵtext(2);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r27 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("id", input_r3.name);
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx_r27.loadComponent(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_26_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 13);
            i0.ɵɵelement(1, "input", 44);
            i0.ɵɵelementStart(2, "label");
            i0.ɵɵtext(3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r28 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("tabindex", input_r3.tabindex)("formControlName", input_r3.name)("id", input_r3.name);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx_r28.getLabel(input_r3));
        }
    }
    function InputBuilderComponent_form_0_div_1_span_27_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "span", 45);
            i0.ɵɵelement(1, "i", 46);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵpropertyInterpolate("pTooltip", input_r3.help);
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_div_1_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate1(" ", input_r3.validateRequired, " ");
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate1(" ", input_r3.validateRequiredTrue, " ");
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_div_3_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate1(" ", input_r3.validateEmail, " ");
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_div_4_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate1(" ", input_r3.validatePatternMessage, " ");
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_div_5_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate1(" ", input_r3.validateMinLengthMessage, " ");
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_div_6_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext(2).$implicit;
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate1(" ", input_r3.validateMaxLengthMessage, " ");
        }
    }
    function InputBuilderComponent_form_0_div_1_div_28_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 47);
            i0.ɵɵtemplate(1, InputBuilderComponent_form_0_div_1_div_28_div_1_Template, 2, 1, "div", 48);
            i0.ɵɵtemplate(2, InputBuilderComponent_form_0_div_1_div_28_div_2_Template, 2, 1, "div", 48);
            i0.ɵɵtemplate(3, InputBuilderComponent_form_0_div_1_div_28_div_3_Template, 2, 1, "div", 48);
            i0.ɵɵtemplate(4, InputBuilderComponent_form_0_div_1_div_28_div_4_Template, 2, 1, "div", 48);
            i0.ɵɵtemplate(5, InputBuilderComponent_form_0_div_1_div_28_div_5_Template, 2, 1, "div", 48);
            i0.ɵɵtemplate(6, InputBuilderComponent_form_0_div_1_div_28_div_6_Template, 2, 1, "div", 48);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = i0.ɵɵnextContext().$implicit;
            var ctx_r30 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r30.form.get(input_r3.name).errors.required);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r30.form.get(input_r3.name).errors.requiredTrue);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r30.form.get(input_r3.name).errors.email);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r30.form.get(input_r3.name).errors.pattern);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r30.form.get(input_r3.name).errors.minlength);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r30.form.get(input_r3.name).errors.maxlength);
        }
    }
    function InputBuilderComponent_form_0_div_1_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 4);
            i0.ɵɵelementStart(1, "div", 5);
            i0.ɵɵtemplate(2, InputBuilderComponent_form_0_div_1_span_2_Template, 1, 0, "span", 6);
            i0.ɵɵtemplate(3, InputBuilderComponent_form_0_div_1_span_3_Template, 4, 3, "span", 6);
            i0.ɵɵtemplate(4, InputBuilderComponent_form_0_div_1_span_4_Template, 4, 3, "span", 6);
            i0.ɵɵtemplate(5, InputBuilderComponent_form_0_div_1_span_5_Template, 4, 2, "span", 6);
            i0.ɵɵtemplate(6, InputBuilderComponent_form_0_div_1_span_6_Template, 4, 4, "span", 6);
            i0.ɵɵtemplate(7, InputBuilderComponent_form_0_div_1_span_7_Template, 4, 7, "span", 6);
            i0.ɵɵtemplate(8, InputBuilderComponent_form_0_div_1_span_8_Template, 4, 5, "span", 7);
            i0.ɵɵtemplate(9, InputBuilderComponent_form_0_div_1_span_9_Template, 4, 6, "span", 7);
            i0.ɵɵtemplate(10, InputBuilderComponent_form_0_div_1_span_10_Template, 2, 4, "span", 6);
            i0.ɵɵtemplate(11, InputBuilderComponent_form_0_div_1_span_11_Template, 2, 4, "span", 7);
            i0.ɵɵtemplate(12, InputBuilderComponent_form_0_div_1_span_12_Template, 5, 10, "span", 6);
            i0.ɵɵtemplate(13, InputBuilderComponent_form_0_div_1_span_13_Template, 5, 10, "span", 6);
            i0.ɵɵtemplate(14, InputBuilderComponent_form_0_div_1_p_autoComplete_14_Template, 1, 8, "p-autoComplete", 8);
            i0.ɵɵtemplate(15, InputBuilderComponent_form_0_div_1_span_15_Template, 2, 4, "span", 6);
            i0.ɵɵtemplate(16, InputBuilderComponent_form_0_div_1_span_16_Template, 2, 6, "span", 6);
            i0.ɵɵtemplate(17, InputBuilderComponent_form_0_div_1_span_17_Template, 4, 4, "span", 7);
            i0.ɵɵtemplate(18, InputBuilderComponent_form_0_div_1_span_18_Template, 7, 13, "span", 6);
            i0.ɵɵtemplate(19, InputBuilderComponent_form_0_div_1_span_19_Template, 7, 13, "span", 6);
            i0.ɵɵtemplate(20, InputBuilderComponent_form_0_div_1_span_20_Template, 7, 13, "span", 6);
            i0.ɵɵtemplate(21, InputBuilderComponent_form_0_div_1_span_21_Template, 6, 10, "span", 6);
            i0.ɵɵtemplate(22, InputBuilderComponent_form_0_div_1_span_22_Template, 4, 4, "span", 6);
            i0.ɵɵtemplate(23, InputBuilderComponent_form_0_div_1_span_23_Template, 3, 6, "span", 6);
            i0.ɵɵtemplate(24, InputBuilderComponent_form_0_div_1_div_24_Template, 6, 4, "div", 9);
            i0.ɵɵtemplate(25, InputBuilderComponent_form_0_div_1_span_25_Template, 3, 2, "span", 6);
            i0.ɵɵtemplate(26, InputBuilderComponent_form_0_div_1_span_26_Template, 4, 4, "span", 10);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(27, InputBuilderComponent_form_0_div_1_span_27_Template, 2, 1, "span", 11);
            i0.ɵɵtemplate(28, InputBuilderComponent_form_0_div_1_div_28_Template, 7, 6, "div", 12);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var input_r3 = ctx.$implicit;
            var ctx_r1 = i0.ɵɵnextContext(2);
            var tmp_29_0 = null;
            i0.ɵɵclassProp("noPadding", ctx_r1.inputBuilderDefinition.inputLocation === "inline");
            i0.ɵɵproperty("className", ctx_r1.controlStyle);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitch", input_r3.type)("className", ctx_r1.getContainerClass(input_r3));
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "null");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "textbox");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "password");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "email");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "number");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "slider");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "mask");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "spinner");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "textarea");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "checkbox");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "dropdown");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "dropdownobject");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "autocomplete");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "chips");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "multiselect");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "switch");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "datetime");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "datetimeUTC");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "date");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "time");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "json");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "fileattach");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "search");
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngSwitchCase", "dynamic");
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", input_r3.help);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ((tmp_29_0 = ctx_r1.form.get(input_r3.name)) == null ? null : tmp_29_0.invalid) && (((tmp_29_0 = ctx_r1.form.get(input_r3.name)) == null ? null : tmp_29_0.dirty) || ((tmp_29_0 = ctx_r1.form.get(input_r3.name)) == null ? null : tmp_29_0.touched) || ctx_r1.formSubmitted));
        }
    }
    function InputBuilderComponent_form_0_div_2_div_1_Template(rf, ctx) {
        if (rf & 1) {
            var _r87_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "div", 51);
            i0.ɵɵelementStart(1, "button", 52);
            i0.ɵɵlistener("click", function InputBuilderComponent_form_0_div_2_div_1_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r87_1); var ctx_r86 = i0.ɵɵnextContext(3); return ctx_r86.onCustom(); });
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r83 = i0.ɵɵnextContext(3);
            i0.ɵɵadvance(1);
            i0.ɵɵpropertyInterpolate("icon", ctx_r83.inputBuilderDefinition.customButtonIcon);
            i0.ɵɵpropertyInterpolate("label", ctx_r83.inputBuilderDefinition.customButtonText);
        }
    }
    function InputBuilderComponent_form_0_div_2_div_2_Template(rf, ctx) {
        if (rf & 1) {
            var _r89_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "div", 51);
            i0.ɵɵelementStart(1, "button", 53);
            i0.ɵɵlistener("click", function InputBuilderComponent_form_0_div_2_div_2_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r89_1); var ctx_r88 = i0.ɵɵnextContext(3); return ctx_r88.onCancel(); });
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r84 = i0.ɵɵnextContext(3);
            i0.ɵɵadvance(1);
            i0.ɵɵpropertyInterpolate("icon", ctx_r84.inputBuilderDefinition.cancelButtonIcon);
            i0.ɵɵpropertyInterpolate("label", ctx_r84.inputBuilderDefinition.cancelButtonText);
        }
    }
    function InputBuilderComponent_form_0_div_2_div_3_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 51);
            i0.ɵɵelement(1, "button", 54);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r85 = i0.ɵɵnextContext(3);
            i0.ɵɵadvance(1);
            i0.ɵɵpropertyInterpolate("icon", ctx_r85.inputBuilderDefinition.okButtonIcon);
            i0.ɵɵpropertyInterpolate("label", ctx_r85.inputBuilderDefinition.okButtonText);
        }
    }
    function InputBuilderComponent_form_0_div_2_Template(rf, ctx) {
        if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 49);
            i0.ɵɵtemplate(1, InputBuilderComponent_form_0_div_2_div_1_Template, 2, 2, "div", 50);
            i0.ɵɵtemplate(2, InputBuilderComponent_form_0_div_2_div_2_Template, 2, 2, "div", 50);
            i0.ɵɵtemplate(3, InputBuilderComponent_form_0_div_2_div_3_Template, 2, 2, "div", 50);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r2 = i0.ɵɵnextContext(2);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r2.inputBuilderDefinition.customButtonText);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r2.inputBuilderDefinition.cancelButtonText);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r2.inputBuilderDefinition.okButtonText);
        }
    }
    function InputBuilderComponent_form_0_Template(rf, ctx) {
        if (rf & 1) {
            var _r91_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "form", 1);
            i0.ɵɵlistener("ngSubmit", function InputBuilderComponent_form_0_Template_form_ngSubmit_0_listener() { i0.ɵɵrestoreView(_r91_1); var ctx_r90 = i0.ɵɵnextContext(); return ctx_r90.onSubmit(ctx_r90.form); });
            i0.ɵɵtemplate(1, InputBuilderComponent_form_0_div_1_Template, 29, 31, "div", 2);
            i0.ɵɵtemplate(2, InputBuilderComponent_form_0_div_2_Template, 4, 3, "div", 3);
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r0 = i0.ɵɵnextContext();
            i0.ɵɵclassProp("noPadding", ctx_r0.inputBuilderDefinition.inputLocation === "inline")("form-group", ctx_r0.inputBuilderDefinition.inputLocation !== "inline");
            i0.ɵɵproperty("formGroup", ctx_r0.form);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx_r0.filteredInputDetails);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx_r0.inputBuilderDefinition.customButtonText || ctx_r0.inputBuilderDefinition.cancelButtonText || ctx_r0.inputBuilderDefinition.okButtonText);
        }
    }
    var InputBuilderComponent = /** @class */ (function () {
        function InputBuilderComponent(elementRef, ref, appSettings, appSettingsQuery, authQuery, refValuesService, componentLoader, authService) {
            this.elementRef = elementRef;
            this.ref = ref;
            this.appSettings = appSettings;
            this.appSettingsQuery = appSettingsQuery;
            this.authQuery = authQuery;
            this.refValuesService = refValuesService;
            this.componentLoader = componentLoader;
            this.authService = authService;
            this.modelUpdated = new i0.EventEmitter();
            this.valueUpdated = new i0.EventEmitter();
            this.fileAttached = new i0.EventEmitter();
            this.okClicked = new i0.EventEmitter();
            this.cancelClicked = new i0.EventEmitter();
            this.formBuilt = false;
            this.controlStyle = 'p-col-12';
            this.containerClass = 'p-col-12'; // This changes to allow the help Icon
            this.formSubmitted = false;
            this.dataSourceLookup = {};
            this.editorOptions = new i18.JsonEditorOptions();
            this.editorOptions.modes = ['code', 'text', 'tree', 'view']; // set all allowed modes
        }
        InputBuilderComponent.prototype.getLabel = function (input) {
            if (input.label) {
                return input.label;
            }
            else if (input.name) {
                return input.name.replace(/([A-Z]+)/g, ' $1').replace(/([A-Z][a-z])/g, ' $1');
            }
        };
        InputBuilderComponent.prototype.loadComponent = function (input) {
            var _this = this;
            this.componentLoader.loadComponent(input.angularComponent).then(function (element) {
                _this.elementRef.nativeElement.querySelector("#" + input.name).appendChild(element);
            });
        };
        InputBuilderComponent.prototype.onSubmit = function (form) {
            this.formSubmitted = true;
            if (this.form.valid) {
                if (this.inputBuilderDefinition.okButtonCallBack) {
                    this.inputBuilderDefinition.okButtonCallBack(this.clonedInputModel);
                }
                this.okClicked.emit([this.clonedInputModel, this.fileContent]);
            }
        };
        InputBuilderComponent.prototype.onCancel = function () {
            if (this.inputBuilderDefinition.cancelButtonCallBack) {
                this.inputBuilderDefinition.cancelButtonCallBack(this.clonedInputModel);
            }
            this.cancelClicked.emit();
        };
        InputBuilderComponent.prototype.onCustom = function () {
            if (this.inputBuilderDefinition.customButtonCallBack) {
                this.inputBuilderDefinition.customButtonCallBack(this.clonedInputModel);
            }
        };
        InputBuilderComponent.prototype.ngOnChanges = function (changes) {
            if (changes.inputModel && changes.inputModel.currentValue !== changes.inputModel.previousValue) {
                this.formBuilt = false;
            }
            if (changes.inputBuilderDefinition &&
                changes.inputBuilderDefinition.currentValue !== changes.inputBuilderDefinition.previousValue) {
                this.formBuilt = false;
            }
            this.buildForm();
        };
        InputBuilderComponent.prototype.decorateInputModel = function () {
            // Add in standard Values
            var currentUser = this.authQuery.getValue().userDetails;
            var now = new Date();
            this.clonedInputModel['now'] = now;
            this.clonedInputModel['zuluDate'] = new Date(Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds()));
            this.clonedInputModel['userId'] = currentUser.userId;
        };
        InputBuilderComponent.prototype.ngOnInit = function () {
            this.maxFileSize = this.appSettingsQuery.hasEntity(models.AppSettings.maximumFileSize)
                ? this.appSettingsQuery.getEntity(models.AppSettings.maximumFileSize).value
                : 999999;
            this.allowedFileTypes = this.appSettingsQuery.hasEntity(models.AppSettings.allowedFileTypes)
                ? this.appSettingsQuery.getEntity(models.AppSettings.allowedFileTypes).value
                : '';
        };
        InputBuilderComponent.prototype.getContainerClass = function (inputDetail) {
            return inputDetail.help ? 'p-col-11' : 'p-col-12';
        };
        InputBuilderComponent.prototype.attachFiles = function (event, input) {
            var e_1, _a;
            var _this = this;
            if (this.inputBuilderDefinition.loadFileContent) {
                if (event.files && event.files.length > 0) {
                    var _loop_1 = function (file) {
                        var fileReader = new FileReader();
                        fileReader.onload = function () {
                            // this 'text' is the content of the file
                            _this.fileContent = fileReader.result.toString();
                            _this.fileAttached.emit(_this.fileContent);
                        };
                        fileReader.readAsText(file);
                    };
                    try {
                        for (var _b = __values(event.files), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var file = _c.value;
                            _loop_1(file);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
            }
            else {
                this.fieldChanged(input, event.files[0]);
            }
        };
        InputBuilderComponent.prototype.searchAutoComplete = function ($event, input) {
            var _this = this;
            this.loadDataSource(input, $event.query).subscribe(function (data) {
                _this.dataSourceLookup[input.name] = data.referenceValueItems;
                setTimeout(function () {
                    _this.ref.detectChanges();
                }, 50);
            });
        };
        InputBuilderComponent.prototype.getDefaultValue = function (value) {
            switch (value) {
                case 'today':
                case 'now':
                    return models.ZuluDateHelper.getGMTDate(new Date());
                    break;
                case 'yesterday': {
                    var now = new Date();
                    return models.ZuluDateHelper.getGMTDate(new Date(now.setDate(now.getDate() - 1)));
                    break;
                }
                case 'tomorrow': {
                    var now = new Date();
                    return models.ZuluDateHelper.getGMTDate(new Date(now.setDate(now.getDate() + 1)));
                    break;
                }
                default:
                    return value;
                    break;
            }
        };
        InputBuilderComponent.prototype.buildForm = function () {
            var e_2, _a, e_3, _b;
            var _this = this;
            if (this.formBuilt || !this.inputBuilderDefinition || !this.inputModel) {
                return;
            }
            this.formBuilt = true;
            // Clone our inputModel
            this.clonedInputModel = Object.assign({}, this.inputModel);
            this.decorateInputModel();
            // Default to full width (changes if help found)
            this.containerClass = 'p-col-12';
            if (this.inputBuilderDefinition.orientation === "horizontal" /* Horizontal */ ||
                this.inputBuilderDefinition.inputLocation === "inline" /* INLINE */) {
                if (this.inputBuilderDefinition.columnCount > 0 && this.inputBuilderDefinition.columnCount < 5) {
                    var colSize = 12 / this.inputBuilderDefinition.columnCount;
                    this.controlStyle = "p-col-" + colSize;
                }
            }
            else {
                this.controlStyle = 'p-col-12';
            }
            var formGroup = {};
            var localModel = {};
            var asyncGets = [];
            // Always have one to run
            asyncGets.push(rxjs.of(new models.ReferenceValue()));
            if (this.inputBuilderDefinition.inputDetails) {
                this.filteredInputDetails = this.authService.filterItemsByRole(this.inputBuilderDefinition.inputDetails);
                var _loop_2 = function (inputDetail) {
                    // Get value from model and apply to new FormControl
                    var inputValue = null;
                    if (models.ObjectPathHelper.get(this_1.clonedInputModel, inputDetail.name)) {
                        // If we have a passed value in the model, set the control value to this
                        inputValue = this_1.parseValue(inputDetail, models.ObjectPathHelper.get(this_1.clonedInputModel, inputDetail.name));
                    }
                    else if (inputDetail.value) {
                        // If we have a value passed in the Input definition set the control value to this.
                        inputValue = this_1.getDefaultValue(inputDetail.value);
                        models.ObjectPathHelper.set(this_1.clonedInputModel, inputDetail.name, inputValue);
                    }
                    else {
                        // This ensures that the property is set if not passed in
                        models.ObjectPathHelper.set(this_1.clonedInputModel, inputDetail.name, null);
                    }
                    var formControl = new i3.FormControl(inputValue, this_1.mapValidators(inputDetail)); // Validators passed here too
                    // Readonly
                    if (inputDetail.readonly) {
                        formControl.disable();
                    }
                    // Remember for dependecy check in a mo
                    models.ObjectPathHelper.set(localModel, inputDetail.name, inputValue);
                    if (inputDetail.type !== models.InputTypes.search) {
                        formControl.valueChanges.subscribe(function (changes) {
                            _this.fieldChanged(inputDetail, changes);
                        });
                    }
                    else {
                        // Handle debounce for search boxes
                        formControl.valueChanges
                            .pipe(operators.debounceTime(500), operators.distinctUntilChanged(), operators.tap(function (text) {
                            _this.fieldChanged(inputDetail, text);
                        }))
                            .subscribe();
                    }
                    formGroup[inputDetail.name] = formControl;
                    if (inputDetail['datasourceItems'] && inputDetail['datasourceItems'].length > 0) {
                        // Pre loaded datasourceItems
                        this_1.dataSourceLookup[inputDetail.name] = inputDetail['datasourceItems'];
                        this_1.manipulateValuesToObjects(formControl, inputDetail, inputValue);
                    }
                    else if (inputDetail.type !== models.InputTypes.autocomplete &&
                        inputDetail.hasOwnProperty('referenceValueName') &&
                        inputDetail.referenceValueName) {
                        // If Datasource, get the values
                        // Do we need a seed value
                        var seed = '';
                        if (inputDetail.referenceValueSeedDependency) {
                            seed = this_1.clonedInputModel[inputDetail.referenceValueSeedDependency];
                        }
                        asyncGets.push(this_1.loadDataSource(inputDetail, seed).pipe(operators.tap(function (data) {
                            _this.dataSourceLookup[inputDetail.name] = data.referenceValueItems;
                            _this.manipulateValuesToObjects(formControl, inputDetail, inputValue);
                        })));
                    }
                };
                var this_1 = this;
                try {
                    for (var _c = __values(this.filteredInputDetails), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var inputDetail = _d.value;
                        _loop_2(inputDetail);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
                try {
                    // Now re-loop notifying any dependencies
                    for (var _e = __values(this.filteredInputDetails), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var inputDetail = _f.value;
                        this.checkForDependencies(inputDetail, localModel[inputDetail.name]);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            this.formRendered$ = rxjs.forkJoin(asyncGets);
            this.formRendered$.subscribe(function (results) {
                console.log('Form rendering');
                _this.form = new i3.FormGroup(formGroup);
            });
            var formValidators = [];
            if (this.inputBuilderDefinition.customValidators) {
                this.inputBuilderDefinition.customValidators.forEach(function (validator) {
                    formValidators.push({});
                });
            }
            this.form = new i3.FormGroup(formGroup, formValidators);
        };
        InputBuilderComponent.prototype.manipulateValuesToObjects = function (formControl, inputDetail, inputValue) {
            if (inputDetail.type === models.InputTypes.multiselect) {
                if (inputValue) {
                    var foundValues_1 = this.dataSourceLookup[inputDetail.name].filter(function (ds) { return inputValue.includes(ds.value); });
                    setTimeout(function (_) {
                        formControl.setValue(foundValues_1, {
                            onlySelf: true,
                            emitEvent: false
                        });
                    }, 10);
                }
            }
            else {
                // Now we have the values, find the ReferenceValue that matches the inputValue from above
                if (this.clonedInputModel[inputDetail.name] && this.dataSourceLookup[inputDetail.name]) {
                    if (inputValue) {
                        var foundInputValue_1;
                        if (inputValue === 'first') {
                            foundInputValue_1 = this.dataSourceLookup[inputDetail.name][0];
                        }
                        else {
                            foundInputValue_1 = this.dataSourceLookup[inputDetail.name] // tslint:disable-next-line:triple-equals
                                .find(function (ds) { return ds.value && ds.value.toString() == inputValue.toString(); }); // Full on corecion
                        }
                        if (foundInputValue_1) {
                            setTimeout(function (_) {
                                formControl.setValue(foundInputValue_1, {
                                    onlySelf: true,
                                    emitEvent: false
                                });
                            }, 10);
                        }
                    }
                }
            }
        };
        InputBuilderComponent.prototype.parseValue = function (inputDetail, value) {
            switch (inputDetail.type) {
                case models.InputTypes.checkbox:
                case models.InputTypes.switch: {
                    return value.toString() === 'true' || value.toString() === 'True' || value.toString() === '1';
                }
                case models.InputTypes.number:
                case models.InputTypes.rating:
                case models.InputTypes.spinner: {
                    return Number(value);
                }
                case models.InputTypes.date:
                case models.InputTypes.datetime:
                case models.InputTypes.time: {
                    var valueAsDate = new Date(value);
                    if (inputDetail.forceUTC) {
                        return models.ZuluDateHelper.getGMTDate(valueAsDate);
                    }
                    else {
                        return valueAsDate;
                    }
                }
            }
            // Default just pass back original
            return value;
        };
        InputBuilderComponent.prototype.fieldChanged = function (inputDetail, value) {
            var returnedValue;
            // If we are any 'Object' type input just return the object. Simples.
            if (inputDetail.type && inputDetail.type.endsWith('object')) {
                returnedValue = value;
            }
            else if (inputDetail.type === models.InputTypes.fileattach) {
                returnedValue = value;
            }
            else if ((inputDetail.type && inputDetail.type === models.InputTypes.date) ||
                inputDetail.type === models.InputTypes.datetime ||
                inputDetail.type === models.InputTypes.time) {
                if (inputDetail.forceUTC) {
                    returnedValue = models.ZuluDateHelper.setGMTDate(value);
                }
                else {
                    returnedValue = value;
                }
            }
            else if (inputDetail.type === models.InputTypes.spinner) {
                returnedValue = Number(value);
            }
            else if (inputDetail.type && inputDetail.type === models.InputTypes.multiselect) {
                // This is an array
                if (Array.isArray(value)) {
                    var asArray = value;
                    returnedValue = asArray.map(function (refVal) { return refVal.value; });
                }
                else {
                    returnedValue = [];
                }
            }
            else {
                if (value) {
                    returnedValue = value.toString();
                }
                else {
                    returnedValue = null;
                }
                if (value && value.hasOwnProperty('value')) {
                    returnedValue = value.value;
                }
                else {
                    returnedValue = value;
                }
            }
            // Update listeners
            this.valueUpdated.emit([inputDetail.name, returnedValue]);
            // Do We need to notify another input of this change?
            this.checkForDependencies(inputDetail, returnedValue);
            // Flatten out Objects to value
            var updatedModel = Object.assign({}, this.clonedInputModel);
            updatedModel[inputDetail.name] = returnedValue;
            // Tell subscribers we have changes
            this.modelUpdated.emit(updatedModel);
            this.clonedInputModel = updatedModel;
        };
        InputBuilderComponent.prototype.checkForDependencies = function (inputDetail, updatedValue) {
            var _this = this;
            this.filteredInputDetails.forEach(function (input) {
                if (_this.form &&
                    input.hasOwnProperty('referenceValueSeedDependency') &&
                    input.referenceValueSeedDependency &&
                    input.referenceValueSeedDependency === inputDetail.name) {
                    _this.loadDataSource(input, updatedValue, input.referenceValueChildLevel).subscribe(function (data) {
                        _this.dataSourceLookup[input.name] = data.referenceValueItems;
                        var formControl = _this.form.controls[inputDetail.name];
                        _this.manipulateValuesToObjects(formControl, inputDetail, formControl.value);
                    });
                }
            });
        };
        InputBuilderComponent.prototype.loadDataSource = function (inputDetail, seed, childDepth) {
            if (seed === void 0) { seed = ''; }
            if (childDepth === void 0) { childDepth = 0; }
            return this.refValuesService.getReferenceValue(inputDetail.referenceValueName, seed, childDepth);
        };
        InputBuilderComponent.prototype.mapValidators = function (inputDetail) {
            var formValidators = [];
            if (inputDetail) {
                // Required
                if (inputDetail.validateRequired) {
                    formValidators.push(i3.Validators.required);
                }
                // RequiredTrue
                if (inputDetail.validateRequiredTrue) {
                    formValidators.push(i3.Validators.requiredTrue);
                }
                // EMail
                if (inputDetail.validateEmail) {
                    formValidators.push(i3.Validators.email);
                }
                // Pattern
                if (inputDetail.validatePattern) {
                    formValidators.push(i3.Validators.pattern(inputDetail.validatePattern));
                }
                // Min Length
                if (inputDetail.validateMinLength) {
                    formValidators.push(i3.Validators.minLength(inputDetail.validateMinLength));
                    if (!inputDetail.validateMinLengthMessage) {
                        inputDetail.validateMinLengthMessage = inputDetail.label + " must be a minimum length of " + inputDetail.validateMinLength;
                    }
                }
                // Max Length
                if (inputDetail.validateMaxLength) {
                    formValidators.push(i3.Validators.maxLength(inputDetail.validateMaxLength));
                    if (!inputDetail.validateMaxLengthMessage) {
                        inputDetail.validateMaxLengthMessage = inputDetail.label + " must be a max length of " + inputDetail.validateMinLength;
                    }
                }
            }
            return formValidators;
        };
        return InputBuilderComponent;
    }());
    InputBuilderComponent.ɵfac = function InputBuilderComponent_Factory(t) { return new (t || InputBuilderComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.AppSettingsService), i0.ɵɵdirectiveInject(i1.AppSettingsQuery), i0.ɵɵdirectiveInject(i1.UserAuthenticationQuery), i0.ɵɵdirectiveInject(i1.ReferenceValuesService), i0.ɵɵdirectiveInject(i1.ComponentLoaderService), i0.ɵɵdirectiveInject(i1.UserAuthenticationBase)); };
    InputBuilderComponent.ɵcmp = i0.ɵɵdefineComponent({ type: InputBuilderComponent, selectors: [["ngs-input-builder"]], viewQuery: function InputBuilderComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0.ɵɵviewQuery(_c0$1, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropDownChildren = _t);
            }
        }, inputs: { inputBuilderDefinition: "inputBuilderDefinition", inputModel: "inputModel" }, outputs: { modelUpdated: "modelUpdated", valueUpdated: "valueUpdated", fileAttached: "fileAttached", okClicked: "okClicked", cancelClicked: "cancelClicked" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 3, consts: [["novalidate", "", "class", "p-grid ui-fluid", 3, "noPadding", "form-group", "formGroup", "ngSubmit", 4, "ngIf"], ["novalidate", "", 1, "p-grid", "ui-fluid", 3, "formGroup", "ngSubmit"], [3, "className", "noPadding", 4, "ngFor", "ngForOf"], ["class", "button-line", "class", "p-col-12", 4, "ngIf"], [3, "className"], [3, "ngSwitch", "className"], ["class", "p-float-label", 4, "ngSwitchCase"], [4, "ngSwitchCase"], ["appendTo", "body", "dataKey", "value", "field", "display", 3, "style", "tabindex", "dropdown", "formControlName", "suggestions", "placeholder", "completeMethod", 4, "ngSwitchCase"], ["class", "ui-inputgroup", 4, "ngSwitchCase"], ["class", "p-float-label", 4, "ngSwitchDefault"], ["class", "p-col-1", 4, "ngIf"], ["class", "ui-message ui-messages-error ui-corner-all", 4, "ngIf"], [1, "p-float-label"], ["class", "textInput", "type", "text", "pInputText", "", 3, "tabindex", "formControlName", "id", 4, "ngIf"], [3, "for"], ["type", "text", "pInputText", "", 1, "textInput", 3, "tabindex", "formControlName", "id"], ["class", "textInput", "type", "password", "pPassword", "", 3, "tabindex", "formControlName", "id", 4, "ngIf"], ["type", "password", "pPassword", "", 1, "textInput", 3, "tabindex", "formControlName", "id"], ["class", "textInput", "type", "email", "pInputText", "", 3, "tabindex", "formControlName", "id", 4, "ngIf"], ["type", "email", "pInputText", "", 1, "textInput", 3, "tabindex", "formControlName", "id"], ["type", "text", "pKeyFilter", "num", "pInputText", "", 1, "textInput", 3, "tabindex", "formControlName", "id"], [3, "tabindex", "formControlName", "id", "min", "max", "step"], [3, "tabindex", "mask", "id", "formControl"], [3, "tabindex", "id", "min", "max", "formControl"], ["pInputTextarea", "", 1, "textInput", 3, "tabindex", "rows", "placeholder", "formControlName"], ["binary", "true", 3, "tabindex", "label", "id", "formControl"], ["appendTo", "body", "showClear", "true", "dataKey", "value", "optionLabel", "display", 1, "dropdownInput", 3, "tabindex", "id", "options", "filter", "formControlName"], ["dropDown", ""], ["appendTo", "body", "showClear", "true", "optionLabel", "display", 1, "dropdownInput", 3, "id", "options", "filter", "tabindex", "formControlName"], ["appendTo", "body", "dataKey", "value", "field", "display", 3, "tabindex", "dropdown", "formControlName", "suggestions", "placeholder", "completeMethod"], [3, "tabindex", "id", "placeholder", "formControlName"], ["appendTo", "body", "optionLabel", "display", "dataKey", "value", 1, "multi-select", 3, "tabindex", "id", "filterPlaceHolder", "formControlName", "filter", "options"], [3, "tabindex", "id", "formControlName"], [1, "switch-label"], ["appendTo", "body", "showTime", "true", "hourFormat", "24", 3, "tabindex", "showButtonBar", "showIcon", "dateFormat", "formControlName", "id"], ["appendTo", "body", 3, "tabindex", "showButtonBar", "showIcon", "dateFormat", "formControlName", "id"], ["appendTo", "body", "timeOnly", "true", "showTime", "true", "hourFormat", "24", 3, "tabindex", "showButtonBar", "showIcon", "formControlName", "id"], [3, "tabindex", "options", "data"], ["customUpload", "true", "auto", "true", 3, "tabindex", "accept", "maxFileSize", "chooseLabel", "uploadHandler"], [1, "ui-inputgroup"], ["type", "text", "pInputText", "", 2, "width", "100%", 3, "tabindex", "formControlName", "id"], ["pButton", "", "type", "button", "icon", "ui-icon-search"], [1, "textInput", 3, "id"], ["type", "text", "pInputText", "", 3, "tabindex", "formControlName", "id"], [1, "p-col-1"], ["tooltipPosition", "bottom", 1, "fa", "ui-icon-info", "helpIcon", 3, "pTooltip"], [1, "ui-message", "ui-messages-error", "ui-corner-all"], [4, "ngIf"], [1, "p-col-12"], ["class", "button-container p-col-3", 4, "ngIf"], [1, "button-container", "p-col-3"], ["pButton", "", "type", "button", "iconPos", "left", 1, "p-button-info", 3, "icon", "label", "click"], ["pButton", "", "type", "button", "iconPos", "left", 1, "p-button-warning", 3, "icon", "label", "click"], ["pButton", "", "type", "submit", "iconPos", "left", 1, "p-button-success", 3, "icon", "label"]], template: function InputBuilderComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0.ɵɵtemplate(0, InputBuilderComponent_form_0_Template, 3, 7, "form", 0);
                i0.ɵɵpipe(1, "async");
            }
            if (rf & 2) {
                i0.ɵɵproperty("ngIf", i0.ɵɵpipeBind1(1, 1, ctx.formRendered$) && ctx.formBuilt && ctx.inputBuilderDefinition && ctx.filteredInputDetails);
            }
        }, directives: [i2.NgIf, i3.ɵangular_packages_forms_forms_y, i3.NgControlStatusGroup, i3.FormGroupDirective, i2.NgForOf, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i3.DefaultValueAccessor, i4.InputText, i3.NgControlStatus, i3.FormControlName, i5.Password, i6.KeyFilter, i7.Slider, i8.InputMask, i3.FormControlDirective, i9.Spinner, i10.InputTextarea, i11.Checkbox, i12.Dropdown, i13.AutoComplete, i14.Chips, i15.MultiSelect, i16.InputSwitch, i17.Calendar, i18.JsonEditorComponent, i19.FileUpload, i2$1.ButtonDirective, i21.Tooltip], pipes: [i2.AsyncPipe, i22.TranslatePipe], styles: [".small-label[_ngcontent-%COMP%]{font-size:12px}.textInput[_ngcontent-%COMP%]{width:100%}.switch-label[_ngcontent-%COMP%]{margin-left:16px}.inlineInputs[_ngcontent-%COMP%]{padding:0 3px 0 0!important}.multi-select[_ngcontent-%COMP%]{width:100%}.button-container[_ngcontent-%COMP%]{display:inline;margin-left:6px}"], changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0.ɵsetClassMetadata(InputBuilderComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'ngs-input-builder',
                        templateUrl: 'inputBuilder.component.html',
                        styleUrls: ['inputBuilder.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.AppSettingsService }, { type: i1.AppSettingsQuery }, { type: i1.UserAuthenticationQuery }, { type: i1.ReferenceValuesService }, { type: i1.ComponentLoaderService }, { type: i1.UserAuthenticationBase }]; }, { inputBuilderDefinition: [{
                    type: i0.Input
                }], inputModel: [{
                    type: i0.Input
                }], modelUpdated: [{
                    type: i0.Output
                }], valueUpdated: [{
                    type: i0.Output
                }], fileAttached: [{
                    type: i0.Output
                }], okClicked: [{
                    type: i0.Output
                }], cancelClicked: [{
                    type: i0.Output
                }], dropDownChildren: [{
                    type: i0.ViewChildren,
                    args: ['dropDown']
                }] });
    })();

    function InputBuilderPopupComponent_ngs_input_builder_5_Template(rf, ctx) {
        if (rf & 1) {
            var _r3_1 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "ngs-input-builder", 4);
            i0.ɵɵlistener("modelUpdated", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_modelUpdated_0_listener($event) { i0.ɵɵrestoreView(_r3_1); var ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.notifyChanged($event); })("okClicked", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_okClicked_0_listener($event) { i0.ɵɵrestoreView(_r3_1); var ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onOkClicked($event); })("cancelClicked", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_cancelClicked_0_listener() { i0.ɵɵrestoreView(_r3_1); var ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.onCancelClicked(); })("modelUpdated", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_modelUpdated_0_listener($event) { i0.ɵɵrestoreView(_r3_1); var ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.onModelUpdated($event); })("valueUpdated", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_valueUpdated_0_listener() { i0.ɵɵrestoreView(_r3_1); var ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onValueUpdated(); });
            i0.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0.ɵɵnextContext();
            i0.ɵɵproperty("inputBuilderDefinition", ctx_r1.inputBuilderDefinition)("inputModel", ctx_r1.inputModel);
        }
    }
    var InputBuilderPopupComponent = /** @class */ (function () {
        function InputBuilderPopupComponent(changeDetector) {
            var _this = this;
            this.changeDetector = changeDetector;
            this.modelUpdated = new i0.EventEmitter();
            this.valueUpdated = new i0.EventEmitter();
            this.okClicked = new i0.EventEmitter();
            this.cancelClicked = new i0.EventEmitter();
            this.styleValues = {
                overflow: 'visible'
            };
            this.mouseSubscription = rxjs.fromEvent(document.body, 'mousemove').subscribe(function (e) {
                if (_this.attachMouseClick) {
                    _this.screenWidth = window.innerWidth;
                    _this.mouseY = e['pageY'];
                    _this.mouseX = e['pageX'];
                    if (_this.setWidth) {
                        if (_this.mouseX + _this.setWidth > _this.screenWidth) {
                            _this.setLeft = _this.mouseX - _this.setWidth;
                        }
                        else {
                            _this.setLeft = _this.mouseX;
                        }
                        _this.setTop = _this.mouseY;
                    }
                    else {
                        _this.setLeft = _this.mouseX;
                        _this.setTop = _this.mouseY;
                    }
                    if (!_this.isShown) {
                        var newStyle = { overflow: 'visible', position: 'absolute' };
                        newStyle.top = _this.setTop + "px";
                        newStyle.left = _this.setLeft + "px";
                        _this.styleValues = newStyle;
                        _this.changeDetector.detectChanges();
                    }
                }
            });
        }
        InputBuilderPopupComponent.prototype.showPopup = function () {
            this.isShown = true;
            this.changeDetector.markForCheck();
        };
        InputBuilderPopupComponent.prototype.ngOnDestroy = function () {
            if (this.mouseSubscription) {
                this.mouseSubscription.unsubscribe();
            }
        };
        InputBuilderPopupComponent.prototype.notifyChanged = function (event) { };
        InputBuilderPopupComponent.prototype.onModelUpdated = function (model) {
            this.modelUpdated.emit(model);
        };
        InputBuilderPopupComponent.prototype.onValueUpdated = function () { };
        InputBuilderPopupComponent.prototype.onOkClicked = function (model) {
            this.okClicked.emit(model);
        };
        InputBuilderPopupComponent.prototype.onCancelClicked = function () {
            this.cancelClicked.emit(null);
            this.isShown = false;
            this.changeDetector.markForCheck();
        };
        return InputBuilderPopupComponent;
    }());
    InputBuilderPopupComponent.ɵfac = function InputBuilderPopupComponent_Factory(t) { return new (t || InputBuilderPopupComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    InputBuilderPopupComponent.ɵcmp = i0.ɵɵdefineComponent({ type: InputBuilderPopupComponent, selectors: [["ngs-input-builder-popup"]], inputs: { inputBuilderDefinition: "inputBuilderDefinition", attachMouseClick: "attachMouseClick", inputModel: "inputModel", setWidth: "setWidth", setTop: "setTop", setLeft: "setLeft" }, outputs: { modelUpdated: "modelUpdated", valueUpdated: "valueUpdated", okClicked: "okClicked", cancelClicked: "cancelClicked" }, decls: 6, vars: 7, consts: [[3, "visible", "visibleChange"], [1, "ui-fluid"], ["popupContainer", ""], [3, "inputBuilderDefinition", "inputModel", "modelUpdated", "okClicked", "cancelClicked", "valueUpdated", 4, "ngIf"], [3, "inputBuilderDefinition", "inputModel", "modelUpdated", "okClicked", "cancelClicked", "valueUpdated"]], template: function InputBuilderPopupComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0.ɵɵelementStart(0, "p-dialog", 0);
                i0.ɵɵlistener("visibleChange", function InputBuilderPopupComponent_Template_p_dialog_visibleChange_0_listener($event) { return ctx.isShown = $event; });
                i0.ɵɵelementStart(1, "p-header");
                i0.ɵɵtext(2);
                i0.ɵɵelementEnd();
                i0.ɵɵelementStart(3, "div", 1, 2);
                i0.ɵɵtemplate(5, InputBuilderPopupComponent_ngs_input_builder_5_Template, 1, 2, "ngs-input-builder", 3);
                i0.ɵɵelementEnd();
                i0.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0.ɵɵstyleMap(ctx.styleValues);
                i0.ɵɵproperty("visible", ctx.isShown);
                i0.ɵɵadvance(2);
                i0.ɵɵtextInterpolate1(" ", ctx.inputBuilderDefinition == null ? null : ctx.inputBuilderDefinition.title, " ");
                i0.ɵɵadvance(1);
                i0.ɵɵstyleProp("width", ctx.setWidth, "px");
                i0.ɵɵadvance(2);
                i0.ɵɵproperty("ngIf", ctx.isShown);
            }
        }, directives: [i1$1.Dialog, i2$2.Header, i2.NgIf, InputBuilderComponent], styles: [""], changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0.ɵsetClassMetadata(InputBuilderPopupComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'ngs-input-builder-popup',
                        templateUrl: 'inputBuilderPopup.component.html',
                        styleUrls: ['inputBuilderPopup.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { inputBuilderDefinition: [{
                    type: i0.Input
                }], attachMouseClick: [{
                    type: i0.Input
                }], inputModel: [{
                    type: i0.Input
                }], setWidth: [{
                    type: i0.Input
                }], setTop: [{
                    type: i0.Input
                }], setLeft: [{
                    type: i0.Input
                }], modelUpdated: [{
                    type: i0.Output
                }], valueUpdated: [{
                    type: i0.Output
                }], okClicked: [{
                    type: i0.Output
                }], cancelClicked: [{
                    type: i0.Output
                }] });
    })();

    var InputBuilderModule = /** @class */ (function () {
        function InputBuilderModule() {
        }
        InputBuilderModule.forRoot = function () {
            return {
                ngModule: InputBuilderModule,
            };
        };
        return InputBuilderModule;
    }());
    InputBuilderModule.ɵmod = i0.ɵɵdefineNgModule({ type: InputBuilderModule });
    InputBuilderModule.ɵinj = i0.ɵɵdefineInjector({ factory: function InputBuilderModule_Factory(t) { return new (t || InputBuilderModule)(); }, imports: [[
                i2.CommonModule,
                i1.CoreModule,
                i13.AutoCompleteModule,
                i3.FormsModule,
                i3.ReactiveFormsModule,
                i1$1.DialogModule,
                i2$2.SharedModule,
                editor.EditorModule,
                listbox.ListboxModule,
                selectbutton.SelectButtonModule,
                colorpicker.ColorPickerModule,
                i7.SliderModule,
                i14.ChipsModule,
                i3.ReactiveFormsModule,
                i16.InputSwitchModule,
                i4.InputTextModule,
                i8.InputMaskModule,
                i9.SpinnerModule,
                i17.CalendarModule,
                tristatecheckbox.TriStateCheckboxModule,
                i10.InputTextareaModule,
                i11.CheckboxModule,
                radiobutton.RadioButtonModule,
                i12.DropdownModule,
                i5.PasswordModule,
                rating.RatingModule,
                i6.KeyFilterModule,
                i15.MultiSelectModule,
                togglebutton.ToggleButtonModule,
                i21.TooltipModule,
                i18.NgJsonEditorModule,
                i19.FileUploadModule,
                i22.TranslateModule.forChild(),
            ]] });
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(InputBuilderModule, { declarations: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent], imports: [i2.CommonModule,
                i1.CoreModule,
                i13.AutoCompleteModule,
                i3.FormsModule,
                i3.ReactiveFormsModule,
                i1$1.DialogModule,
                i2$2.SharedModule,
                editor.EditorModule,
                listbox.ListboxModule,
                selectbutton.SelectButtonModule,
                colorpicker.ColorPickerModule,
                i7.SliderModule,
                i14.ChipsModule,
                i3.ReactiveFormsModule,
                i16.InputSwitchModule,
                i4.InputTextModule,
                i8.InputMaskModule,
                i9.SpinnerModule,
                i17.CalendarModule,
                tristatecheckbox.TriStateCheckboxModule,
                i10.InputTextareaModule,
                i11.CheckboxModule,
                radiobutton.RadioButtonModule,
                i12.DropdownModule,
                i5.PasswordModule,
                rating.RatingModule,
                i6.KeyFilterModule,
                i15.MultiSelectModule,
                togglebutton.ToggleButtonModule,
                i21.TooltipModule,
                i18.NgJsonEditorModule,
                i19.FileUploadModule, i22.TranslateModule], exports: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent] });
    })();
    /*@__PURE__*/ (function () {
        i0.ɵsetClassMetadata(InputBuilderModule, [{
                type: i0.NgModule,
                args: [{
                        declarations: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent],
                        imports: [
                            i2.CommonModule,
                            i1.CoreModule,
                            i13.AutoCompleteModule,
                            i3.FormsModule,
                            i3.ReactiveFormsModule,
                            i1$1.DialogModule,
                            i2$2.SharedModule,
                            editor.EditorModule,
                            listbox.ListboxModule,
                            selectbutton.SelectButtonModule,
                            colorpicker.ColorPickerModule,
                            i7.SliderModule,
                            i14.ChipsModule,
                            i3.ReactiveFormsModule,
                            i16.InputSwitchModule,
                            i4.InputTextModule,
                            i8.InputMaskModule,
                            i9.SpinnerModule,
                            i17.CalendarModule,
                            tristatecheckbox.TriStateCheckboxModule,
                            i10.InputTextareaModule,
                            i11.CheckboxModule,
                            radiobutton.RadioButtonModule,
                            i12.DropdownModule,
                            i5.PasswordModule,
                            rating.RatingModule,
                            i6.KeyFilterModule,
                            i15.MultiSelectModule,
                            togglebutton.ToggleButtonModule,
                            i21.TooltipModule,
                            i18.NgJsonEditorModule,
                            i19.FileUploadModule,
                            i22.TranslateModule.forChild(),
                        ],
                        exports: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent],
                    }]
            }], null, null);
    })();

    /*
     * Public API Surface of inputbuilder
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.EditableTitleComponent = EditableTitleComponent;
    exports.InputBuilderComponent = InputBuilderComponent;
    exports.InputBuilderModule = InputBuilderModule;
    exports.InputBuilderPopupComponent = InputBuilderPopupComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngscaffolding-inputbuilder.umd.js.map
