{"version":3,"file":"ngscaffolding-inputbuilder.js","sources":["../projects/ngscaffolding/inputbuilder/src/lib/components/editableTitle/editableTitle.component.html","../projects/ngscaffolding/inputbuilder/src/lib/components/editableTitle/editableTitle.component.ts","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilder/inputBuilder.component.html","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilder/inputBuilder.component.ts","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilderPopup/inputBuilderPopup.component.html","../../projects/ngscaffolding/inputbuilder/src/lib/inputBuilderPopup/inputBuilderPopup.component.ts","../../../projects/ngscaffolding/inputbuilder/src/lib/inputbuilder.module.ts","../../../../projects/ngscaffolding/inputbuilder/src/public-api.ts","../../../../projects/ngscaffolding/inputbuilder/src/ngscaffolding-inputbuilder.ts"],"sourcesContent":["<span *ngIf=\"!isEditing\" class=\"title-display\" (click)=\"mouseClicked()\" (mouseleave)=\"mouseLeave()\" (mouseenter)=\"mouseOver()\">{{title}}</span>\r\n\r\n<button *ngIf=\"displayIcon\" pButton class=\"p-button-rounded p-button-info p-button-text p-mr-2 p-mb-2\" type=\"button\" icon=\"pi pi-pencil\"></button>\r\n\r\n<input #inputTitle class=\"large-edit\" *ngIf=\"isEditing\" type=\"text\" (blur)=\"isEditing=false\" [(ngModel)]=\"editTitle\" (change)=\"textChanged()\" pInputText>\r\n","import { Component, Inject, forwardRef, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngs-editable-title',\r\n  templateUrl: 'editableTitle.component.html',\r\n  styleUrls: ['editableTitle.component.scss']\r\n})\r\nexport class EditableTitleComponent implements OnChanges {\r\n  @ViewChild('inputTitle', {static: false}) inputTitleElement: ElementRef;\r\n  @Input() title: string;\r\n  @Input() configObject: any;\r\n  @Input() readOnly: boolean;\r\n\r\n  @Output() titleChanged = new EventEmitter<string>();\r\n\r\n  editTitle: string;\r\n  displayIcon = false;\r\n  isEditing = false;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.title) {\r\n      this.editTitle = changes.title.currentValue;\r\n      this.applyObject(changes.configObject);\r\n    }\r\n    if (changes.configObject) {\r\n      this.applyObject(changes.configObject);\r\n    }\r\n  }\r\n\r\n  // update Title with string replacement @@key## style\r\n  private applyObject(config: any) {\r\n    let newTitle = this.title;\r\n\r\n    if (config) {\r\n      for (const key in config) {\r\n        if (config.hasOwnProperty(key)) {\r\n          newTitle = newTitle.replace(`@@${key}##`, config[key]);\r\n        }\r\n      }\r\n      this.editTitle = newTitle;\r\n    }\r\n  }\r\n\r\n  mouseOver() {\r\n    if (!this.readOnly) {\r\n      this.displayIcon = true;\r\n    }\r\n  }\r\n  mouseLeave() {\r\n    this.displayIcon = false;\r\n  }\r\n  mouseClicked() {\r\n    if (!this.readOnly) {\r\n      this.isEditing = true;\r\n      this.displayIcon = false;\r\n    }\r\n    setTimeout(() => {\r\n      // this will make the execution after the above boolean has changed\r\n      this.inputTitleElement.nativeElement.focus();\r\n      this.inputTitleElement.nativeElement.select();\r\n    }, 0);\r\n  }\r\n\r\n  textChanged() {\r\n    this.titleChanged.emit(this.editTitle);\r\n  }\r\n}\r\n","<form\r\n    novalidate\r\n    *ngIf=\"(formRendered$ | async) && formBuilt && inputBuilderDefinition && filteredInputDetails\"\r\n    [class.noPadding]=\"inputBuilderDefinition.inputLocation === 'inline'\"\r\n    [class.form-group]=\"inputBuilderDefinition.inputLocation !== 'inline'\"\r\n    class=\"p-grid ui-fluid\"\r\n    (ngSubmit)=\"onSubmit(form)\"\r\n    [formGroup]=\"form\"\r\n>\r\n    <div\r\n        [className]=\"controlStyle\"\r\n        [class.noPadding]=\"inputBuilderDefinition.inputLocation === 'inline'\"\r\n        *ngFor=\"let input of filteredInputDetails\"\r\n    >\r\n        <div [ngSwitch]=\"input.type\" [className]=\"getContainerClass(input)\">\r\n            <!-- null === Blank -->\r\n            <span *ngSwitchCase=\"'null'\" class=\"p-float-label\"> </span>\r\n\r\n            <!-- textbox -->\r\n            <span *ngSwitchCase=\"'textbox'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    *ngIf=\"!input.mask\"\r\n                    type=\"text\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pInputText\r\n                />\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- password -->\r\n            <span *ngSwitchCase=\"'password'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    *ngIf=\"!input.mask\"\r\n                    type=\"password\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pPassword\r\n                />\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- email -->\r\n            <span *ngSwitchCase=\"'email'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    *ngIf=\"!input.mask\"\r\n                    type=\"email\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pInputText\r\n                />\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- keyfilter/number -->\r\n            <span *ngSwitchCase=\"'number'\" class=\"p-float-label\">\r\n                <input\r\n                    [tabindex]=\"input.tabindex\"\r\n                    class=\"textInput\"\r\n                    type=\"text\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    pKeyFilter=\"num\"\r\n                    pInputText\r\n                />\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- slider -->\r\n            <span *ngSwitchCase=\"'slider'\" class=\"p-float-label\">\r\n                <p-slider\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                    [min]=\"input.min\"\r\n                    [max]=\"input.max\"\r\n                    [step]=\"input.step\"\r\n                ></p-slider>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Mask -->\r\n            <span *ngSwitchCase=\"'mask'\">\r\n                <p-inputMask\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [mask]=\"input.mask\"\r\n                    [id]=\"input.name\"\r\n                    [formControl]=\"form.controls[input.name]\"\r\n                ></p-inputMask>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Spinner -->\r\n            <span *ngSwitchCase=\"'spinner'\">\r\n                <p-spinner\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [id]=\"input.name\"\r\n                    [min]=\"input.min\"\r\n                    [max]=\"input.max\"\r\n                    [formControl]=\"form.controls[input.name]\"\r\n                ></p-spinner>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- TextArea -->\r\n            <span *ngSwitchCase=\"'textarea'\" class=\"p-float-label\">\r\n                <textarea\r\n                    class=\"textInput\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [rows]=\"input.rows\"\r\n                    [placeholder]=\"input.label\"\r\n                    pInputTextarea\r\n                    [formControlName]=\"input.name\"\r\n                ></textarea>\r\n            </span>\r\n\r\n            <!-- Checkbox -->\r\n            <span *ngSwitchCase=\"'checkbox'\">\r\n                <p-checkbox\r\n                    [tabindex]=\"input.tabindex\"\r\n                    binary=\"true\"\r\n                    [label]=\"input.label\"\r\n                    [id]=\"input.name\"\r\n                    [formControl]=\"form.controls[input.name]\"\r\n                >\r\n                </p-checkbox>\r\n            </span>\r\n\r\n            <!-- Simple DropDown -->\r\n            <span class=\"p-float-label\" *ngSwitchCase=\"'dropdown'\">\r\n                <p-dropdown\r\n                    [style]=\"{ width: '100%' }\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    appendTo=\"body\"\r\n                    class=\"dropdownInput\"\r\n                    [id]=\"input.name\"\r\n                    showClear=\"true\"\r\n                    [options]=\"dataSourceLookup[input.name]\"\r\n                    [filter]=\"input.selectFilter\"\r\n                    dataKey=\"value\"\r\n                    optionLabel=\"display\"\r\n                    [formControlName]=\"input.name\"\r\n                    #dropDown\r\n                ></p-dropdown>\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- DropDown Returns Object -->\r\n            <span *ngSwitchCase=\"'dropdownobject'\" class=\"p-float-label\" >\r\n                <p-dropdown\r\n                    appendTo=\"body\"\r\n                    [style]=\"{ width: '100%' }\"\r\n                    class=\"dropdownInput\"\r\n                    [id]=\"input.name\"\r\n                    [options]=\"dataSourceLookup[input.name]\"\r\n                    [filter]=\"input.selectFilter\"\r\n                    showClear=\"true\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    optionLabel=\"display\"\r\n                    [formControlName]=\"input.name\"\r\n                    #dropDown\r\n                ></p-dropdown>\r\n                <label [for]=\"input.name\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- AutoComplete -->\r\n            <p-autoComplete\r\n                *ngSwitchCase=\"'autocomplete'\"\r\n                [style]=\"{ width: '100%' }\"\r\n                appendTo=\"body\"\r\n                dataKey=\"value\"\r\n                [tabindex]=\"input.tabindex\"\r\n                field=\"display\"\r\n                [dropdown]=\"true\"\r\n                [formControlName]=\"input.name\"\r\n                [suggestions]=\"dataSourceLookup[input.name]\"\r\n                (completeMethod)=\"searchAutoComplete($event, input)\"\r\n                [placeholder]=\"getLabel(input)\"\r\n            ></p-autoComplete>\r\n\r\n            <!-- Chips -->\r\n            <span *ngSwitchCase=\"'chips'\" class=\"p-float-label\">\r\n                <p-chips [tabindex]=\"input.tabindex\" [id]=\"input.name\" [placeholder]=\"input.label\" [formControlName]=\"input.name\"></p-chips>\r\n            </span>\r\n\r\n            <!-- multiselect -->\r\n            <span *ngSwitchCase=\"'multiselect'\" class=\"p-float-label\">\r\n                <!-- <label class=\"small-label\" [for]=\"input.name\">{{getLabel(input)}}</label> -->\r\n                <p-multiSelect\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [id]=\"input.name\"\r\n                    class=\"multi-select\"\r\n                    [filterPlaceHolder]=\"input.name\"\r\n                    [formControlName]=\"input.name\"\r\n                    [filter]=\"false\"\r\n                    appendTo=\"body\"\r\n                    optionLabel=\"display\"\r\n                    dataKey=\"value\"\r\n                    [options]=\"dataSourceLookup[input.name]\"\r\n                ></p-multiSelect>\r\n            </span>\r\n\r\n            <!-- InputSwitch -->\r\n            <span *ngSwitchCase=\"'switch'\">\r\n                <p-inputSwitch [tabindex]=\"input.tabindex\" [id]=\"input.name\" [formControlName]=\"input.name\"> </p-inputSwitch>\r\n                <label class=\"switch-label\">{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- DateTime -->\r\n            <span *ngSwitchCase=\"'datetime'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    [tabindex]=\"input.tabindex\"\r\n                    appendTo=\"body\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [dateFormat]=\"appSettings.getString('inputDateFormat') | async\"\r\n                    showTime=\"true\"\r\n                    hourFormat=\"24\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- DateTime UTC -->\r\n            <span *ngSwitchCase=\"'datetimeUTC'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    [tabindex]=\"input.tabindex\"\r\n                    appendTo=\"body\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [dateFormat]=\"appSettings.getString('inputDateFormat') | async\"\r\n                    showTime=\"true\"\r\n                    hourFormat=\"24\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Date -->\r\n            <span *ngSwitchCase=\"'date'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    appendTo=\"body\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [dateFormat]=\"appSettings.getString('inputDateFormat') | async\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- Time -->\r\n            <span *ngSwitchCase=\"'time'\" class=\"p-float-label\">\r\n                <p-calendar\r\n                    appendTo=\"body\"\r\n                    [tabindex]=\"input.tabindex\"\r\n                    timeOnly=\"true\"\r\n                    showTime=\"true\"\r\n                    [showButtonBar]=\"appSettings.getBoolean('inputDateShowButtonBar') | async\"\r\n                    hourFormat=\"24\"\r\n                    [showIcon]=\"appSettings.getBoolean('inputShowCalendarIcon') | async\"\r\n                    [formControlName]=\"input.name\"\r\n                    [id]=\"input.name\"\r\n                >\r\n                </p-calendar>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- JSon Edit -->\r\n            <span *ngSwitchCase=\"'json'\" class=\"p-float-label\">\r\n                <json-editor [tabindex]=\"input.tabindex\" [options]=\"editorOptions\" [data]=\"input.value\"></json-editor>\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n\r\n            <!-- File Attachment -->\r\n            <span *ngSwitchCase=\"'fileattach'\" class=\"p-float-label\">\r\n                <p-fileUpload\r\n                    [tabindex]=\"input.tabindex\"\r\n                    customUpload=\"true\"\r\n                    [accept]=\"input.accept || this.allowedFileTypes\"\r\n                    [maxFileSize]=\"input.maxFileSize || this.maxFileSize\"\r\n                    chooseLabel=\"{{ 'Choose File' | translate }}\"\r\n                    auto=\"true\"\r\n                    (uploadHandler)=\"attachFiles($event, input)\"\r\n                ></p-fileUpload>\r\n            </span>\r\n\r\n            <!-- Search Text -->\r\n            <div *ngSwitchCase=\"'search'\" class=\"ui-inputgroup\">\r\n                <span class=\"p-float-label\">\r\n                    <input style=\"width: 100%;\" type=\"text\" [tabindex]=\"input.tabindex\" [formControlName]=\"input.name\" [id]=\"input.name\" pInputText />\r\n                    <label>{{ getLabel(input) }}</label>\r\n                </span>\r\n                <button pButton type=\"button\" icon=\"ui-icon-search\"></button>\r\n            </div>\r\n\r\n            <!-- Dynamic -->\r\n            <span *ngSwitchCase=\"'dynamic'\" class=\"p-float-label\">\r\n                <div class=\"textInput\" [id]=\"input.name\">{{ loadComponent(input) }}</div>\r\n            </span>\r\n\r\n            <!-- DEFUALT textbox -->\r\n            <span *ngSwitchDefault class=\"p-float-label\">\r\n                <input type=\"text\" [tabindex]=\"input.tabindex\" [formControlName]=\"input.name\" [id]=\"input.name\" pInputText />\r\n                <label>{{ getLabel(input) }}</label>\r\n            </span>\r\n        </div>\r\n\r\n        <!-- Help text here -->\r\n        <span *ngIf=\"input.help\" class=\"p-col-1\">\r\n            <i class=\"fa ui-icon-info helpIcon\" pTooltip=\"{{ input.help }}\" tooltipPosition=\"bottom\"></i>\r\n        </span>\r\n\r\n        <div\r\n            class=\"ui-message ui-messages-error ui-corner-all\"\r\n            *ngIf=\"form.get(input.name)?.invalid && (form.get(input.name)?.dirty || form.get(input.name)?.touched || formSubmitted)\"\r\n        >\r\n            <div *ngIf=\"form.get(input.name).errors.required\">\r\n                {{ input.validateRequired }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.requiredTrue\">\r\n                {{ input.validateRequiredTrue }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.email\">\r\n                {{ input.validateEmail }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.pattern\">\r\n                {{ input.validatePatternMessage }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.minlength\">\r\n                {{ input.validateMinLengthMessage }}\r\n            </div>\r\n            <div *ngIf=\"form.get(input.name).errors.maxlength\">\r\n                {{ input.validateMaxLengthMessage }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- [className]=\"controlStyle\" -->\r\n    <div\r\n        class=\"button-line\"\r\n        class=\"p-col-12\"\r\n        *ngIf=\"inputBuilderDefinition.customButtonText || inputBuilderDefinition.cancelButtonText || inputBuilderDefinition.okButtonText\"\r\n    >\r\n        <div class=\"button-container p-col-3\" *ngIf=\"inputBuilderDefinition.customButtonText\">\r\n            <button\r\n                pButton\r\n                type=\"button\"\r\n                (click)=\"onCustom()\"\r\n                class=\"p-button-info\"\r\n                icon=\"{{ inputBuilderDefinition.customButtonIcon }}\"\r\n                iconPos=\"left\"\r\n                label=\"{{ inputBuilderDefinition.customButtonText }}\"\r\n            ></button>\r\n        </div>\r\n        <div class=\"button-container p-col-3\" *ngIf=\"inputBuilderDefinition.cancelButtonText\">\r\n            <button\r\n                pButton\r\n                type=\"button\"\r\n                (click)=\"onCancel()\"\r\n                class=\"p-button-warning\"\r\n                icon=\"{{ inputBuilderDefinition.cancelButtonIcon }}\"\r\n                iconPos=\"left\"\r\n                label=\"{{ inputBuilderDefinition.cancelButtonText }}\"\r\n            ></button>\r\n        </div>\r\n        <div class=\"button-container p-col-3\" *ngIf=\"inputBuilderDefinition.okButtonText\">\r\n            <button\r\n                pButton\r\n                type=\"submit\"\r\n                class=\"p-button-success\"\r\n                icon=\"{{ inputBuilderDefinition.okButtonIcon }}\"\r\n                iconPos=\"left\"\r\n                label=\"{{ inputBuilderDefinition.okButtonText }}\"\r\n            ></button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnInit,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    ViewChildren,\r\n    QueryList,\r\n    ElementRef\r\n} from '@angular/core';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\r\n\r\nimport { Dropdown } from 'primeng/dropdown';\r\nimport { tap, map, switchMap, filter, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport {\r\n    AppSettingsService,\r\n    AppSettingsQuery,\r\n    UserAuthenticationQuery,\r\n    ReferenceValuesService,\r\n    ComponentLoaderService,\r\n    UserAuthenticationBase\r\n} from '@ngscaffolding/core';\r\nimport {\r\n    InputBuilderDefinition,\r\n    InputDetail,\r\n    InputDynamic,\r\n    AppSettings,\r\n    InputDetailReferenceValues,\r\n    ZuluDateHelper,\r\n    OrientationValues,\r\n    InputLocations,\r\n    ReferenceValue,\r\n    InputTypes,\r\n    InputDetailDateTime,\r\n    ReferenceValueItem,\r\n    ObjectPathHelper\r\n} from '@ngscaffolding/models';\r\n\r\n@Component({\r\n    selector: 'ngs-input-builder',\r\n    templateUrl: 'inputBuilder.component.html',\r\n    styleUrls: ['inputBuilder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InputBuilderComponent implements OnInit, OnChanges {\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private ref: ChangeDetectorRef,\r\n        public appSettings: AppSettingsService,\r\n        public appSettingsQuery: AppSettingsQuery,\r\n        private authQuery: UserAuthenticationQuery,\r\n        public refValuesService: ReferenceValuesService,\r\n        private componentLoader: ComponentLoaderService,\r\n        private authService: UserAuthenticationBase\r\n    ) {\r\n        this.editorOptions = new JsonEditorOptions();\r\n        this.editorOptions.modes = ['code', 'text', 'tree', 'view']; // set all allowed modes\r\n    }\r\n\r\n    @Input() inputBuilderDefinition: InputBuilderDefinition;\r\n    @Input() inputModel: any;\r\n\r\n    @Output() modelUpdated = new EventEmitter<object>();\r\n    @Output() valueUpdated = new EventEmitter<[string, object]>();\r\n    @Output() fileAttached = new EventEmitter<string>();\r\n\r\n    @Output() okClicked = new EventEmitter<[object, string]>();\r\n    @Output() cancelClicked = new EventEmitter<any>();\r\n\r\n    @ViewChildren('dropDown') dropDownChildren: QueryList<Dropdown>;\r\n\r\n    private clonedInputModel: any;\r\n    private fileContent: string;\r\n\r\n    filteredInputDetails: InputDetail[];\r\n\r\n    formBuilt = false;\r\n    form: FormGroup;\r\n    controlStyle = 'p-col-12';\r\n    containerClass = 'p-col-12'; // This changes to allow the help Icon\r\n    editorOptions: JsonEditorOptions;\r\n    formSubmitted = false;\r\n    dataSourceLookup = {};\r\n    maxFileSize: number;\r\n    allowedFileTypes: string;\r\n\r\n    public formRendered$: Observable<any>;\r\n\r\n    public getLabel(input: InputDetail) {\r\n        if (input.label) {\r\n            return input.label;\r\n        } else if (input.name) {\r\n            return input.name.replace(/([A-Z]+)/g, ' $1').replace(/([A-Z][a-z])/g, ' $1');\r\n        }\r\n    }\r\n\r\n    loadComponent(input: InputDynamic) {\r\n        this.componentLoader.loadComponent(input.angularComponent).then(element => {\r\n            this.elementRef.nativeElement.querySelector(`#${input.name}`).appendChild(element);\r\n        });\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n        this.formSubmitted = true;\r\n        if (this.form.valid) {\r\n            if (this.inputBuilderDefinition.okButtonCallBack) {\r\n                this.inputBuilderDefinition.okButtonCallBack(this.clonedInputModel);\r\n            }\r\n\r\n            this.okClicked.emit([this.clonedInputModel, this.fileContent]);\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        if (this.inputBuilderDefinition.cancelButtonCallBack) {\r\n            this.inputBuilderDefinition.cancelButtonCallBack(this.clonedInputModel);\r\n        }\r\n\r\n        this.cancelClicked.emit();\r\n    }\r\n\r\n    onCustom() {\r\n        if (this.inputBuilderDefinition.customButtonCallBack) {\r\n            this.inputBuilderDefinition.customButtonCallBack(this.clonedInputModel);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.inputModel && changes.inputModel.currentValue !== changes.inputModel.previousValue) {\r\n            this.formBuilt = false;\r\n        }\r\n\r\n        if (\r\n            changes.inputBuilderDefinition &&\r\n            changes.inputBuilderDefinition.currentValue !== changes.inputBuilderDefinition.previousValue\r\n        ) {\r\n            this.formBuilt = false;\r\n        }\r\n\r\n        this.buildForm();\r\n    }\r\n\r\n    private decorateInputModel() {\r\n        // Add in standard Values\r\n        const currentUser = this.authQuery.getValue().userDetails;\r\n        const now = new Date();\r\n        this.clonedInputModel['now'] = now;\r\n        this.clonedInputModel['zuluDate'] = new Date(\r\n            Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds())\r\n        );\r\n\r\n        this.clonedInputModel['userId'] = currentUser.userId;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.maxFileSize = this.appSettingsQuery.hasEntity(AppSettings.maximumFileSize)\r\n            ? this.appSettingsQuery.getEntity(AppSettings.maximumFileSize).value\r\n            : 999999;\r\n\r\n        this.allowedFileTypes = this.appSettingsQuery.hasEntity(AppSettings.allowedFileTypes)\r\n            ? this.appSettingsQuery.getEntity(AppSettings.allowedFileTypes).value\r\n            : '';\r\n    }\r\n\r\n    getContainerClass(inputDetail: InputDetail) {\r\n        return inputDetail.help ? 'p-col-11' : 'p-col-12';\r\n    }\r\n\r\n    attachFiles(event: any, input: InputDetail) {\r\n        if (this.inputBuilderDefinition.loadFileContent) {\r\n            if (event.files && event.files.length > 0) {\r\n                for (const file of event.files) {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.onload = () => {\r\n                        // this 'text' is the content of the file\r\n                        this.fileContent = fileReader.result.toString();\r\n                        this.fileAttached.emit(this.fileContent);\r\n                    };\r\n                    fileReader.readAsText(file);\r\n                }\r\n            }\r\n        } else {\r\n            this.fieldChanged(input, event.files[0]);\r\n        }\r\n    }\r\n\r\n    searchAutoComplete($event, input: InputDetailReferenceValues) {\r\n        this.loadDataSource(input, $event.query).subscribe(data => {\r\n            this.dataSourceLookup[input.name] = data.referenceValueItems;\r\n            setTimeout(() => {\r\n                this.ref.detectChanges();\r\n            }, 50);\r\n        });\r\n    }\r\n\r\n    private getDefaultValue(value: any) {\r\n        switch (value) {\r\n            case 'today':\r\n            case 'now':\r\n                return ZuluDateHelper.getGMTDate(new Date());\r\n                break;\r\n            case 'yesterday': {\r\n                const now = new Date();\r\n                return ZuluDateHelper.getGMTDate(new Date(now.setDate(now.getDate() - 1)));\r\n                break;\r\n            }\r\n            case 'tomorrow': {\r\n                const now = new Date();\r\n                return ZuluDateHelper.getGMTDate(new Date(now.setDate(now.getDate() + 1)));\r\n                break;\r\n            }\r\n            default:\r\n                return value;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        if (this.formBuilt || !this.inputBuilderDefinition || !this.inputModel) {\r\n            return;\r\n        }\r\n\r\n        this.formBuilt = true;\r\n\r\n        // Clone our inputModel\r\n        this.clonedInputModel = { ...this.inputModel };\r\n        this.decorateInputModel();\r\n\r\n        // Default to full width (changes if help found)\r\n        this.containerClass = 'p-col-12';\r\n\r\n        if (\r\n            this.inputBuilderDefinition.orientation === OrientationValues.Horizontal ||\r\n            this.inputBuilderDefinition.inputLocation === InputLocations.INLINE\r\n        ) {\r\n            if (this.inputBuilderDefinition.columnCount > 0 && this.inputBuilderDefinition.columnCount < 5) {\r\n                const colSize = 12 / this.inputBuilderDefinition.columnCount;\r\n                this.controlStyle = `p-col-${colSize}`;\r\n            }\r\n        } else {\r\n            this.controlStyle = 'p-col-12';\r\n        }\r\n        const formGroup = {};\r\n\r\n        const localModel = {};\r\n\r\n        const asyncGets: Array<Observable<ReferenceValue>> = [];\r\n\r\n        // Always have one to run\r\n        asyncGets.push(of(new ReferenceValue()));\r\n\r\n        if (this.inputBuilderDefinition.inputDetails) {\r\n            this.filteredInputDetails = this.authService.filterItemsByRole(this.inputBuilderDefinition.inputDetails);\r\n            for (const inputDetail of this.filteredInputDetails) {\r\n                // Get value from model and apply to new FormControl\r\n                let inputValue: any = null;\r\n                if (ObjectPathHelper.get(this.clonedInputModel, inputDetail.name)) {\r\n                    // If we have a passed value in the model, set the control value to this\r\n                    inputValue = this.parseValue(inputDetail, ObjectPathHelper.get(this.clonedInputModel, inputDetail.name));\r\n                } else if (inputDetail.value) {\r\n                    // If we have a value passed in the Input definition set the control value to this.\r\n                    inputValue = this.getDefaultValue(inputDetail.value);\r\n                    ObjectPathHelper.set(this.clonedInputModel, inputDetail.name, inputValue);\r\n                } else {\r\n                    // This ensures that the property is set if not passed in\r\n                    ObjectPathHelper.set(this.clonedInputModel, inputDetail.name, null);\r\n                }\r\n\r\n                const formControl = new FormControl(inputValue, this.mapValidators(inputDetail)); // Validators passed here too\r\n\r\n                // Readonly\r\n                if (inputDetail.readonly) {\r\n                    formControl.disable();\r\n                }\r\n\r\n                // Remember for dependecy check in a mo\r\n                ObjectPathHelper.set(localModel, inputDetail.name, inputValue);\r\n\r\n                if (inputDetail.type !== InputTypes.search) {\r\n                    formControl.valueChanges.subscribe(changes => {\r\n                        this.fieldChanged(inputDetail, changes);\r\n                    });\r\n                } else {\r\n                    // Handle debounce for search boxes\r\n                    formControl.valueChanges\r\n                        .pipe(\r\n                            debounceTime(500),\r\n                            distinctUntilChanged(),\r\n                            tap(text => {\r\n                                this.fieldChanged(inputDetail, text);\r\n                            })\r\n                        )\r\n                        .subscribe();\r\n                }\r\n\r\n                formGroup[inputDetail.name] = formControl;\r\n\r\n                if (inputDetail['datasourceItems'] && inputDetail['datasourceItems'].length > 0) {\r\n                    // Pre loaded datasourceItems\r\n                    this.dataSourceLookup[inputDetail.name] = inputDetail['datasourceItems'];\r\n                    this.manipulateValuesToObjects(formControl, inputDetail as InputDetailReferenceValues, inputValue);\r\n                } else if (\r\n                    inputDetail.type !== InputTypes.autocomplete &&\r\n                    inputDetail.hasOwnProperty('referenceValueName') &&\r\n                    (<InputDetailReferenceValues>inputDetail).referenceValueName\r\n                ) {\r\n                    // If Datasource, get the values\r\n\r\n                    // Do we need a seed value\r\n                    let seed = '';\r\n                    if ((<InputDetailReferenceValues>inputDetail).referenceValueSeedDependency) {\r\n                        seed = this.clonedInputModel[(<InputDetailReferenceValues>inputDetail).referenceValueSeedDependency];\r\n                    }\r\n                    asyncGets.push(\r\n                        this.loadDataSource(inputDetail, seed).pipe(\r\n                            tap(data => {\r\n                                this.dataSourceLookup[inputDetail.name] = data.referenceValueItems;\r\n                                this.manipulateValuesToObjects(formControl, inputDetail as InputDetailReferenceValues, inputValue);\r\n                            })\r\n                        )\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Now re-loop notifying any dependencies\r\n            for (const inputDetail of this.filteredInputDetails) {\r\n                this.checkForDependencies(inputDetail, localModel[inputDetail.name]);\r\n            }\r\n        }\r\n\r\n        this.formRendered$ = forkJoin(asyncGets);\r\n        this.formRendered$.subscribe(results => {\r\n            console.log('Form rendering');\r\n            this.form = new FormGroup(formGroup);\r\n        });\r\n\r\n        const formValidators = [];\r\n        if (this.inputBuilderDefinition.customValidators) {\r\n            this.inputBuilderDefinition.customValidators.forEach(validator => {\r\n                formValidators.push({});\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup(formGroup, formValidators);\r\n    }\r\n\r\n    private manipulateValuesToObjects(formControl: FormControl, inputDetail: InputDetailReferenceValues, inputValue: any) {\r\n        if (inputDetail.type === InputTypes.multiselect) {\r\n            if (inputValue) {\r\n                const foundValues = this.dataSourceLookup[inputDetail.name].filter(ds => inputValue.includes(ds.value));\r\n                setTimeout(_ => {\r\n                    formControl.setValue(foundValues, {\r\n                        onlySelf: true,\r\n                        emitEvent: false\r\n                    });\r\n                }, 10);\r\n            }\r\n        } else {\r\n            // Now we have the values, find the ReferenceValue that matches the inputValue from above\r\n            if (this.clonedInputModel[inputDetail.name] && this.dataSourceLookup[inputDetail.name]) {\r\n                if (inputValue) {\r\n                    let foundInputValue;\r\n                    if (inputValue === 'first') {\r\n                        foundInputValue = this.dataSourceLookup[inputDetail.name][0];\r\n                    } else {\r\n                        foundInputValue = this.dataSourceLookup[inputDetail.name] // tslint:disable-next-line:triple-equals\r\n                            .find(ds => ds.value && ds.value.toString() == inputValue.toString()); // Full on corecion\r\n                    }\r\n                    if (foundInputValue) {\r\n                        setTimeout(_ => {\r\n                            formControl.setValue(foundInputValue, {\r\n                                onlySelf: true,\r\n                                emitEvent: false\r\n                            });\r\n                        }, 10);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseValue(inputDetail: InputDetail, value: string): any {\r\n        switch (inputDetail.type) {\r\n            case InputTypes.checkbox:\r\n            case InputTypes.switch: {\r\n                return value.toString() === 'true' || value.toString() === 'True' || value.toString() === '1';\r\n            }\r\n            case InputTypes.number:\r\n            case InputTypes.rating:\r\n            case InputTypes.spinner: {\r\n                return Number(value);\r\n            }\r\n            case InputTypes.date:\r\n            case InputTypes.datetime:\r\n            case InputTypes.time: {\r\n                const valueAsDate = new Date(value);\r\n                if ((<InputDetailDateTime>inputDetail).forceUTC) {\r\n                    return ZuluDateHelper.getGMTDate(valueAsDate);\r\n                } else {\r\n                    return valueAsDate;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Default just pass back original\r\n        return value;\r\n    }\r\n\r\n    private fieldChanged(inputDetail: InputDetail, value: any) {\r\n        let returnedValue: any;\r\n\r\n        // If we are any 'Object' type input just return the object. Simples.\r\n        if (inputDetail.type && inputDetail.type.endsWith('object')) {\r\n            returnedValue = value;\r\n        } else if (inputDetail.type === InputTypes.fileattach) {\r\n            returnedValue = value;\r\n        } else if (\r\n            (inputDetail.type && inputDetail.type === InputTypes.date) ||\r\n            inputDetail.type === InputTypes.datetime ||\r\n            inputDetail.type === InputTypes.time\r\n        ) {\r\n            if ((<InputDetailDateTime>inputDetail).forceUTC) {\r\n                returnedValue = ZuluDateHelper.setGMTDate(value);\r\n            } else {\r\n                returnedValue = value;\r\n            }\r\n        } else if (inputDetail.type === InputTypes.spinner) {\r\n            returnedValue = Number(value);\r\n        } else if (inputDetail.type && inputDetail.type === InputTypes.multiselect) {\r\n            // This is an array\r\n            if (Array.isArray(value)) {\r\n                const asArray = value as Array<ReferenceValueItem>;\r\n                returnedValue = asArray.map(refVal => refVal.value);\r\n            } else {\r\n                returnedValue = [];\r\n            }\r\n        } else {\r\n            if (value) {\r\n                returnedValue = value.toString();\r\n            } else {\r\n                returnedValue = null;\r\n            }\r\n\r\n            if (value && value.hasOwnProperty('value')) {\r\n                returnedValue = value.value;\r\n            } else {\r\n                returnedValue = value;\r\n            }\r\n        }\r\n\r\n        // Update listeners\r\n        this.valueUpdated.emit([inputDetail.name, returnedValue]);\r\n\r\n        // Do We need to notify another input of this change?\r\n        this.checkForDependencies(inputDetail, returnedValue);\r\n\r\n        // Flatten out Objects to value\r\n        const updatedModel = Object.assign({}, this.clonedInputModel);\r\n\r\n        updatedModel[inputDetail.name] = returnedValue;\r\n\r\n        // Tell subscribers we have changes\r\n        this.modelUpdated.emit(updatedModel);\r\n        this.clonedInputModel = updatedModel;\r\n    }\r\n\r\n    private checkForDependencies(inputDetail: InputDetail, updatedValue: any) {\r\n        this.filteredInputDetails.forEach(input => {\r\n            if (\r\n                this.form &&\r\n                input.hasOwnProperty('referenceValueSeedDependency') &&\r\n                (<InputDetailReferenceValues>input).referenceValueSeedDependency &&\r\n                (<InputDetailReferenceValues>input).referenceValueSeedDependency === inputDetail.name\r\n            ) {\r\n                this.loadDataSource(input, updatedValue, (<InputDetailReferenceValues>input).referenceValueChildLevel).subscribe(data => {\r\n                    this.dataSourceLookup[input.name] = data.referenceValueItems;\r\n\r\n                    const formControl = this.form.controls[inputDetail.name] as FormControl;\r\n                    this.manipulateValuesToObjects(formControl, inputDetail as InputDetailReferenceValues, formControl.value);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadDataSource(inputDetail: InputDetail, seed: string = '', childDepth = 0): Observable<ReferenceValue> {\r\n        return this.refValuesService.getReferenceValue((<InputDetailReferenceValues>inputDetail).referenceValueName, seed, childDepth);\r\n    }\r\n\r\n    private mapValidators(inputDetail: InputDetail) {\r\n        const formValidators = [];\r\n\r\n        if (inputDetail) {\r\n            // Required\r\n            if (inputDetail.validateRequired) {\r\n                formValidators.push(Validators.required);\r\n            }\r\n\r\n            // RequiredTrue\r\n            if (inputDetail.validateRequiredTrue) {\r\n                formValidators.push(Validators.requiredTrue);\r\n            }\r\n\r\n            // EMail\r\n            if (inputDetail.validateEmail) {\r\n                formValidators.push(Validators.email);\r\n            }\r\n\r\n            // Pattern\r\n            if (inputDetail.validatePattern) {\r\n                formValidators.push(Validators.pattern(inputDetail.validatePattern));\r\n            }\r\n\r\n            // Min Length\r\n            if (inputDetail.validateMinLength) {\r\n                formValidators.push(Validators.minLength(inputDetail.validateMinLength));\r\n                if (!inputDetail.validateMinLengthMessage) {\r\n                    inputDetail.validateMinLengthMessage = `${inputDetail.label} must be a minimum length of ${inputDetail.validateMinLength}`;\r\n                }\r\n            }\r\n\r\n            // Max Length\r\n            if (inputDetail.validateMaxLength) {\r\n                formValidators.push(Validators.maxLength(inputDetail.validateMaxLength));\r\n                if (!inputDetail.validateMaxLengthMessage) {\r\n                    inputDetail.validateMaxLengthMessage = `${inputDetail.label} must be a max length of ${inputDetail.validateMinLength}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return formValidators;\r\n    }\r\n}\r\n","<p-dialog [(visible)]=\"isShown\" [style]=\"styleValues\">\r\n    <p-header>\r\n        {{ inputBuilderDefinition?.title }}\r\n    </p-header>\r\n    <div class=\"ui-fluid\" #popupContainer [style.width.px]=\"setWidth\">\r\n        <ngs-input-builder\r\n            *ngIf=\"isShown\"\r\n            (modelUpdated)=\"notifyChanged($event)\"\r\n            (okClicked)=\"onOkClicked($event)\"\r\n            (cancelClicked)=\"onCancelClicked()\"\r\n            (modelUpdated)=\"onModelUpdated($event)\"\r\n            (valueUpdated)=\"onValueUpdated()\"\r\n            [inputBuilderDefinition]=\"inputBuilderDefinition\"\r\n            [inputModel]=\"inputModel\"\r\n        ></ngs-input-builder>\r\n    </div>\r\n</p-dialog>\r\n","import { Component, Input, Output, EventEmitter, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { InputBuilderDefinition } from '@ngscaffolding/models';\r\n\r\n@Component({\r\n    selector: 'ngs-input-builder-popup',\r\n    templateUrl: 'inputBuilderPopup.component.html',\r\n    styleUrls: ['inputBuilderPopup.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InputBuilderPopupComponent implements OnDestroy {\r\n    @Input() inputBuilderDefinition: InputBuilderDefinition;\r\n    @Input() attachMouseClick: boolean;\r\n    @Input() inputModel: any;\r\n    @Input() setWidth: number;\r\n    @Input() setTop: number;\r\n    @Input() setLeft: number;\r\n\r\n    @Output() modelUpdated = new EventEmitter<any>();\r\n    @Output() valueUpdated = new EventEmitter<[string, any]>();\r\n\r\n    @Output() okClicked = new EventEmitter<any>();\r\n    @Output() cancelClicked = new EventEmitter<any>();\r\n\r\n    isShown: boolean;\r\n\r\n    private mouseSubscription: Subscription;\r\n    private mouseX: number;\r\n    private mouseY: number;\r\n    private screenWidth: number;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {\r\n        this.mouseSubscription = fromEvent(document.body, 'mousemove').subscribe(e => {\r\n            if (this.attachMouseClick) {\r\n                this.screenWidth = window.innerWidth;\r\n                this.mouseY = e['pageY'];\r\n                this.mouseX = e['pageX'];\r\n                if (this.setWidth) {\r\n                    if (this.mouseX + this.setWidth > this.screenWidth) {\r\n                        this.setLeft = this.mouseX - this.setWidth;\r\n                    } else {\r\n                        this.setLeft = this.mouseX;\r\n                    }\r\n                    this.setTop = this.mouseY;\r\n                } else {\r\n                    this.setLeft = this.mouseX;\r\n                    this.setTop = this.mouseY;\r\n                }\r\n\r\n                if (!this.isShown) {\r\n                    const newStyle: any = { overflow: 'visible', position: 'absolute' };\r\n\r\n                    newStyle.top = `${this.setTop}px`;\r\n                    newStyle.left = `${this.setLeft}px`;\r\n\r\n                    this.styleValues = newStyle;\r\n\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    styleValues = {\r\n        overflow: 'visible'\r\n    };\r\n\r\n    showPopup() {\r\n        this.isShown = true;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.mouseSubscription) {\r\n            this.mouseSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    notifyChanged(event: any) {}\r\n\r\n    onModelUpdated(model: any) {\r\n        this.modelUpdated.emit(model);\r\n    }\r\n\r\n    onValueUpdated() {}\r\n\r\n    onOkClicked(model: any) {\r\n        this.okClicked.emit(model);\r\n    }\r\n    onCancelClicked() {\r\n        this.cancelClicked.emit(null);\r\n        this.isShown = false;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@ngscaffolding/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InputBuilderComponent } from './inputBuilder/inputBuilder.component';\nimport { InputBuilderPopupComponent } from './inputBuilderPopup/inputBuilderPopup.component';\n\nimport { NgJsonEditorModule } from 'ang-jsoneditor';\n\n// Components\nimport { EditableTitleComponent } from './components/editableTitle/editableTitle.component';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { DialogModule } from 'primeng/dialog';\nimport { EditorModule } from 'primeng/editor';\nimport { ListboxModule } from 'primeng/listbox';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { SliderModule } from 'primeng/slider';\nimport { ChipsModule } from 'primeng/chips';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { SpinnerModule } from 'primeng/spinner';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { PasswordModule } from 'primeng/password';\nimport { RatingModule } from 'primeng/rating';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'primeng/api';\n\n@NgModule({\n    declarations: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        AutoCompleteModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SharedModule,\n        EditorModule,\n        ListboxModule,\n        SelectButtonModule,\n        ColorPickerModule,\n        SliderModule,\n        ChipsModule,\n        ReactiveFormsModule,\n        InputSwitchModule,\n        InputTextModule,\n        InputMaskModule,\n        SpinnerModule,\n        CalendarModule,\n        TriStateCheckboxModule,\n        InputTextareaModule,\n        CheckboxModule,\n        RadioButtonModule,\n        DropdownModule,\n        PasswordModule,\n        RatingModule,\n        KeyFilterModule,\n        MultiSelectModule,\n        ToggleButtonModule,\n        TooltipModule,\n        NgJsonEditorModule,\n        FileUploadModule,\n        TranslateModule.forChild(),\n    ],\n    exports: [EditableTitleComponent, InputBuilderComponent, InputBuilderPopupComponent],\n})\nexport class InputBuilderModule {\n    static forRoot(): ModuleWithProviders<InputBuilderModule> {\n        return {\n            ngModule: InputBuilderModule,\n        };\n    }\n}\n","/*\n * Public API Surface of inputbuilder\n */\n\nexport { EditableTitleComponent } from './lib/components/editableTitle/editableTitle.component';\nexport { InputBuilderComponent } from './lib/inputBuilder/inputBuilder.component';\nexport { InputBuilderPopupComponent } from './lib/inputBuilderPopup/inputBuilderPopup.component';\nexport { InputBuilderModule } from './lib/inputbuilder.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵstyleMap","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵclassProp","i0.ɵɵstyleProp"],"mappings":"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"}