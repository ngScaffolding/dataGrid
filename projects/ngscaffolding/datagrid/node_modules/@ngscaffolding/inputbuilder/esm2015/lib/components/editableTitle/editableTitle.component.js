import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "primeng/button";
import * as i3 from "@angular/forms";
import * as i4 from "primeng/inputtext";
const _c0 = ["inputTitle"];
function EditableTitleComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "span", 3);
    i0.ɵɵlistener("click", function EditableTitleComponent_span_0_Template_span_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.mouseClicked(); })("mouseleave", function EditableTitleComponent_span_0_Template_span_mouseleave_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.mouseLeave(); })("mouseenter", function EditableTitleComponent_span_0_Template_span_mouseenter_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.mouseOver(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate(ctx_r0.title);
} }
function EditableTitleComponent_button_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "button", 4);
} }
function EditableTitleComponent_input_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "input", 5, 6);
    i0.ɵɵlistener("blur", function EditableTitleComponent_input_2_Template_input_blur_0_listener() { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.isEditing = false; })("ngModelChange", function EditableTitleComponent_input_2_Template_input_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.editTitle = $event; })("change", function EditableTitleComponent_input_2_Template_input_change_0_listener() { i0.ɵɵrestoreView(_r9); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.textChanged(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngModel", ctx_r2.editTitle);
} }
export class EditableTitleComponent {
    constructor() {
        this.titleChanged = new EventEmitter();
        this.displayIcon = false;
        this.isEditing = false;
    }
    ngOnChanges(changes) {
        if (changes.title) {
            this.editTitle = changes.title.currentValue;
            this.applyObject(changes.configObject);
        }
        if (changes.configObject) {
            this.applyObject(changes.configObject);
        }
    }
    // update Title with string replacement @@key## style
    applyObject(config) {
        let newTitle = this.title;
        if (config) {
            for (const key in config) {
                if (config.hasOwnProperty(key)) {
                    newTitle = newTitle.replace(`@@${key}##`, config[key]);
                }
            }
            this.editTitle = newTitle;
        }
    }
    mouseOver() {
        if (!this.readOnly) {
            this.displayIcon = true;
        }
    }
    mouseLeave() {
        this.displayIcon = false;
    }
    mouseClicked() {
        if (!this.readOnly) {
            this.isEditing = true;
            this.displayIcon = false;
        }
        setTimeout(() => {
            // this will make the execution after the above boolean has changed
            this.inputTitleElement.nativeElement.focus();
            this.inputTitleElement.nativeElement.select();
        }, 0);
    }
    textChanged() {
        this.titleChanged.emit(this.editTitle);
    }
}
EditableTitleComponent.ɵfac = function EditableTitleComponent_Factory(t) { return new (t || EditableTitleComponent)(); };
EditableTitleComponent.ɵcmp = i0.ɵɵdefineComponent({ type: EditableTitleComponent, selectors: [["ngs-editable-title"]], viewQuery: function EditableTitleComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputTitleElement = _t.first);
    } }, inputs: { title: "title", configObject: "configObject", readOnly: "readOnly" }, outputs: { titleChanged: "titleChanged" }, features: [i0.ɵɵNgOnChangesFeature], decls: 3, vars: 3, consts: [["class", "title-display", 3, "click", "mouseleave", "mouseenter", 4, "ngIf"], ["pButton", "", "class", "p-button-rounded p-button-info p-button-text p-mr-2 p-mb-2", "type", "button", "icon", "pi pi-pencil", 4, "ngIf"], ["class", "large-edit", "type", "text", "pInputText", "", 3, "ngModel", "blur", "ngModelChange", "change", 4, "ngIf"], [1, "title-display", 3, "click", "mouseleave", "mouseenter"], ["pButton", "", "type", "button", "icon", "pi pi-pencil", 1, "p-button-rounded", "p-button-info", "p-button-text", "p-mr-2", "p-mb-2"], ["type", "text", "pInputText", "", 1, "large-edit", 3, "ngModel", "blur", "ngModelChange", "change"], ["inputTitle", ""]], template: function EditableTitleComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, EditableTitleComponent_span_0_Template, 2, 1, "span", 0);
        i0.ɵɵtemplate(1, EditableTitleComponent_button_1_Template, 1, 0, "button", 1);
        i0.ɵɵtemplate(2, EditableTitleComponent_input_2_Template, 2, 1, "input", 2);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", !ctx.isEditing);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.displayIcon);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.isEditing);
    } }, directives: [i1.NgIf, i2.ButtonDirective, i3.DefaultValueAccessor, i4.InputText, i3.NgControlStatus, i3.NgModel], styles: [".toolbarButton[_ngcontent-%COMP%]{border-radius:0x!important;margin-left:2px}.large-edit[_ngcontent-%COMP%]{font-size:20px;width:50%}.tipIcon[_ngcontent-%COMP%]{font-size:12px;margin-left:6px;top:-4px}.title-display[_ngcontent-%COMP%]{margin-left:.5em}"] });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(EditableTitleComponent, [{
        type: Component,
        args: [{
                selector: 'ngs-editable-title',
                templateUrl: 'editableTitle.component.html',
                styleUrls: ['editableTitle.component.scss']
            }]
    }], null, { inputTitleElement: [{
            type: ViewChild,
            args: ['inputTitle', { static: false }]
        }], title: [{
            type: Input
        }], configObject: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], titleChanged: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdGFibGVUaXRsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmdzY2FmZm9sZGluZy9pbnB1dGJ1aWxkZXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZWRpdGFibGVUaXRsZS9lZGl0YWJsZVRpdGxlLmNvbXBvbmVudC50cyIsImxpYi9jb21wb25lbnRzL2VkaXRhYmxlVGl0bGUvZWRpdGFibGVUaXRsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFzQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBb0MsU0FBUyxFQUFjLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7SUNBcEosK0JBQStIO0lBQWhGLDJMQUF3QixzTEFBQSxxTEFBQTtJQUF3RCxZQUFTO0lBQUEsaUJBQU87OztJQUFoQixlQUFTO0lBQVQsa0NBQVM7OztJQUV4SSw0QkFBa0o7Ozs7SUFFbEosbUNBQ0E7SUFEb0UscUxBQWtCLEtBQUssSUFBQyw0TUFBQSxtTEFBQTtJQUE1RixpQkFDQTs7O0lBRDZGLDBDQUF1Qjs7QURHcEgsTUFBTSxPQUFPLHNCQUFzQjtJQUxuQztRQVdZLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUdwRCxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUNwQixjQUFTLEdBQUcsS0FBSyxDQUFDO0tBaURuQjtJQS9DQyxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUM7WUFDNUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDeEM7UUFDRCxJQUFJLE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDeEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDeEM7SUFDSCxDQUFDO0lBRUQscURBQXFEO0lBQzdDLFdBQVcsQ0FBQyxNQUFXO1FBQzdCLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFFMUIsSUFBSSxNQUFNLEVBQUU7WUFDVixLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRTtnQkFDeEIsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO29CQUM5QixRQUFRLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2lCQUN4RDthQUNGO1lBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztJQUNELFVBQVU7UUFDUixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUMzQixDQUFDO0lBQ0QsWUFBWTtRQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQzFCO1FBQ0QsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLG1FQUFtRTtZQUNuRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQzdDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDaEQsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDekMsQ0FBQzs7NEZBMURVLHNCQUFzQjsyREFBdEIsc0JBQXNCOzs7Ozs7UUNQbkMseUVBQStJO1FBRS9JLDZFQUFrSjtRQUVsSiwyRUFDQTs7UUFMTyxxQ0FBZ0I7UUFFZCxlQUFpQjtRQUFqQixzQ0FBaUI7UUFFYSxlQUFlO1FBQWYsb0NBQWU7O2tEREd6QyxzQkFBc0I7Y0FMbEMsU0FBUztlQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLFdBQVcsRUFBRSw4QkFBOEI7Z0JBQzNDLFNBQVMsRUFBRSxDQUFDLDhCQUE4QixDQUFDO2FBQzVDO2dCQUUyQyxpQkFBaUI7a0JBQTFELFNBQVM7bUJBQUMsWUFBWSxFQUFFLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQztZQUMvQixLQUFLO2tCQUFiLEtBQUs7WUFDRyxZQUFZO2tCQUFwQixLQUFLO1lBQ0csUUFBUTtrQkFBaEIsS0FBSztZQUVJLFlBQVk7a0JBQXJCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgZm9yd2FyZFJlZiwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25ncy1lZGl0YWJsZS10aXRsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICdlZGl0YWJsZVRpdGxlLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnZWRpdGFibGVUaXRsZS5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBFZGl0YWJsZVRpdGxlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICBAVmlld0NoaWxkKCdpbnB1dFRpdGxlJywge3N0YXRpYzogZmFsc2V9KSBpbnB1dFRpdGxlRWxlbWVudDogRWxlbWVudFJlZjtcclxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGNvbmZpZ09iamVjdDogYW55O1xyXG4gIEBJbnB1dCgpIHJlYWRPbmx5OiBib29sZWFuO1xyXG5cclxuICBAT3V0cHV0KCkgdGl0bGVDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG4gIGVkaXRUaXRsZTogc3RyaW5nO1xyXG4gIGRpc3BsYXlJY29uID0gZmFsc2U7XHJcbiAgaXNFZGl0aW5nID0gZmFsc2U7XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmIChjaGFuZ2VzLnRpdGxlKSB7XHJcbiAgICAgIHRoaXMuZWRpdFRpdGxlID0gY2hhbmdlcy50aXRsZS5jdXJyZW50VmFsdWU7XHJcbiAgICAgIHRoaXMuYXBwbHlPYmplY3QoY2hhbmdlcy5jb25maWdPYmplY3QpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXMuY29uZmlnT2JqZWN0KSB7XHJcbiAgICAgIHRoaXMuYXBwbHlPYmplY3QoY2hhbmdlcy5jb25maWdPYmplY3QpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gdXBkYXRlIFRpdGxlIHdpdGggc3RyaW5nIHJlcGxhY2VtZW50IEBAa2V5IyMgc3R5bGVcclxuICBwcml2YXRlIGFwcGx5T2JqZWN0KGNvbmZpZzogYW55KSB7XHJcbiAgICBsZXQgbmV3VGl0bGUgPSB0aGlzLnRpdGxlO1xyXG5cclxuICAgIGlmIChjb25maWcpIHtcclxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gY29uZmlnKSB7XHJcbiAgICAgICAgaWYgKGNvbmZpZy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICBuZXdUaXRsZSA9IG5ld1RpdGxlLnJlcGxhY2UoYEBAJHtrZXl9IyNgLCBjb25maWdba2V5XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuZWRpdFRpdGxlID0gbmV3VGl0bGU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBtb3VzZU92ZXIoKSB7XHJcbiAgICBpZiAoIXRoaXMucmVhZE9ubHkpIHtcclxuICAgICAgdGhpcy5kaXNwbGF5SWNvbiA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIG1vdXNlTGVhdmUoKSB7XHJcbiAgICB0aGlzLmRpc3BsYXlJY29uID0gZmFsc2U7XHJcbiAgfVxyXG4gIG1vdXNlQ2xpY2tlZCgpIHtcclxuICAgIGlmICghdGhpcy5yZWFkT25seSkge1xyXG4gICAgICB0aGlzLmlzRWRpdGluZyA9IHRydWU7XHJcbiAgICAgIHRoaXMuZGlzcGxheUljb24gPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAvLyB0aGlzIHdpbGwgbWFrZSB0aGUgZXhlY3V0aW9uIGFmdGVyIHRoZSBhYm92ZSBib29sZWFuIGhhcyBjaGFuZ2VkXHJcbiAgICAgIHRoaXMuaW5wdXRUaXRsZUVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xyXG4gICAgICB0aGlzLmlucHV0VGl0bGVFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc2VsZWN0KCk7XHJcbiAgICB9LCAwKTtcclxuICB9XHJcblxyXG4gIHRleHRDaGFuZ2VkKCkge1xyXG4gICAgdGhpcy50aXRsZUNoYW5nZWQuZW1pdCh0aGlzLmVkaXRUaXRsZSk7XHJcbiAgfVxyXG59XHJcbiIsIjxzcGFuICpuZ0lmPVwiIWlzRWRpdGluZ1wiIGNsYXNzPVwidGl0bGUtZGlzcGxheVwiIChjbGljayk9XCJtb3VzZUNsaWNrZWQoKVwiIChtb3VzZWxlYXZlKT1cIm1vdXNlTGVhdmUoKVwiIChtb3VzZWVudGVyKT1cIm1vdXNlT3ZlcigpXCI+e3t0aXRsZX19PC9zcGFuPlxyXG5cclxuPGJ1dHRvbiAqbmdJZj1cImRpc3BsYXlJY29uXCIgcEJ1dHRvbiBjbGFzcz1cInAtYnV0dG9uLXJvdW5kZWQgcC1idXR0b24taW5mbyBwLWJ1dHRvbi10ZXh0IHAtbXItMiBwLW1iLTJcIiB0eXBlPVwiYnV0dG9uXCIgaWNvbj1cInBpIHBpLXBlbmNpbFwiPjwvYnV0dG9uPlxyXG5cclxuPGlucHV0ICNpbnB1dFRpdGxlIGNsYXNzPVwibGFyZ2UtZWRpdFwiICpuZ0lmPVwiaXNFZGl0aW5nXCIgdHlwZT1cInRleHRcIiAoYmx1cik9XCJpc0VkaXRpbmc9ZmFsc2VcIiBbKG5nTW9kZWwpXT1cImVkaXRUaXRsZVwiIChjaGFuZ2UpPVwidGV4dENoYW5nZWQoKVwiIHBJbnB1dFRleHQ+XHJcbiJdfQ==