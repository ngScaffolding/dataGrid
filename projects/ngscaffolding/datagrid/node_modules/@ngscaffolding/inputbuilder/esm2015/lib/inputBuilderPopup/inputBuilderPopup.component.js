import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { fromEvent } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "primeng/dialog";
import * as i2 from "primeng/api";
import * as i3 from "@angular/common";
import * as i4 from "../inputBuilder/inputBuilder.component";
function InputBuilderPopupComponent_ngs_input_builder_5_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "ngs-input-builder", 4);
    i0.ɵɵlistener("modelUpdated", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_modelUpdated_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.notifyChanged($event); })("okClicked", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_okClicked_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onOkClicked($event); })("cancelClicked", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_cancelClicked_0_listener() { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.onCancelClicked(); })("modelUpdated", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_modelUpdated_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.onModelUpdated($event); })("valueUpdated", function InputBuilderPopupComponent_ngs_input_builder_5_Template_ngs_input_builder_valueUpdated_0_listener() { i0.ɵɵrestoreView(_r3); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onValueUpdated(); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("inputBuilderDefinition", ctx_r1.inputBuilderDefinition)("inputModel", ctx_r1.inputModel);
} }
export class InputBuilderPopupComponent {
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
        this.modelUpdated = new EventEmitter();
        this.valueUpdated = new EventEmitter();
        this.okClicked = new EventEmitter();
        this.cancelClicked = new EventEmitter();
        this.styleValues = {
            overflow: 'visible'
        };
        this.mouseSubscription = fromEvent(document.body, 'mousemove').subscribe(e => {
            if (this.attachMouseClick) {
                this.screenWidth = window.innerWidth;
                this.mouseY = e['pageY'];
                this.mouseX = e['pageX'];
                if (this.setWidth) {
                    if (this.mouseX + this.setWidth > this.screenWidth) {
                        this.setLeft = this.mouseX - this.setWidth;
                    }
                    else {
                        this.setLeft = this.mouseX;
                    }
                    this.setTop = this.mouseY;
                }
                else {
                    this.setLeft = this.mouseX;
                    this.setTop = this.mouseY;
                }
                if (!this.isShown) {
                    const newStyle = { overflow: 'visible', position: 'absolute' };
                    newStyle.top = `${this.setTop}px`;
                    newStyle.left = `${this.setLeft}px`;
                    this.styleValues = newStyle;
                    this.changeDetector.detectChanges();
                }
            }
        });
    }
    showPopup() {
        this.isShown = true;
        this.changeDetector.markForCheck();
    }
    ngOnDestroy() {
        if (this.mouseSubscription) {
            this.mouseSubscription.unsubscribe();
        }
    }
    notifyChanged(event) { }
    onModelUpdated(model) {
        this.modelUpdated.emit(model);
    }
    onValueUpdated() { }
    onOkClicked(model) {
        this.okClicked.emit(model);
    }
    onCancelClicked() {
        this.cancelClicked.emit(null);
        this.isShown = false;
        this.changeDetector.markForCheck();
    }
}
InputBuilderPopupComponent.ɵfac = function InputBuilderPopupComponent_Factory(t) { return new (t || InputBuilderPopupComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
InputBuilderPopupComponent.ɵcmp = i0.ɵɵdefineComponent({ type: InputBuilderPopupComponent, selectors: [["ngs-input-builder-popup"]], inputs: { inputBuilderDefinition: "inputBuilderDefinition", attachMouseClick: "attachMouseClick", inputModel: "inputModel", setWidth: "setWidth", setTop: "setTop", setLeft: "setLeft" }, outputs: { modelUpdated: "modelUpdated", valueUpdated: "valueUpdated", okClicked: "okClicked", cancelClicked: "cancelClicked" }, decls: 6, vars: 7, consts: [[3, "visible", "visibleChange"], [1, "ui-fluid"], ["popupContainer", ""], [3, "inputBuilderDefinition", "inputModel", "modelUpdated", "okClicked", "cancelClicked", "valueUpdated", 4, "ngIf"], [3, "inputBuilderDefinition", "inputModel", "modelUpdated", "okClicked", "cancelClicked", "valueUpdated"]], template: function InputBuilderPopupComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "p-dialog", 0);
        i0.ɵɵlistener("visibleChange", function InputBuilderPopupComponent_Template_p_dialog_visibleChange_0_listener($event) { return ctx.isShown = $event; });
        i0.ɵɵelementStart(1, "p-header");
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(3, "div", 1, 2);
        i0.ɵɵtemplate(5, InputBuilderPopupComponent_ngs_input_builder_5_Template, 1, 2, "ngs-input-builder", 3);
        i0.ɵɵelementEnd();
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵstyleMap(ctx.styleValues);
        i0.ɵɵproperty("visible", ctx.isShown);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", ctx.inputBuilderDefinition == null ? null : ctx.inputBuilderDefinition.title, " ");
        i0.ɵɵadvance(1);
        i0.ɵɵstyleProp("width", ctx.setWidth, "px");
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.isShown);
    } }, directives: [i1.Dialog, i2.Header, i3.NgIf, i4.InputBuilderComponent], styles: [""], changeDetection: 0 });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(InputBuilderPopupComponent, [{
        type: Component,
        args: [{
                selector: 'ngs-input-builder-popup',
                templateUrl: 'inputBuilderPopup.component.html',
                styleUrls: ['inputBuilderPopup.component.scss'],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { inputBuilderDefinition: [{
            type: Input
        }], attachMouseClick: [{
            type: Input
        }], inputModel: [{
            type: Input
        }], setWidth: [{
            type: Input
        }], setTop: [{
            type: Input
        }], setLeft: [{
            type: Input
        }], modelUpdated: [{
            type: Output
        }], valueUpdated: [{
            type: Output
        }], okClicked: [{
            type: Output
        }], cancelClicked: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,